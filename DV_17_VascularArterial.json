{
  "chapter_name": "Vascular—Arterial",
  "questions": [
    {
      "id": 1,
      "question_type": "mcq",
      "question": "Which of the following is true regarding the timing and/or indications for carotid endarterectomy (CEA) in a patient with a stroke?",
      "options": [
        "A. CEA is indicated in the setting of a disabling stroke.",
        "B. CEA is best performed within 6 to 8 weeks after the stroke.",
        "C. CEA is best performed 3 months after the stroke.",
        "D. CEA should be performed urgently.",
        "E. CEA is best performed within 2 weeks of the stroke."
      ],
      "answer": "E",
      "explanation": "- The timing of CEA after a stroke is controversial; a delay increases the risk of a recurrent stroke, with the highest risk within the first month.\n- Operating too early (within 24 hours) creates a potential risk of reperfusion injury, especially if a large infarction is present on CT and hypertension cannot be controlled.\n- The North American Symptomatic Carotid Endarterectomy Trial (NASCET) showed postoperative intracranial hemorrhage in only 0.2% of patients.\n- CEA was routinely delayed 4 to 6 weeks, but subsequent NASCET analysis showed that patients with a stable, nondisabling acute stroke, a normal CT scan, and a normal level of consciousness can safely undergo CEA shortly after diagnosis, once symptoms have stabilized, and preoperative risk assessment is complete.\n- The operation is not urgent (D).\n- Delaying surgery for 6 weeks or more eliminates much of the benefit of CEA because the risk of recurrent stroke is greatest early on (B, C).\n- Current treatment guidelines recommend CEA for patients with nondisabling strokes preferably within 2 weeks of the primary stroke.\n- Patients with a large stroke on CT scan or those with a midline shift may be at higher risk of reperfusion injury, particularly if they have a depressed level of consciousness; operation should be delayed until these patients improve and plateau in their clinical recovery (4 to 6 weeks).\n- If the stroke is completely disabling (A), there is little motor cortex to protect from future stroke, so CEA is not indicated.\n- Patients with severe neurologic deficits, without meaningful recovery or marked alteration of consciousness, are not candidates for CEA because the goal is to prevent further damage to the ipsilateral motor cortex."
    },
    {
      "id": 2,
      "question_type": "mcq",
      "question": "Which of the following is true regarding CEA for asymptomatic internal carotid artery (ICA) stenosis?",
      "options": [
        "A. According to the Asymptomatic Carotid Atherosclerosis Study (ACAS), CEA reduces the 5-year risk of stroke and death from 20% to 10% in patients with high-grade stenosis.",
        "B. It is beneficial provided the perioperative stroke and death rates are less than 10%.",
        "C. ACAS involved using both aspirin and a lipid-lowering agent in the medical arm of the trial.",
        "D. It is indicated for patients with ICA stenosis ranging from 50% to 100%.",
        "E. There is less benefit in women."
      ],
      "answer": "E",
      "explanation": "- The ACAS randomized patients with asymptomatic carotid artery stenosis of 60% to 99% to either CEA and aspirin or aspirin alone (C).\n- The study was interrupted due to significant benefit for CEA patients.\n- A relative reduction in stroke rate by 50%, from 11% to 5% at 5 years, was observed in patients undergoing CEA (A).\n- The Asymptomatic Carotid Surgery Trial confirmed ACAS findings: for 60% to 99% stenosis, the net 5-year risk was 6.4% for CEA vs 11.8% for no surgery (net absolute gain of 5.4%, relative risk reduction of 46%).\n- The trial showed that CEA patients were much less likely to have a fatal or disabling stroke (3.5% in surgery group vs 6.1% in no-surgery group).\n- Studies found less or no benefit in women (E); greatest benefit in men younger than 75 years of age.\n- CEA for asymptomatic stenosis will only benefit if the combined stroke and death rate is less than 3% (B), which depends on patient risk and surgeon skill.\n- There is no benefit to CEA once the ICA is completely occluded (100%) (D) because embolic risk is eliminated.\n- Aggressive medical management (including antiplatelet agents) can also be protective from coronary events.\n- The biggest limitation of ACAS is that it did not include statin use (which has pleiotropic effects like plaque stability).\n- Newer studies are needed to determine if modern medical therapy is inferior to surgical intervention in carotid disease.\n- Some authors suggest shifting from luminal caliber as primary determinant to identifying high-risk patients (e.g., with plaque ulceration and instability)."
    },
    {
      "id": 3,
      "question_type": "mcq",
      "question": "Which of the following would provide the greatest benefit from CEA?",
      "options": [
        "A. Asymptomatic, Right 90%",
        "B. Right eye amaurosis fugax, Left 60%",
        "C. Right arm/leg transient ischemia attack, Right 80%",
        "D. Left eye amaurosis fugax, Left 80%",
        "E. Right arm/leg paresis, Left 45%"
      ],
      "answer": "D",
      "explanation": "- The first NASCET study found CEA beneficial for symptomatic severe ICA stenosis (70–99%).\n- Symptomatic carotid artery stenosis was defined as a nondisabling stroke, a hemispheric transient ischemic attack, or a retinal symptom (amaurosis fugax).\n- Life-table estimates of cumulative ipsilateral stroke risk at 2 years were 26% in the aspirin group and 9% in the aspirin and CEA group.\n- The second NASCET study showed no benefit for symptomatic patients with less than 50% stenosis (E).\n- For symptomatic patients with stenosis from 50% to 69%, there was a very modest benefit: 5-year risk of ipsilateral stroke was 15.7% in the CEA group and 22.2% in the medical group.\n- The benefit was greatest in men, in those with hemispheric symptoms (as opposed to retinal ones), and with recent stroke.\n- Women appeared to have less risk of stroke and also had higher perioperative mortality than men.\n- ACAS demonstrated the benefit of CEA compared with aspirin for ICA stenosis of 60% to 99%; however, the benefit is much less than for symptomatic high-grade stenosis.\n- Choice A (asymptomatic) would be beneficial but of less benefit than choice D (symptomatic).\n- Choice B (moderate stenosis, symptoms on the wrong side) and C (symptoms on the wrong side) would be of no benefit.\n- Retinal symptoms (amaurosis fugax) are ipsilateral."
    },
    {
      "id": 4,
      "question_type": "mcq",
      "question": "Thirty minutes after arriving in the recovery room after a right CEA, the patient develops left hemiparesis. The most appropriate next step would be:",
      "options": [
        "A. Immediate operative re-exploration of the carotid artery",
        "B. Tissue plasminogen activator (tPA) infusion",
        "C. Cerebral angiography",
        "D. Carotid duplex ultrasound scan",
        "E. Head computed tomography (CT)"
      ],
      "answer": "A",
      "explanation": "- New neurologic deficits presenting within the first 12 hours of operation are almost always the result of thromboembolic phenomena stemming from the CEA site.\n- Possibilities include thrombus development on the endarterectomized arterial surface, a residual intimal flap in the ICA leading to occlusion, or a residual flap in the external carotid artery (ECA) leading to ECA thrombosis and retrograde embolization of the clot into the ICA.\n- Immediate heparinization and exploration are indicated without the need for confirmatory arteriography or noninvasive tests.\n- On re-exploring the wound, the ECA and ICA should be palpated for the presence of a pulse; if there is no pulse, this indicates thrombosis, and initial on-table arteriography is not necessary.\n- The artery should be reopened and inspected for a cause of the thrombosis.\n- Before closing the arteriotomy, care should be taken to ensure good back-bleeding from the ICA.\n- Fogarty balloon embolectomy of the cephalad ICA should be avoided because it can lead to a carotid-cavernous sinus fistula.\n- The arteriotomy should then be reclosed with a patch.\n- On-table arteriography should then be performed to ensure the distal ICA is patent and to determine whether there is an embolus in the middle cerebral artery.\n- If an embolus is present in the intracranial carotid or middle cerebral artery, local infusion of a lytic agent should be considered (B).\n- If on reopening the wound, an excellent pulse is present in the ICA and ECA, with normal signals on hand-held Doppler ultrasonography, on-table arteriography is performed (C, D).\n- If arteriography reveals an intimal flap or irregular mural thrombus at the endarterectomy site, then reopening of the vessel is indicated.\n- Neurologic deficits that develop 12 to 24 hours after the operation are usually due to thromboembolic phenomena stemming from the CEA site but may also be caused by a postoperative hyperperfusion syndrome.\n- These latter conditions may be worsened by immediate heparinization and re-exploration.\n- Therefore, deficits occurring 12 to 24 hours after the operation should be promptly investigated with head CT and CT arteriography (E)."
    },
    {
      "id": 5,
      "question_type": "mcq",
      "question": "Following a right CEA, a 65-year-old male develops a severe 10/10 right frontal headache followed by a seizure. There are no focal neurologic deficits. Which of the following is true regarding this condition?",
      "options": [
        "A. It typically presents within 24 hours after surgery.",
        "B. It is usually self-limited.",
        "C. Postoperative hypertension is a risk factor.",
        "D. Vasodilators are useful in the treatment.",
        "E. The patient will likely need a return to the operating room."
      ],
      "answer": "C",
      "explanation": "- The incidence of hyperperfusion syndrome after a CEA is reportedly 0.3% to 1%.\n- It is thought to occur as a result of impaired autoregulation of cerebral blood flow and does not need to be taken back to the OR (E).\n- Long-standing, severe carotid stenosis leads to hypoperfusion, causing compensatory dilation of cerebral vessels distal to the stenosis as part of the normal autoregulatory response to maintain adequate cerebral blood flow.\n- After CEA restores normal pressure, autoregulation is impaired and does not immediately adjust to the sudden increase in blood flow.\n- Risk factors associated with cerebral hyperperfusion include recent stroke, surgery for very tight ICA stenosis, concomitant contralateral ICA occlusion, evidence of chronic ipsilateral hypoperfusion, staged bilateral CEA performed within 2 months of each other, and poorly controlled pre- and postoperative hypertension.\n- Pathologic changes range from mild cerebral edema and petechial hemorrhage to severe intracerebral hemorrhage and death, particularly if not promptly treated (B).\n- The syndrome is heralded by an ipsilateral frontal headache, most commonly occurring at a median of the fifth postoperative day (A), when the patient is already at home.\n- It is imperative to warn patients of this rare syndrome and ideally have the patient check his or her blood pressure daily for the first week postoperatively.\n- The headache may be followed by focal motor seizures that are often difficult to control.\n- Management consists of controlling blood pressure, ideally with a beta-blocker, with avoidance of vasodilators (as these may increase cerebral blood flow), and use of antiseizure medications (D)."
    },
    {
      "id": 6,
      "question_type": "mcq",
      "question": "Mobilization of the hypoglossal nerve during carotid endarterectomy is achieved by:",
      "options": [
        "A. Division of the occipital artery",
        "B. Division of the posterior belly of the digastric muscle",
        "C. Division of the omohyoid muscle",
        "D. Division of the artery to the sternocleidomastoid",
        "E. Division of the superior laryngeal nerve"
      ],
      "answer": "D",
      "explanation": "- Difficulty in achieving adequate exposure of the carotid artery can be encountered during CEA or in trauma, particularly for carotid lesions extending beyond the bifurcation into the distal ICA and/or in patients with high carotid bifurcations.\n- The carotid bifurcation is typically at the junction of the third and fourth cervical vertebrae, but it varies.\n- The bifurcation level can be assessed on preoperative imaging such as CT angiography.\n- It is important to determine preoperatively whether the carotid plaque is localized to the bifurcation or extends distally.\n- A high carotid bifurcation is a relative contraindication for CEA, and thus stenting should be considered.\n- Useful and acceptable steps to gain better distal exposure include division of the posterior belly of the digastric muscle (for better cephalad exposure), division of the occipital artery, nasotracheal intubation, and anterior subluxation of the mandible (rarely performed), with care not to dislocate the mandible (A, B).\n- These maneuvers do not specifically help with mobilizing the 12th cranial nerve.\n- The 12th nerve is typically tented by the artery to the sternocleidomastoid.\n- Dividing this artery (along with dividing the ansa cervicalis) helps mobilize the nerve more anteriorly.\n- The ansa cervicalis has a superior root and an inferior root; the superior root fibers are formed by branches of the first cervical nerve and accompany the hypoglossal nerve.\n- The ansa cervicalis then branches off and descends in the carotid sheath (where it is called the descendens hypoglossi); it sends off branches to the omohyoid, sternothyroid, and sternohyoid muscles.\n- Division of the omohyoid muscle (C) is used to obtain better caudad exposure of the common carotid artery.\n- Division of the superior laryngeal nerve (E) does not help and would result in voice fatigue and difficulty swallowing."
    },
    {
      "id": 7,
      "question_type": "mcq",
      "question": "A 25-year-old woman presents with several episodes of dizziness, syncope, upper extremity claudication, and an elevated erythrocyte sedimentation rate. On examination, she has no radial, brachial, or carotid pulses. Her blood pressure is 70/50 mm Hg in her right arm and 60/40 mm Hg in her left. Magnetic resonance angiography reveals occlusion of both subclavian arteries as well as high-grade stenosis of both common carotid arteries at their mid portion. Which of the following is true about this condition?",
      "options": [
        "A. Methotrexate is not helpful.",
        "B. Transluminal angioplasty is the treatment of choice.",
        "C. Surgery should be performed urgently.",
        "D. The disease can involve the pulmonary and coronary arteries.",
        "E. Antihypertensive agents are contraindicated."
      ],
      "answer": "D",
      "explanation": "- This patient has Takayasu arteritis, an inflammatory disease of the aorta and its branches as well as the coronary and pulmonary arteries.\n- It occurs most commonly in young women, with a median age of 25 years.\n- The clinical course has been described as beginning with constitutional symptoms such as fever and malaise; however, a National Institutes of Health study showed that only one-third of patients recall such symptoms.\n- Characteristic clinical features include hypertension, retinopathy, aortic regurgitation, cerebrovascular symptoms, angina, congestive heart failure, abdominal pain or gastrointestinal bleeding, pulmonary hypertension, and extremity claudication.\n- The gold standard for diagnosis is arterial imaging, with the demonstration of occlusive disease in the subclavian arteries.\n- Unlike atherosclerosis, which tends to affect the origin of these vessels, Takayasu arteritis affects the mid portions of these arteries.\n- Characteristic signs and symptoms include pulselessness or blood pressure differential in the arms, upper or lower extremity claudication, syncope, amaurosis fugax, blurred vision, and palpitations.\n- Treatment consists of steroid therapy initially with the addition of cytotoxic agents used in patients who do not achieve remission.\n- Carotidynia, which is pain along inflamed arteries, is pathognomonic for Takayasu arteritis.\n- Surgical treatment with arterial bypass is only performed in advanced states and in situations in which the patient does not respond to medical therapy.\n- It should ideally be performed when the disease is not active.\n- Because the disease causes transmural arterial inflammation with concentric fibrosis, there is no role for endarterectomy, and angioplasty has not met with good results."
    },
    {
      "id": 8,
      "question_type": "mcq",
      "question": "A 40-year-old woman presents to the emergency department after a motor vehicle accident with a seat-belt mark and bruising across her right neck. She is neurologically intact. She is otherwise hemodynamically stable, alert, and oriented. A CT scan of the head is negative for an intracranial bleed but demonstrates an intimal injury of the right internal carotid artery. Which of the following is true about this injury?",
      "options": [
        "A. Heparin is the treatment of choice.",
        "B. Associated Horner syndrome is extremely rare.",
        "C. The injured carotid artery should be stented.",
        "D. Complete healing of the carotid artery is rare.",
        "E. Urgent surgical intervention is indicated."
      ],
      "answer": "A",
      "explanation": "- The most common mechanisms of blunt carotid injury include motor vehicle accidents, fist fights, hanging, and intraoral trauma; however, it has also been reported with relatively minor trauma, such as after chiropractic manipulation of the neck and forceful sneezing.\n- Biffl et al. graded blunt carotid injury as follows: grade I: luminal irregularity or dissection with less than 25% luminal narrowing; grade II: dissection or intramural hematoma with greater than or equal 25% luminal narrowing; grade III: pseudoaneurysm; grade IV: occlusion; grade V: transection with free extravasation.\n- Horner syndrome (oculosympathetic paresis) is common with this injury (B) and is thought to be related to the involvement of the internal part of the pericarotid sympathetic plexus.\n- The decision to perform surgery is based on (1) injury severity, (2) presence or absence of symptoms, and (3) surgical accessibility of the lesion (C).\n- In general, there is little role for surgical intervention in patients with grade 1 or 2 blunt carotid injury as in this patient (E).\n- Anticoagulation (with heparin) is the treatment of choice; aspirin is also an equivalent treatment option.\n- Most centers chose to use heparin initially in case the trauma patient may need to go to the operating room for a missed injury.\n- Minor (intimal) injuries tend to heal themselves (D).\n- Pseudoaneurysms typically do not and are a relative indication for surgery if accessible in the neck.\n- Screening for blunt carotid injury should be performed in the following settings: severe cervical hyperextension/rotation or hyperflexion, closed head injury consistent with diffuse axonal injury, near hanging resulting in anoxic brain injury, seat-belt abrasion or other soft-tissue injury of the anterior neck resulting in significant swelling or altered mental status, basilar skull fracture involving the carotid canal, and cervical vertebral body fracture."
    },
    {
      "id": 9,
      "question_type": "mcq",
      "question": "A 60-year-old man presents with a right arm and leg hemiparesis that has persisted for 1 hour. He has a history of a left modified radical neck dissection and neck irradiation for cancer 10 years previously. CT angiography reveals a 75% stenosis of the left internal carotid artery just distal to the bifurcation. Which of the following is recommended as the definitive management?",
      "options": [
        "A. Aspirin",
        "B. Aspirin and clopidogrel",
        "C. Carotid endarterectomy",
        "D. Resection of the diseased carotid artery with an interposition graft",
        "E. Carotid stenting with a cerebral protection device"
      ],
      "answer": "E",
      "explanation": "- The patient has a symptomatic high-grade carotid stenosis, and, as such, an intervention is indicated.\n- With the history of radiation therapy and neck dissection, the patient has what is termed a \"hostile neck.\"\n- This increases the risk of carotid endarterectomy, in terms of cranial nerve injury and wound healing.\n- The previous neck dissection results in a paucity of tissue coverage between the skin and the carotid artery, which can lead to the catastrophic complication of carotid blow out.\n- The best alternative in this patient would be to perform carotid stenting with a cerebral protection device (A-D).\n- Patients with asymptomatic ICA stenosis in the 50-69% range should be started on medical therapy with an antiplatelet agent (for all patients), anti-hypertensive agent (if they have hypertension), and the use of a statin (if they have hyperlipidemia)."
    },
    {
      "id": 10,
      "question_type": "mcq",
      "question": "Four months after CEA, a duplex ultrasound scan reveals recurrent 70% ICA stenosis. The patient reports no symptoms. Optimal management would consist of:",
      "options": [
        "A. Repeat CEA",
        "B. Carotid stenting",
        "C. Observation",
        "D. Interposition saphenous vein bypass",
        "E. Interposition polytetrafluoroethylene bypass"
      ],
      "answer": "C",
      "explanation": "- Recurrent carotid stenosis can occur after CEA.\n- The risk of more than 50% restenosis is 5.8%, 9.9%, 13.9%, and 23.4% at 1, 3, 5, and 10 years, respectively; however severe (>80%) stenosis develops in only 2.1% of patients.\n- Early (within 4 weeks) restenosis is usually due to a technical error.\n- Recurrent carotid stenosis occurring beyond 1 month but within the first 2 years after CEA is usually secondary to myointimal hyperplasia.\n- This type of stenosis tends to have a benign course (the lesion is smooth and less prone to embolization), with a low risk of recurrent stroke.\n- Reoperative CEA carries a higher risk of cranial nerve injury (7.3% rate of permanent injury in one series) (A).\n- The patient is asymptomatic; therefore, observation is the optimal management.\n- If the patient had a symptomatic recurrence, the best option would be carotid stenting (B).\n- When the recurrent stenosis develops 2 or more years after CEA, recurrent atherosclerosis is the usual cause."
    },
    {
      "id": 11,
      "question_type": "mcq",
      "question": "A 35-year-old woman presents to the emergency department with right-sided headache, right eye ptosis, and sudden onset of left arm and leg weakness that lasts 1 hour and then resolves spontaneously. There is no history of trauma. Duplex ultrasound scan of the right carotid artery reveals a complete occlusion of the ICA. CT angiography confirms a tapering of the ICA with occlusion approximately 2 to 3 cm distal to the bifurcation. Management consists of:",
      "options": [
        "A. CEA",
        "B. Lytic therapy with tissue plasminogen activator",
        "C. Carotid stenting",
        "D. Anticoagulation",
        "E. Fogarty embolectomy"
      ],
      "answer": "D",
      "explanation": "- Sudden occlusion of the ICA in a young patient, supported by tapered occlusion seen on imaging (described as \"flame shaped\"), is highly suggestive of a spontaneous dissection.\n- Occlusion due to atherosclerosis typically occurs flush with the common carotid, and in older patients.\n- Cervical artery dissection is a significant cause of stroke in patients younger than 40 years.\n- Common presenting symptoms of ICA dissection are headache, transient ischemic attack and/or stroke, and Horner syndrome (ptosis, miosis, anhydrosis).\n- Risk factors for dissection include history of infection (syphilis), smoking, Ehlers-Danlos syndrome type IV, cystic medial necrosis, Marfan syndrome, family history, oral contraceptives, and atherosclerosis.\n- In a young female, fibromuscular dysplasia would be high on the differential.\n- Diagnosis is made by duplex scan and/or CT angiography; duplex scan may be diagnostic if it demonstrates a membrane within the lumen.\n- The most likely mechanism of acute dissection is an intimal tear followed by acute intimal dissection, producing luminal occlusion due to secondary thrombosis.\n- The occlusion angiographically is typically 2 to 3 cm beyond the bifurcation.\n- Autopsy studies have shown a sharply demarcated transition between the normal carotid artery and the dissected segment.\n- Treatment is with anticoagulation and, in most cases, results in complete resolution within a few months.\n- Stenting may be an option in symptomatic patients in the absence of occlusion (C).\n- CEA, Fogarty embolectomy, or lytic therapy is not appropriate for a spontaneous dissection (A, B, E)."
    },
    {
      "id": 12,
      "question_type": "mcq",
      "question": "Thromboangiitis obliterans (Buerger disease) is characterized by:",
      "options": [
        "A. Frequent coronary artery involvement",
        "B. Frequent involvement of aortoiliac arterial segments",
        "C. Disease limited to pedal arteries",
        "D. Successful treatment with saphenous vein bypass",
        "E. Corkscrew collaterals"
      ],
      "answer": "E",
      "explanation": "- Thromboangiitis obliterans (Buerger disease) is a progressive nonatherosclerotic segmental inflammatory disease that most often affects small- to medium-sized arteries, veins, and nerves of the upper and lower extremities (C).\n- The typical age at onset is 20 to 50 years, and the disorder is more common in men who smoke.\n- The disease also affects the veins, and specifically the upper extremities may be affected by a migratory superficial thrombophlebitis.\n- Patients initially present with foot, leg, arm, or hand claudication.\n- Progression of the disease leads to ischemic rest pain and ulcerations of the toes, feet, and fingers.\n- Characteristic angiographic findings may show disease confinement to the distal circulation, usually infrapopliteal and distal to the brachial artery.\n- The occlusions are segmental and show skip lesions with extensive collateralization, the so-called corkscrew collaterals.\n- The diagnosis is difficult to establish and is a diagnosis of exclusion because there are no pathognomonic features.\n- The disease can be confused with chronic embolization and other diseases.\n- Several criteria have been established to confirm the diagnosis: age younger than 45 years; current (or recent) smoker; distal extremity ischemia (claudication, pain at rest, ischemic ulcers, gangrene); exclusion of autoimmune diseases, hypercoagulable states, and diabetes mellitus; exclusion of a proximal source of emboli by echocardiography and arteriography; and characteristic arteriographic findings in the involved limbs.\n- The aortoiliac segments are typically spared, as are the coronary arteries (A, B).\n- The mainstay of treatment revolves around smoking cessation.\n- In patients who are able to abstain, disease remission is impressive and amputation avoidance is increased.\n- The role of surgical intervention is minimal because there is usually no acceptable target vessel for bypass (D).\n- Sympathectomy may result in mild improvement of symptoms."
    },
    {
      "id": 13,
      "question_type": "mcq",
      "question": "Which of the following is true regarding noninvasive hemodynamic assessment?",
      "options": [
        "A. In normal resting subjects in the supine position, the ankle pressure can be lower than that in the arm.",
        "B. There is poor correlation between ankle-brachial index (ABI) and severity of symptoms.",
        "C. End-stage renal failure can cause a false elevation of the ABI.",
        "D. In diabetic patients, toe pressures are usually falsely elevated.",
        "E. In diabetic patients, transcutaneous oximetry is unreliable."
      ],
      "answer": "C",
      "explanation": "- Normally, the ABI varies between 1 and 1.2 because the ankle pressure in the supine position can be as much as 20% higher than in the arm (A).\n- Peripheral arterial disease has been defined as a value less than 0.9.\n- Patients with claudication typically have an ABI between 0.5 and 0.7, and those with rest pain have an ABI less than 0.4 (B).\n- Patients with diabetes and end-stage renal disease are at risk of developing calcification of the arterial medial layer, known as medial calcinosis or Mönckeberg arteriosclerosis.\n- This process makes blood vessels rigid and difficult to compress, causing falsely increased pressure readings (C).\n- The process tends to affect tibial vessels primarily and spares digital vessels in the toes.\n- As such, toe pressures are more reliable, as are other measures of distal perfusion such as transmetatarsal pulse volume recordings and transcutaneous oximetry (D, E)."
    },
    {
      "id": 14,
      "question_type": "mcq",
      "question": "Which of the following is true regarding the use of thrombolytic therapy for arterial limb ischemia?",
      "options": [
        "A. It can safely be used in patients within a week of cataract surgery.",
        "B. Bleeding risk does not correlate with fibrinogen levels.",
        "C. It is useful in patients with a profound motor deficit in the ischemic limb.",
        "D. It is ideally used within 2 weeks of the onset of symptoms",
        "E. It can safely be used for as long as 72 hours."
      ],
      "answer": "D",
      "explanation": "- Absolute contraindications to thrombolytic therapy include recent stroke or transient ischemic attack, active or recent bleeding, and significant coagulopathy.\n- Relative contraindications include patients with recent major surgery (within 2 weeks, and greatest with recent neurosurgery or eye surgery), recent trauma, uncontrolled hypertension, intracranial tumors, and pregnancy (A).\n- Thrombolytic therapy is most effective in patients with ischemia of less than 2 weeks' duration.\n- The risk of bleeding with thrombolytic therapy is increased with longer duration of therapy and with decreasing fibrinogen levels (B).\n- In most series, thrombolytic therapy is used for as long as 48 hours, at which point the bleeding risk increases significantly (E).\n- The causes of acute limb ischemia can be divided into embolic and thrombotic.\n- The heart is the most common source of emboli leading to acute ischemia, most often in the setting of atrial fibrillation.\n- Other cardiac sources include mural thrombus after an acute myocardial infarction, valvular disease, and atrial myxoma.\n- Other sources of emboli include arterial aneurysms and atherosclerotic plaques.\n- Thrombosis is most often caused by underlying atherosclerosis in the peripheral arteries, and these patients typically will have a history of claudication.\n- The severity of acute limb ischemia is based primarily on the motor and sensory examination.\n- Patients should be placed in four categories: class 1 (nonthreatened) has normal motor and sensory function; class 2 (threatened) includes 2A-sensory deficit only, and 2B-(immediately threatened) both motor and sensory deficit; and class 3 indicates irreversible complete motor and sensory loss.\n- Consideration should be given to the duration of ischemia.\n- As a general rule, patients with class 1 ischemia can be treated with multiple options, a trial of heparin alone, thrombolytic therapy, or operative embolectomy/bypass.\n- Patients with class 2 ischemia need prompt restoration of blood flow so that heparin alone is not acceptable.\n- With class 2B ischemia, the threat of limb loss is more immediate.\n- Since thrombolytic therapy may require more than 24 to 48 hours to restore flow, class 2B ischemia (motor and sensory deficit) is a relative contraindication to thrombolysis (C).\n- Such a patient should be taken to the operating room.\n- Category 3 ischemia is considered irreversible and requires amputation.\n- Irreversible ischemia is confirmed by an absence of arterial or venous Doppler signals, duration of ischemia of more than 6 to 8 hours, presence of mottling of the skin, absence of capillary refill, and complete anesthesia and paralysis."
    },
    {
      "id": 15,
      "question_type": "mcq",
      "question": "Occlusion of a reverse saphenous vein femoral-to-popliteal artery bypass 3 weeks after surgery is most often due to:",
      "options": [
        "A. Myointimal hyperplasia",
        "B. Progressive atherosclerosis",
        "C. Hypercoagulable state",
        "D. Technical error",
        "E. Persistent valve"
      ],
      "answer": "D",
      "explanation": "- Early failure (within 30 days) after surgery generally indicates a technical error.\n- Technical errors include anastomotic stenosis, a kink or twist within the graft, poor choice of proximal or distal target, and inadequate-caliber saphenous vein.\n- Intermediate failures, from 30 days to 2 years after bypass, are generally caused by myointimal hyperplasia (A).\n- Late graft failures (beyond 2 years) are caused by progression of atherosclerotic occlusive disease, either within the inflow or outflow vessels (B).\n- A persistent valve would be a potential problem with an in situ vein bypass (not with a reverse vein), in which case valves are intentionally cut with a valvulotome (E).\n- Young patients may have a more aggressive form of atherosclerotic disease (virulent disease), and some have postulated that this may be secondary to an underlying hypercoagulable state (C)."
    },
    {
      "id": 16,
      "question_type": "mcq",
      "question": "A 65-year-old man presents with a 4-hour history of sudden onset of left leg pain. He has no pulses in his left femoral artery or distally. The calf is tender to palpation. The foot is cool and pale with diminished capillary refill. He has a normal motor and sensory exam in his left foot and leg. On the unaffected side, the femoral, popliteal, and distal pulses are normal. After administration of heparin, the next step in management would be:",
      "options": [
        "A. Diagnostic arteriography",
        "B. Thrombolytic therapy",
        "C. Transfemoral embolectomy",
        "D. Echocardiogram",
        "E. CT angiogram of abdomen, pelvis, and extremities"
      ],
      "answer": "E",
      "explanation": "- In an acutely ischemic limb, in addition to the neurovascular exam of the ischemic limb, the most important aspects of the physical examination are the cardiac exam and the neurovascular examination of the nonischemic limb.\n- If the nonischemic limb has normal pulses and no other evidence of chronic ischemia (e.g., hair loss, thin dry skin), then the ischemia is most likely embolic in nature.\n- Finding an irregularly irregular rhythm would further confirm that the heart is the most likely source of clot due to atrial fibrillation.\n- With an absent femoral pulse, the embolus has likely lodged in the common femoral artery.\n- Because the patient described has class 1 ischemia (not threatened), there is no immediate urgency to going to the operating room.\n- Heparin should be started.\n- It is then useful to obtain imaging to confirm the diagnosis.\n- This can be achieved via an arterial duplex scan or an angiogram.\n- Diagnostic arteriography was once considered the gold standard, but this has been replaced by CT angiography (A).\n- An advantage of CT over angiogram is that it may detect etiologies of acute ischemia that would otherwise be unsuspected, such as an aortic dissection or aneurysms.\n- An advantage of CT over duplex scan is that one can image the chest and abdomen for possible pathology.\n- Following diagnosis, the patient may undergo definitive treatment via thrombolytic therapy or open embolectomy (B, C).\n- Native arterial occlusions due to cardiac embolization tend to respond less favorably to thrombolytic therapy.\n- Thus, open embolectomy is preferred by some.\n- A transfemoral approach is optimal because this can be done with the patient under local anesthesia, and it allows selective embolectomy down the superficial femoral and profunda femoral arteries.\n- The below-knee popliteal artery approach to embolectomy is reserved for situations in which the patient has normal femoral and popliteal pulses, and the embolus is lodged in the tibial vessels; however, such an approach is technically more difficult.\n- Distal clot is better managed by lytic therapy as the tPA can be directed via catheter directly into the involved vessel.\n- Echocardiogram (D) would eventually be useful to look for a cardiac source of thrombus, but it would not be of immediate help in the management.\n- With the advent of hybrid operating rooms, patients with more advanced ischemia (class 2) can be taken directly to the operating room where a diagnostic angiography followed by immediate intervention can be achieved."
    },
    {
      "id": 17,
      "question_type": "mcq",
      "question": "A 60-year-old woman presents with sudden onset of acute abdominal pain. On examination, the patient is writhing because of severe pain, yet the abdomen is only mildly tender, without guarding or rebound. The cardiac examination reveals an irregularly irregular rhythm. She denies a history of abdominal pain. The serum lactate level is elevated. Serum amylase is slightly elevated. Plain abdominal radiographs are negative. A computed tomography (CT) scan of the abdomen reveals diffuse edema of the small bowel wall. The next step in the management would be:",
      "options": [
        "A. Thrombolytic therapy",
        "B. Arteriography",
        "C. Intravenous heparin",
        "D. Exploratory laparotomy",
        "E. Duplex ultrasound scan"
      ],
      "answer": "C",
      "explanation": "- This patient's history and CT scan findings are most consistent with acute mesenteric ischemia.\n- Acute mesenteric ischemia can be divided into four major causes: embolization from a cardiac source (30-50% of cases), arterial thrombosis, mesenteric venous thrombosis, and nonocclusive mesenteric ischemia.\n- Embolization is seen most often in the setting of atrial fibrillation, and is the likely etiology in the patient presented, given the irregularly irregular heart rhythm.\n- The most common site of mesenteric embolization is the superior mesenteric artery (SMA) due to its angle from the aorta.\n- The embolus typically occludes the SMA just distal to the middle colic artery.\n- These patients often have sparing of the proximal jejunum and transverse colon because the middle colic artery remains patent.\n- Celiac artery embolization is rare given its take-off at a right angle to the aorta.\n- The inferior mesenteric artery orifice is so small that a cardiac thrombus rarely lodges inside.\n- Mesenteric arterial thrombosis is usually due to underlying mesenteric artery atherosclerosis; these patients typically have a long-standing history of pain after eating, fear of eating, and weight loss, and the physical examination will reveal evidence of diffuse atherosclerosis and bruits.\n- Mesenteric venous thrombosis is a third etiology and is most often seen in patients with hypercoagulable states; acute venous occlusion leads to massive bowel edema with secondary arterial insufficiency from bowel wall distention.\n- Patients with mesenteric venous thrombosis tend to present in a less dramatic fashion, often with days or weeks of abdominal pain.\n- Nonocclusive mesenteric ischemia results from shock that creates hypoperfusion to the bowel, such as with cardiac failure or severe hypovolemia.\n- The classic findings in acute mesenteric ischemia are sudden onset of severe pain out of proportion to the physical examination findings.\n- Elevated serum lactate levels should raise the suspicion for ischemic bowel, but they are not sensitive enough to detect early bowel ischemia.\n- A plain abdominal radiograph is often unremarkable, although it may demonstrate evidence of edema in the small bowel wall.\n- If the patient has peritoneal signs on abdominal examination, this would indicate that the bowel is already infarcted.\n- In the absence of peritonitis and because the differential diagnosis is extensive, CT provides the greatest diagnostic yield initially (E).\n- CT scan may not be diagnostic because it may not necessarily demonstrate opacification in the mesenteric veins or arteries (depending on the timing of contrast).\n- The first step in the management is the administration of intravenous heparin.\n- Following heparin, for an embolus, immediate surgery offers the best chance of treatment and would involve an SMA embolectomy (D).\n- If the history were suggestive of underlying mesenteric atherosclerosis with thrombosis, arteriography would be helpful because the management would involve an arterial bypass or stenting (B).\n- If the CT scan revealed a thrombus in a mesenteric vein, definitive treatment would be heparin alone, provided there is not peritonitis.\n- For nonocclusive ischemia, correcting the underlying shock is the initial management; catheter directed papaverine may also be useful.\n- Some case reports show successful management with lytic therapy (A), but this is not the standard approach and not the best option with elevated lactate suggesting compromised bowel."
    },
    {
      "id": 18,
      "question_type": "mcq",
      "question": "A 45-year-old man presents with a 2-week history of vague, diffuse abdominal pain and distention. He reports that his mother and grandmother both had leg blood clots. On examination, he has mild diffuse tenderness without guarding or rebound. A CT scan reveals thickened loops of small bowel and failure of opacification of the superior mesenteric vein. The best management approach would consist of:",
      "options": [
        "A. Catheter-directed thrombolytic therapy",
        "B. Intravenous (IV) heparin followed by 3 months of warfarin",
        "C. IV heparin followed by lifelong warfarin",
        "D. Arteriography with papaverine infusion",
        "E. Immediate operative exploration"
      ],
      "answer": "C",
      "explanation": "- Mesenteric venous thrombosis accounts for approximately 10 to 15 % of cases of mesenteric ischemia.\n- It tends to have a slow, insidious onset, as in this case.\n- Risk factors for mesenteric venous occlusion include hypercoagulable states such as factor V Leiden, antithrombin III deficiency, and protein C and S deficiency, as well as liver disease with portal hypertension, pancreatitis, and any intraperitoneal inflammatory conditions.\n- Venous thrombosis is less dramatic than arterial occlusion.\n- Abdominal pain is vague, and tenderness is mild or equivocal.\n- CT may demonstrate a thickened bowel wall with delayed passage of intravenous contrast agent into the portal system and lack of opacification of the portal or superior mesenteric vein.\n- If the diagnosis is established from the CT scan, further diagnostic tests are unnecessary.\n- Another useful diagnostic modality is duplex ultrasound scanning.\n- Arteriography may demonstrate venous congestion and lack of prompt filling of the portal system (D).\n- If the patient is manifesting peritoneal signs, operative exploration is indicated (E).\n- In the absence of peritonitis, therapy should consist of fluid hydration, hemodynamic support, anticoagulation with heparin, and serial examination.\n- If peritonitis subsequently develops, exploratory laparotomy is appropriate to assess bowel viability with segmental bowel resection.\n- Surgical thrombectomy of the venous system is not likely to be successful.\n- Fibrinolytic therapy has been used increasingly, but is not yet the standard treatment of choice, and is ideal when symptoms are of short duration (A).\n- Following heparin, warfarin is recommended for 3 to 6 months if the hypercoagulable state is provoked or temporary (B).\n- Lifelong warfarin is recommended if the venous thrombosis is unprovoked or associated with a permanent thrombophilic state.\n- The family history of venous thrombosis in this patient is highly suggestive of an inherited hypercoagulability and would warrant lifelong anticoagulation."
    },
    {
      "id": 19,
      "question_type": "mcq",
      "question": "Claudication symptoms are most improved with the use of:",
      "options": [
        "A. Pentoxifylline",
        "B. Aspirin",
        "C. Cilostazol",
        "D. Clopidogrel",
        "E. Coumadin (warfarin)"
      ],
      "answer": "C",
      "explanation": "- Cilostazol has a number of functions including inhibiting platelet aggregation and smooth muscle proliferation, increasing vasodilation, and lowering high-density lipoprotein and triglyceride levels.\n- Cilostazol has been shown to significantly increase walking distance by 50% to 67% in patients with claudication in several randomized trials and results in improvement in physical functioning and quality of life.\n- This drug is more effective than pentoxifylline in the treatment of claudication (A).\n- Pentoxifylline is a methylxanthine derivative that has hemorrheologic properties; two meta-analyses showed that it improves walking distance, but in some more recent randomized studies, it proved to be no better than placebo.\n- Pentoxifylline improves symptoms of claudication by increasing red blood cell flexibility and reducing blood viscosity.\n- Antiplatelet medications such as aspirin are used in the treatment of peripheral vascular disease and for cardiac and stroke prevention but do not appear to improve walking distance (B).\n- Aspirin has been found to reduce the vascular death rate by approximately 25% in patients with any manifestation of atherosclerotic disease (e.g., coronary, peripheral).\n- Clopidogrel (D) is effective in reducing overall acute cardiovascular events, especially in patients with lower extremity occlusive disease, but is much more expensive.\n- It does not seem to directly improve walking distance.\n- Pure vasodilators have not been efficacious in the treatment of peripheral vascular disease because most patients with such occlusive disease already exhibit marked vasodilation.\n- Anticoagulants (E) also have not been shown to alter the course of peripheral atherosclerosis."
    },
    {
      "id": 20,
      "question_type": "mcq",
      "question": "Four days after a left femoral-to-popliteal arterial bypass with ipsilateral reverse saphenous vein, the patient reports swelling in the left leg. This most likely indicates:",
      "options": [
        "A. Deep venous thrombosis",
        "B. Reperfusion edema",
        "C. Decreased venous return from saphenous vein harvest",
        "D. Cellulitis",
        "E. Lymphatic disruption"
      ],
      "answer": "E",
      "explanation": "- Leg edema after femoral-to-popliteal arterial bypass is common.\n- In most instances, it is due to lymphatic disruption.\n- This disruption occurs at both the groin and popliteal incisions as well as from harvesting of the saphenous vein.\n- Deep venous thrombosis (A) can occur after this procedure but is relatively uncommon.\n- Reperfusion edema (B) may be associated with compartment syndrome and can present with the P's (pain, pallor, paralysis, paresthesia, and poikilothermia); it is more likely to present after revascularization due to acute limb ischemia.\n- The saphenous veins are part of the superficial venous system, which contributes a minority of the venous drainage in the leg, so swelling secondary to venous congestion is not expected after a saphenous vein harvest (C).\n- Cellulitis (D) would present with erythema, pain, warmth, and possible systemic signs such as fever or leukocytosis."
    },
    {
      "id": 21,
      "question_type": "mcq",
      "question": "A 65-year-old male smoker presents with right calf claudication that limits his walking to half a block. He denies rest pain in his foot. On physical examination, he has a normal femoral pulse on the right and absent popliteal and distal pulses. Arterial noninvasive studies reveal a 40-mm Hg decrease in segmental pressure from the upper thigh to the knee. The ABI is 0.7 on the right and 0.8 on the left. The next step in the management of this patient would be:",
      "options": [
        "A. Standard arteriography",
        "B. Magnetic resonance arteriography",
        "C. Duplex ultrasound scan",
        "D. Smoking cessation and exercise",
        "E. CT angiography"
      ],
      "answer": "D",
      "explanation": "- The normal ABI ranges from 1 to 1.2, and a value less than 0.9 indicates some degree of peripheral vascular disease.\n- Patients with claudication typically have an ABI in the 0.6 to 0.8 range.\n- Calf claudication is usually due to disease in the superficial femoral artery (SFA).\n- The pulse deficit between the femoral and popliteal arteries further confirms disease in the SFA.\n- The segmental pressures also help localize the site of the obstruction to the SFA as the pressure decrease is between the upper thigh and knee.\n- Because the initial management of claudication should be medical, no further imaging is needed.\n- Claudication is not considered limb threatening in the absence of ischemic rest pain, ulceration, or gangrene.\n- The goal of medical management is to prevent progression of peripheral vascular disease, reduce the risk of major cardiovascular events elsewhere, and improve function in symptomatic patients.\n- Smoking cessation is the most important factor in determining the outcome of patients with claudication; it has been shown to result in a reduction of the 10-year mortality rate from 54% to 18%.\n- In addition to smoking cessation, the patient should be placed on an exercise program and be prescribed a statin and aspirin.\n- Hypertension should be controlled.\n- Duplex ultrasound scanning is an appropriate arterial noninvasive study that is often used in conjunction with segmental pressures and ABI.\n- However, given that the patient has already undergone an ABI, the next step would be to institute medical management.\n- Magnetic resonance imaging, CT, or standard arteriography (A, B, E) should be reserved for patients in whom an intervention is being planned.\n- Duplex ultrasound scan (C) would be the appropriate study to look for deep venous thrombosis."
    },
    {
      "id": 22,
      "question_type": "mcq",
      "question": "A 65-year-old man with a history of a coronary artery bypass graft 2 years earlier presents with recurrent chest pain. He describes the pain as substernal and radiating to his jaw. He works as a carpenter and also states that his left arm tires out easily with use. Blood pressure in the right arm is 150/90 mm Hg and 100/60 mm Hg in the left arm. Relief of his chest pain is likely best achieved with:",
      "options": [
        "A. Redo coronary artery bypass graft",
        "B. Coronary stenting",
        "C. Increasing the dose of nitrates",
        "D. Subclavian artery stenting",
        "E. Increasing beta-blocker dose"
      ],
      "answer": "D",
      "explanation": "- The patient's history and examination are most consistent with symptoms of coronary-subclavian steal syndrome.\n- Most patients with a coronary artery bypass graft have undergone a left internal mammary artery-to-left anterior descending graft.\n- In the setting of subclavian artery stenosis or occlusion proximal to the take-off of the internal mammary artery, arm exercise leads to vasodilation of the arm vessels and lower resistance.\n- Blood will travel through the path of least resistance and flow in a reverse fashion from the left anterior descending artery into the left internal mammary artery and toward the arm, leading to the development of angina.\n- The differential blood pressure in the arms is the clue, as is the left arm claudication.\n- Treatment involves relieving the subclavian artery obstruction.\n- This can generally be done by subclavian artery stenting but on occasion requires a carotid-to-subclavian artery bypass (A).\n- Since the problem is not related to underlying cardiac disease, carotid stenting (B), increasing beta-blocker dose (E), or increasing dose of nitrates (C) will not resolve the patient's chest pain with exercise."
    },
    {
      "id": 23,
      "question_type": "mcq",
      "question": "Which of the following is most appropriate in the surgical management of bowel ischemia due to an embolus to the superior mesenteric artery (SMA)?",
      "options": [
        "A. Intraoperative angiography",
        "B. Planned second-look laparotomy",
        "C. Dopamine",
        "D. Longitudinal arteriotomy of SMA",
        "E. Resection of bowel with questionable viability"
      ],
      "answer": "B",
      "explanation": "- Initial management of patients with acute mesenteric ischemia includes fluid resuscitation and systemic anticoagulation with heparin sulfate to prevent further thrombus propagation.\n- Significant metabolic acidosis should be corrected with sodium bicarbonate.\n- A central venous catheter, peripheral arterial catheter, and Foley catheter should be placed for fluid resuscitation and hemodynamic status monitoring.\n- Appropriate antibiotics are given before surgical exploration.\n- The operative management of acute mesenteric ischemia is dictated by the cause of the occlusion.\n- For an SMA embolus, exposure of the SMA is obtained via rotation of the small bowel to the right and sharply dissecting the ligament of Treitz; the SMA will be found at the root of the mesentery.\n- The primary goal in the surgical treatment of embolic mesenteric ischemia is to restore arterial perfusion with removal of the embolus from the vessel.\n- This is done by performing a Fogarty embolectomy using a transverse arteriotomy (longitudinal arteriotomy will cause stenosis upon closure) (D).\n- It is important to avoid resecting bowel until perfusion has been restored; that way, bowel viability can be better established.\n- After restoration of SMA flow, an assessment of the intestinal viability is made, and nonviable bowel is resected.\n- Because the amount of bowel resected can be extensive and this places the patient at risk of short bowel syndrome, bowel that is of borderline viability should be left in place with a planned second-look procedure performed 24 to 48 hours later to reassess whether additional bowel resection is needed (E).\n- Low-dose dopamine leads to vasodilation of mesenteric arteries; however, its benefit is unclear (C).\n- Intraoperative angiography (A) will not provide any additional information that would assist in the surgical management of SMA embolus."
    },
    {
      "id": 24,
      "question_type": "mcq",
      "question": "The 5-year risk of limb loss in a patient with claudication is estimated to be:",
      "options": [
        "A. Less than 1%",
        "B. Less than 5%",
        "C. 10%",
        "D. 20%",
        "E. 30%"
      ],
      "answer": "B",
      "explanation": "- Major amputation is a relatively rare occurrence in patients who have claudication without ischemic rest pain or ulceration.\n- In two recent reviews, the risk of major amputation at 5 years ranged between 1% and 3.3% (A, C-E).\n- In the Framingham studies, the risk of limb loss was less than 2%.\n- When evaluating and counseling patients with claudication, it is important to reassure them that they do not have an imminently limb-threatening problem.\n- The low risk of limb loss further supports the premise that the initial management of claudication should be medical."
    },
    {
      "id": 25,
      "question_type": "mcq",
      "question": "At surgery for suspected acute mesenteric ischemia, almost the entire small bowel as well as the right colon appears ischemic. However, the proximal jejunum, duodenum, and left colon appear healthy. The most likely etiology of these findings is:",
      "options": [
        "A. Thrombosis of the SMA",
        "B. Embolus to the SMA",
        "C. Superior mesenteric vein thrombosis",
        "D. Portal vein thrombosis",
        "E. Nonocclusive mesenteric ischemia"
      ],
      "answer": "B",
      "explanation": "- The most common cause of mesenteric ischemia is a cardiac embolus to the SMA.\n- The SMA provides blood to the bowel from the ligament of Treitz to the mid transverse colon.\n- Cardiac embolus tends to lodge just past the SMA origin at a point where the artery begins to narrow, which is just beyond the first jejunal branches.\n- These patients often have sparing of the proximal jejunum and transverse colon because the middle colic artery remains patent.\n- Thrombosis of the SMA, conversely, is usually caused by underlying atherosclerotic disease that occurs at the SMA origin and would thus not spare the proximal jejunum (A).\n- Mesenteric venous thrombosis (C) and nonocclusive mesenteric ischemia (E) would more likely cause patchy areas of ischemia."
    },
    {
      "id": 26,
      "question_type": "mcq",
      "question": "A 29-year-old female is undergoing splenectomy for idiopathic thrombocytopenic purpura. Intraoperatively, the surgeon notes a significant amount of bleeding at the splenic hilum during mobilization. The surgeon would like to temporarily stop bleeding with a hemostatic agent. Which of the following would be the least effective choice for this patient?",
      "options": [
        "A. Microfibrillar collagen",
        "B. Oxidized cellulose",
        "C. Thrombin",
        "D. Fibrin sealant",
        "E. Glutaraldehyde cross-linked peptide"
      ],
      "answer": "A",
      "explanation": "- Hemostatic agents are increasingly used intraoperatively to provide a temporary measure of controlling bleeding when cautery is dangerous or inaccessible.\n- Collagen can provide hemostasis by allowing a large surface area for platelet adherence leading to thrombus clot.\n- However, this will not work well in patients with thrombocytopenia.\n- Oxidized cellulose (B) promotes red cell lysis generating an artificial clot and can even be used during endoscopic procedures; it may also have an antimicrobial effect since it decreases local tissue pH.\n- Thrombin (C) uses blood as a source of fibrinogen to create a clot.\n- Fibrin sealant (D) is composed of both fibrinogen and thrombin.\n- Glutaraldehyde cross-linked peptide (E) (commonly albumin) forms a scaffold for clot formation and can be used even on wet surfaces."
    },
    {
      "id": 27,
      "question_type": "mcq",
      "question": "A 60-year-old, relatively healthy diabetic male patient presents with gangrene of his right great toe. The patient has normal femoral and popliteal pulses but no distal pulses. ABI is 0.5. Angiography reveals patent iliac, femoral, and popliteal arteries with a long-segment occlusion of the trifurcation vessels with reconstitution of the anterior tibial artery just above the ankle and runoff into the dorsalis pedis artery. Bilateral saphenous veins are 4 mm in diameter on ultrasound. Which of the following is the best option?",
      "options": [
        "A. Common femoral-to-anterior tibial bypass with ipsilateral saphenous vein",
        "B. Common femoral-to-anterior tibial bypass with contralateral saphenous vein",
        "C. Popliteal-to-anterior tibial bypass with ipsilateral greater saphenous vein",
        "D. Endovascular stenting of anterior tibial artery",
        "E. Great toe amputation only"
      ],
      "answer": "C",
      "explanation": "- The ipsilateral greater saphenous vein is the conduit of choice for lower extremity distal bypass for peripheral arterial disease (contralateral vein for trauma).\n- An ideal conduit should be a minimum of 3 mm (but ideally 4 mm).\n- When the greater saphenous vein is not available, options include the lesser saphenous and cephalic veins.\n- Ectopic veins (i.e., lesser saphenous, arm veins) are generally inferior to a single-segment saphenous vein, although they are still superior to the performance of synthetic grafts.\n- A composite graft, which is a vein graft sewn to a polytetrafluoroethylene graft, has a patency rate similar to that of a prosthetic graft and tends to develop neointimal hyperplasia.\n- The bypass should be as short as possible (proximal inflow from the most distal normal artery, and distal outflow to where the artery reconstitutes most proximally).\n- Options A and B are suboptimal because they involve a longer bypass than is necessary given the patent femoral artery and normal popliteal pulse, and harvesting contralateral vein.\n- Endovascular approaches (such as angioplasty) are options but are less durable, particularly in the presence of a long segment of occlusion (D).\n- However, in a relatively healthy patient, with a good saphenous vein and good runoff into the foot, a bypass is likely the better option.\n- Amputation of the toe (E) is unlikely to heal in the absence of a palpable pedal pulse and such a low ABI."
    },
    {
      "id": 28,
      "question_type": "mcq",
      "question": "Which of the following is the most common cause of death at 5 years in patients with claudication?",
      "options": [
        "A. Stroke",
        "B. Myocardial infarction",
        "C. Cancer",
        "D. Lower extremity gangrene",
        "E. Ruptured aortic aneurysm"
      ],
      "answer": "B",
      "explanation": "- The 5-year survival rate of patients with claudication is only 70%.\n- 40% to 60% of deaths are caused by coronary artery disease (A, C–E).\n- Cerebrovascular disease accounts for an additional 10% to 20% of deaths.\n- Thus, the primary focus of the management of those with claudication is to aggressively treat the underlying risk factors for atherosclerosis, including the use of aspirin and statins, as well as smoking cessation."
    },
    {
      "id": 29,
      "question_type": "mcq",
      "question": "A 32-year-old woman notes that her hands become cold and painful when exposed to cold temperatures. The hand changes in color from pale to cyanotic to red. Her medical history is negative, and vascular pulse examination is normal. Arterial noninvasive studies reveal a marked decrease in digital blood pressure with exposure to cold temperatures. Symptoms persist despite wearing gloves and avoidance of cold exposure. The next step in management is:",
      "options": [
        "A. Upper extremity sympathectomy",
        "B. Prostaglandins",
        "C. Fluoxetine",
        "D. Arteriography",
        "E. Diltiazem"
      ],
      "answer": "E",
      "explanation": "- This patient has Raynaud disease.\n- The term Raynaud disease applies to a heterogeneous symptom array associated with peripheral vasospasm, more commonly occurring in the upper extremities.\n- The characteristically intermittent vasospasm classically follows exposure to various stimuli, including cold temperatures, tobacco, or emotional stress.\n- Formerly, a distinction was made between Raynaud disease and Raynaud phenomenon for describing a benign disease occurring in isolation or a more severe disease secondary to another underlying disorder, respectively.\n- Collagen vascular disorders develop in many patients at some point after the onset of vasospastic symptoms; the rate of progression to a connective tissue disorder ranges from 11% to 65% in reported series.\n- Characteristic color changes occur in response to the arteriolar vasospasm, ranging from intense pallor to cyanosis to redness as the vasospasm occurs.\n- The digital vessels then relax, eventually leading to reactive hyperemia.\n- The majority of patients are women younger than 40 years of age; as many as 70% to 90% of reported patients are women.\n- Geographic regions located in cooler, damp climates such as the Pacific Northwest and Scandinavian countries have a higher reported prevalence of the disease.\n- Certain occupational groups, such as those that use vibrating tools, may be more predisposed to Raynaud disease or digital ischemia.\n- The exact pathophysiologic mechanism behind the development of such severe vasospasm remains elusive, and much attention has focused on increased levels of α2-adrenergic receptors and their hypersensitivity in patients with Raynaud disease, as well as abnormalities in the thermoregulatory response, which is governed by the sympathetic nervous system.\n- There is no cure for Raynaud disease; thus, all treatments mainly palliate symptoms and decrease the severity and perhaps frequency of attacks.\n- Conservative measures predominate, including the wearing of gloves, use of electric or chemically activated hand warmers, avoiding occupational exposure to vibratory tools, abstinence from tobacco, and relocating to a warmer, drier climate.\n- The majority (90%) of patients will respond to avoidance of cold and other stimuli.\n- The remaining 10% of patients with more persistent or severe syndromes can be treated with a variety of vasodilatory drugs, albeit with only a 30% to 60% response rate.\n- Calcium channel blocking agents such as diltiazem and nifedipine are the drugs of choice.\n- The selective serotonin reuptake inhibitor fluoxetine (C) has been shown to reduce the frequency and duration of vasospastic episodes but is not the first-line treatment.\n- Intravenous infusions of prostaglandins (B) have been reserved for nonresponders with severe symptoms.\n- Upper extremity sympathectomy (A) may provide relief in 60% to 70% of patients; however, the results are short-lived, with a gradual recurrence of symptoms in 60% within 10 years.\n- Cervical sympathectomy has fallen out of favor and has been replaced by localized digital sympathectomy using microsurgery.\n- A cold stimulation test or nail fold capillaroscopy may be used to confirm the diagnosis of Raynaud disease, but there is no role for arteriography (D)."
    },
    {
      "id": 30,
      "question_type": "mcq",
      "question": "The most common visceral artery aneurysm is:",
      "options": [
        "A. Celiac",
        "B. Splenic",
        "C. Superior mesenteric artery (SMA)",
        "D. Hepatic",
        "E. Pancreaticoduodenal"
      ],
      "answer": "B",
      "explanation": "- Aneurysms of the visceral arteries are rare.\n- Splenic artery aneurysms are the most common type and make up as many as 60% of cases.\n- Hepatic artery aneurysms (D) are the second most common, with as many as 20% of cases.\n- Aneurysms of the celiac (A), superior mesenteric (C), and pancreaticoduodenal (E) arteries together compose less than 10% of all visceral aneurysms."
    },
    {
      "id": 31,
      "question_type": "mcq",
      "question": "Which of the following is true regarding femoral pseudoaneurysms that occur after arteriography?",
      "options": [
        "A. Ultrasound compression is the procedure of choice.",
        "B. Ultrasound compression is usually successful even if the patient is receiving anticoagulation therapy.",
        "C. Surgical repair typically requires interposition vein grafting.",
        "D. It can be managed with ultrasound-guided direct thrombin injection.",
        "E. A trial of observation is contraindicated because of the high risk of bleeding."
      ],
      "answer": "D",
      "explanation": "- Pseudoaneurysms can manifest with pain, a pulsatile mass, and/or compression of adjacent structures.\n- Large, expanding, painful pseudoaneurysms are at significant risk of rupture and should be repaired urgently.\n- Smaller, stable pseudoaneurysms may be observed (E).\n- Duplex ultrasonography has been the diagnostic procedure of choice because it helps define size, morphology, and location.\n- Pseudoaneurysms less than 2 cm in diameter have a higher likelihood of spontaneous thrombosis with compression therapy, whereas larger ones and those in patients receiving anticoagulation therapy are likely to persist.\n- More recent studies, however, have reported high failure rates with this ultrasound compression (A, B).\n- Ultrasonography-guided thrombin injection is a newer treatment option and in many centers is now the treatment of choice.\n- Surgery is reserved for infected or rapidly expanding pseudoaneurysms (C)."
    },
    {
      "id": 32,
      "question_type": "mcq",
      "question": "One day after open abdominal aortic aneurysm (AAA) repair, watery diarrhea and abdominal distention develop in the patient. On examination, the patient has mild lower left quadrant tenderness without guarding. WBC count is 14,000 cells/µL. Which of the following is appropriate for this patient?",
      "options": [
        "A. Proctosigmoidoscopy",
        "B. CT angiography",
        "C. Exploratory laparotomy",
        "D. Diagnostic laparoscopy",
        "E. Transfemoral arteriography"
      ],
      "answer": "A",
      "explanation": "- Colonic ischemia is a recognized complication after AAA repair, whether open or endovascular; it occurs in approximately 1% to 3% of cases.\n- It is thought to be due to either ligation of the inferior mesenteric artery (IMA) or ligation or exclusion of internal iliac arteries.\n- The most common presentations include an unexpectedly early return of bowel function manifested by diarrhea, left lower quadrant pain, abdominal distention, persistent leukocytosis, elevated white blood cell count, and lactic acidosis.\n- Diagnosis is confirmed by flexible proctosigmoidoscopy, which reveals a friable mucosa.\n- Proctosigmoidoscopy may not be able to accurately distinguish partial ischemia from full-thickness necrosis.\n- Initial management is medical and consists of nasogastric tube decompression, IV hydration, placing the patient on NPO, and broad-spectrum antibiotics.\n- Full-thickness necrosis of the colon should be suspected in patients with evidence of peritonitis or unremitting acidosis.\n- In such cases, laparotomy with colonic resection and colostomy is indicated (C, D).\n- The mortality rate after emergent colectomy approaches 50%.\n- Arteriography (B, E) would not typically be helpful because the usual cause is an intended ligation or exclusion of an internal iliac artery or IMA."
    },
    {
      "id": 33,
      "question_type": "mcq",
      "question": "A 69-year-old man presents to the emergency department with sudden onset of left flank and back pain, abdominal tenderness, a blood pressure of 100/50 mm Hg, and a tender pulsatile midline abdominal mass. Which of the following is true about this condition?",
      "options": [
        "A. The patient should receive a 3-L bolus of normal saline.",
        "B. A CT scan of the abdomen and pelvis is reasonable to obtain if the endovascular approach is available.",
        "C. Bedside ultrasound is useful to rule out rupture.",
        "D. Endovascular repair offers a lower perioperative mortality than open repair.",
        "E. Risk of ischemic colitis is similar to elective repair."
      ],
      "answer": "B",
      "explanation": "- The presentation is consistent with a ruptured AAA.\n- If the patient is hemodynamically unstable, he should be taken directly to the operating room.\n- If the patient is stable, a CT scan is reasonable to determine feasibility of endovascular repair, provided there is a coordinated multidisciplinary ruptured aneurysm team that has immediate endovascular capabilities.\n- Current literature suggests similar long-term mortality rates for open and endovascular repair of ruptured AAA (D).\n- A recent Cochrane analysis demonstrated no difference in 30-day mortality for patients with ruptured AAA that were treated with an endovascular approach compared to an open approach.\n- In elective repair of AAA, the endovascular approach has a lower perioperative mortality.\n- Long-term mortality rates for open and endovascular repair of elective AAA are similar.\n- Although ultrasonography is useful for determining the presence of an AAA, it is not accurate for determining the presence of a retroperitoneal rupture (C).\n- Ultrasonography would be reasonable to perform in this patient if no pulsatile mass could be felt on physical examination to confirm that an aneurysm was present.\n- Once in the operating room, the patient should be prepped and draped before anesthesia induction because anesthesia may induce a precipitous decrease in blood pressure.\n- Because of the large retroperitoneal hematoma that is typically found, proximal control is best achieved by clamping the aorta at the diaphragm.\n- Most surgeons would recommend a policy of \"permissive hypotension\" en route to the operating room.\n- Excessive fluid administration and elevation of the blood pressure may further exacerbate bleeding (A).\n- The risk of ischemic colitis is much higher than after elective AAA repair (E)."
    },
    {
      "id": 34,
      "question_type": "mcq",
      "question": "Which of the following is true regarding popliteal artery aneurysms?",
      "options": [
        "A. An asymptomatic 3-cm popliteal aneurysm should be observed.",
        "B. An asymptomatic aneurysm with intraluminal thrombus should be repaired only when it is larger than 2 cm in size.",
        "C. Bypassing the aneurysm with saphenous vein with interval ligation is the standard operative approach.",
        "D. Popliteal aneurysms are infrequently bilateral.",
        "E. A posterior approach to the aneurysm is not technically feasible."
      ],
      "answer": "C",
      "explanation": "- Popliteal aneurysms are the most common peripheral artery aneurysms (overall, aortic and iliac aneurysms are more common).\n- They can be suspected on physical examination.\n- They are bilateral in 50% of patients (D).\n- Patients who are found to have a popliteal aneurysm should undergo screening for an AAA because 30% will have a concomitant AAA.\n- The most frequent complication of popliteal aneurysms is leg ischemia.\n- Guidelines for repair are controversial; some authors recommend repair for all popliteal aneurysms.\n- Most would agree that indications for repair are (1) all aneurysms larger than 2 cm, (2) aneurysms with intraluminal thrombus, regardless of size, or (3) those that are symptomatic or have evidence of previous embolization (A, B).\n- Diagnosis is made by duplex ultrasonography, which can measure the aneurysm size and detect the presence of thrombus.\n- Arteriography assists in operative planning but should not be used for diagnosis because it does not detect the thrombus nor accurately measure the size.\n- The surgical approach to the popliteal artery is either via the medial approach or the posterior approach (E).\n- The posterior approach is ideal if the aneurysm is just behind the knee joint.\n- Magnetic resonance imaging and CT angiography can be used as alternatives for operative planning.\n- The standard operative approach involves bypassing the aneurysm with saphenous vein and interval ligation of the popliteal artery.\n- With this approach, the aneurysm sac is not opened, and as such, there is a small risk of continued aneurysm expansion and compression of adjacent structures.\n- Formal endoaneurysmorrhaphy, as is done with an open AAA repair, is another alternative.\n- In the setting of acute thrombosis, lytic therapy is the initial treatment of choice."
    },
    {
      "id": 35,
      "question_type": "mcq",
      "question": "One year after open AAA repair, a patient presents to the emergency department vomiting blood. Vital signs are stable. Upper endoscopy is negative. CT scan shows some mild inflammatory changes around the aortic graft. Which of the following is true regarding this condition?",
      "options": [
        "A. Inflammatory changes around the graft are common 1 year after surgery.",
        "B. Arteriography is useful in establishing the diagnosis.",
        "C. A tagged nuclear white blood cell scan is unlikely to aid in the diagnosis.",
        "D. There is a low likelihood that excision of the graft will be needed.",
        "E. In situ placement of an aortic homograft will likely be needed."
      ],
      "answer": "E",
      "explanation": "- A patient with an upper gastrointestinal bleed and a history of aortic surgery should be presumed to have an aortoenteric fistula until proven otherwise.\n- The treatment algorithm depends on the hemodynamic stability of the patient.\n- If the patient is unable to be stabilized due to massive hemorrhage, the patient should be taken emergently to the operating room, even if a diagnosis has not yet been established.\n- Oftentimes, the patient will have a so-called herald bleed, after which the bleeding may temporarily stop, allowing a workup for an aortoenteric fistula.\n- The diagnosis can be difficult to establish.\n- Upper endoscopy has the highest yield, but is negative surprisingly often.\n- Duodenal graft erosion typically occurs at the fourth portion of the duodenum, and findings may be subtle, such as mild mucosal erosion.\n- If the endoscopy findings are negative, repeating the upper endoscopy with a pediatric colonoscope may reveal an abnormality.\n- The next study of choice would be CT.\n- It is unlikely to show blood extravasation but rather may demonstrate perigraft fluid, air, or inflammation, indicative of a graft infection.\n- Fluid and inflammatory changes around a graft would be abnormal findings beyond 6 weeks after surgery (A).\n- If the CT scan findings are negative, a nuclear tagged white blood cell scan may be useful for establishing a graft infection (C).\n- Arteriography (B) is of limited benefit for the diagnosis of vascular graft infections but can be useful in preoperative planning.\n- In some instances, no source of an upper gastrointestinal bleed is found, and thus one must empirically proceed to graft excision (D).\n- The classic operative management consisted of obtaining proximal aortic control of the aorta at the diaphragm, graft excision, closure of the aortic stump in two layers, closure of the duodenum, placing omentum in the area of the aortic stump closure, followed by an extra-anatomic axillobifemoral bypass.\n- Recently, the more accepted treatment is excision of the aortic graft and in situ placement of a human aortic homograft."
    },
    {
      "id": 36,
      "question_type": "mcq",
      "question": "The threshold for elective repair of an asymptomatic common iliac aneurysm is greater than:",
      "options": [
        "A. 2.0 cm",
        "B. 2.5 cm",
        "C. 3.5 cm",
        "D. 4.0 cm",
        "E. 4.5 cm"
      ],
      "answer": "C",
      "explanation": "- Common iliac aneurysms are usually diagnosed incidentally.\n- In most cases, they are found in association with an aortic aneurysm.\n- Rare presentation includes the development of a fistula with the adjacent iliac vein or compression of the iliac vein.\n- The natural history of common iliac aneurysms is less well defined.\n- In a recent study, the expansion rate of common iliac aneurysms was 0.29 cm per year, and hypertension predicted faster expansion.\n- Because no rupture of a common iliac aneurysm smaller than 3.8 cm was observed, the recommended threshold for elective repair of asymptomatic patients was larger than 3.5 cm (A, B, D, E).\n- Treatment options include open surgical replacement with prosthetic graft or endovascular stent grafting.\n- In patients with suitable anatomy, namely, the presence of proximal and distal landing zones, stent grafting has become the treatment of choice.\n- Endovascular repair is associated with fewer complications overall but poses a higher risk of creating buttock claudication due to occlusion of the internal iliac artery."
    },
    {
      "id": 37,
      "question_type": "mcq",
      "question": "The most common symptom of a popliteal aneurysm is:",
      "options": [
        "A. Rupture",
        "B. Thrombosis",
        "C. Distal embolization",
        "D. Adjacent nerve compression",
        "E. Adjacent venous compression"
      ],
      "answer": "B",
      "explanation": "- Popliteal aneurysms rarely rupture (A).\n- Most commonly, they cause acute or chronic ischemia.\n- In most series, the most common symptom is thrombosis, in as many as 49%, followed by distal embolization (C).\n- As the aneurysm continues to grow, less commonly, it can compress adjacent structures, such as the popliteal vein (D, E).\n- Chronic embolization can lead to occlusions of the infrapopliteal vessels and can complicate revascularization.\n- If they present with acute ischemia, thrombolysis is the intervention of choice, followed by operative repair.\n- Recently, endovascular stent grafting has been used, although long-term patency data are still lacking."
    },
    {
      "id": 38,
      "question_type": "mcq",
      "question": "Which of the following is true regarding AAA repair?",
      "options": [
        "A. The appropriate diameter threshold for elective repair for men and women is the same.",
        "B. The diameter threshold for endovascular aneurysm repair (EVAR) in a low-risk patient is lower than that for open repair.",
        "C. Women have higher perioperative mortality rates in both EVAR and open AAA repair when compared with men.",
        "D. Careful surveillance of AAA up to 6.0 cm is safe.",
        "E. In a high-cardiac risk patient with a 5.0-cm AAA, the EVAR approach should be used rather than delay surgery."
      ],
      "answer": "C",
      "explanation": "- Recent studies have shown that AAAs as large as 5.5 cm in diameter can be safely observed (D).\n- Another recent randomized study indicated that although the perioperative mortality rate of EVAR is lower than that of open repair, long-term mortality is the same (C).\n- Women have been shown to have higher perioperative mortality rates than men with either EVAR or open repair.\n- EVAR should not lower the size threshold for repair in a high-risk patient if the AAA has not yet reached the 5.5-cm threshold (B).\n- Guidelines for treatment of AAAs, as reported by a subcommittee of the Joint Council of the American Association for Vascular Surgery and Society for Vascular Surgery, follow:\n    - The arbitrary setting of a single-threshold diameter for elective AAA repair that is applicable to all patients is not appropriate because the decision for repair must be individualized in each case.\n    - Randomized trials have shown that the risk of rupture of small AAAs is quite low and that a policy of careful surveillance of those with a diameter of as large as 5.5 cm is safe, unless there is rapid expansion (>1 cm/yr) or symptoms develop.\n    - However, early surgery is comparable to surveillance with later surgery, so patient preference is important, especially for AAAs 4.5 to 5.5 cm in diameter.\n    - Based on the best available current evidence, a diameter of 5.5 cm appears to be an appropriate threshold for repair in an average patient.\n    - However, subsets of younger low-risk patients with a long projected life expectancy may prefer early repair.\n    - If the surgeon's personal documented operative mortality rate is low, repair may be indicated at smaller sizes if that is the patient's preference.\n    - For women or for AAAs with a greater than average rupture risk, 4.5 to 5 cm is an appropriate threshold for elective repair (A).\n    - For high-risk patients, delay in repair until the diameter is larger is warranted, especially if endovascular aortic repair is not possible (E).\n    - In view of its uncertain long-term durability and effectiveness as well as the increased surveillance burden, EVAR is most appropriate for patients at increased risk of conventional open aneurysm repair.\n    - EVAR may be the preferred treatment method if anatomy is appropriate for older high-risk patients, those with a hostile abdomen, or other clinical circumstances likely to increase the risk of conventional open repair."
    },
    {
      "id": 39,
      "question_type": "mcq",
      "question": "The most common endoleak after an EVAR is type:",
      "options": [
        "A. I",
        "B. II",
        "C. III",
        "D. IV",
        "E. V"
      ],
      "answer": "B",
      "explanation": "- Endoleak is a common complication after EVAR that can lead to aneurysm enlargement and even rupture.\n- Endoleaks occur in as many as 40% of patients after EVAR.\n- Most endoleaks are found in the immediate postoperative period, but late endoleaks also develop.\n- For this reason, routine life-long postoperative surveillance with CT scanning is recommended.\n- New endoleaks have been identified as late as 7 years after EVAR.\n- Endoleaks are classified into five major types (types I-V) based on the source of communication between the circulation and the aneurysm sac.\n- The most common type of leak after endovascular repair is a type II leak, which results from retrograde filling of the aneurysm sac from the lumbar arteries or the IMA.\n- Management of type II leaks is controversial and is based on whether the aneurysm is enlarging or stable.\n- Options include coil embolization of the vessel, laparoscopic ligation, or observation.\n- Type I leaks (A) occur at the stent-graft attachment sites (either at the aorta or at the iliac arteries).\n- Type III leaks (C) occur at a stent-stent interface and are also known as modular disassociations.\n- Type IV leaks (D) are directly through the graft and are due to graft material porosity; they usually heal spontaneously.\n- The most dangerous type of leak is a proximal type I leak because there is a failure to achieve a proximal seal, leading to continued filling of the aneurysm sac at systemic pressures.\n- Type I leaks require immediate treatment when discovered, typically by deploying another stent or, if unsuccessful, by open surgical conversion.\n- Type III endoleaks represent a true mechanical failure of the endograft and require repair with an additional endograft to eliminate systemic flow and pressure in the aneurysm.\n- Type V leak (E) is also referred to as endotension; this can be considered idiopathic because the aneurysmal sac may appear to be enlarging without any evidence of a leak site on imaging."
    },
    {
      "id": 40,
      "question_type": "mcq",
      "question": "A 61-year-old male with end-stage renal disease (ESRD) presents with a cold, painful right leg of 2-hour duration. He has an irregularly irregular heart rate on exam. CT angiography confirms an occlusion of the common femoral artery. He is appropriately treated with a heparin drip and surgical embolectomy with symptom resolution. Four days later the symptoms recur, and the pulses disappear. He is taken back for a repeat embolectomy, at which time a whitish-appearing clot is removed. Which of the following is true regarding this condition?",
      "options": [
        "A. He should receive bivalirudin.",
        "B. tPA would have been a good alternative to re-exploration.",
        "C. He likely has antithrombin-III deficiency.",
        "D. He should receive lepirudin.",
        "E. He should receive argatroban."
      ],
      "answer": "E",
      "explanation": "- This patient most likely has an arterial thrombus secondary to heparin-induced thrombocytopenia thrombosis (HITT).\n- The classic laboratory finding is a decrease in the platelet count of more than 50%.\n- Although thrombocytopenia usually increases the risk of bleeding, HITT is paradoxically known to cause a hypercoagulable state; it is the second most common acquired hypercoagulable state (smoking is the most common).\n- There are two types of HITT, with type 2 being more common and responsible for the clinical syndrome.\n- HITT type 2 is caused by antibodies to platelet-factor 4 and heparin sulfate resulting in a prothrombotic state (will appear as a white clot).\n- It typically occurs 3 to 5 days after starting heparin.\n- If this is suspected, heparin should be discontinued, and the patient should be started on a direct thrombin inhibitor.\n- Argatroban is the recommended agent for patients with HITT and renal impairment.\n- Lepirudin and bivalirudin (A, D) both undergo renal excretion and should be avoided in patients with ESRD.\n- The patient initially had acute limb ischemia secondary to cardiac emboli from atrial fibrillation.\n- His symptoms resolved with initiation of heparin so it is unlikely that he has underlying antithrombin-III deficiency (C).\n- More studies are needed to evaluate the role of tPA in HITT (B)."
    }
  ]
}