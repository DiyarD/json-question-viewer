{
    "chapter_name": "Gynaecology",
    "questions": [
        {
            "id": "1",
            "question_type": "mcq",
            "question": "1. Which of the following statements are true?",
            "options": [
                "A Broad ligament provides the main support for the uterus.",
                "B The ovarian artery arises from the anterior branch of internal iliac artery.",
                "C Gonadotrophin hormones, follicle-stimulating hormones (FSH) and Luteinising hormones (LH) are produced by the pituitary.",
                "D Under the influence of FSH and LH, ovary undergoes cyclical changes leading to the development and release of mature oocyte.",
                "E The ovary produces hormones oestrogen and progesterone that prepare the endometrial lining for implantation."
            ],
            "answer": [
                "C",
                "D",
                "E"
            ],
            "explanation": "The broad ligaments are simply folds of peritoneum and provide no support. The parametrium, composed of the cardinal and uterosacral ligaments, attaches the cervix and upper vagina to the pelvic sidewall and provides the main support to the uterus. The ovarian artery arises from the abdominal aorta and the uterine artery arises from the anterior branch of the internal iliac artery.\nThe gonadotrophin-releasing hormone (GnRH) is produced by the hypothalamus in a pulsatile fashion, which acts on the pituitary to release the reproductive hormones FSH and LH. The coordinated secretion of FSH and LH is responsible for follicle growth, ovulation and maintenance of corpus luteum. The growing follicle produces oestrogen in the proliferative phase of the cycle and progesterone by the corpus luteum after ovulation in the luteal phase of the cycle."
        },
        {
            "id": "2",
            "question_type": "msq",
            "question": "2. Which of the following statements are true regarding performing endometrial biopsy?",
            "options": [
                "A All women more than 40 years old with excessively heavy or irregular or frequent bleeding.",
                "B Thirty-year-old woman presenting with menorrhagia.",
                "C Younger women with polycystic ovarian syndrome (PCOS).",
                "D Women taking tamoxifen.",
                "E Eighteen-year-presenting with heavy irregular periods."
            ],
            "answer": [
                "A",
                "C",
                "D"
            ],
            "explanation": "The mainstay of management when women more than 40 years of age present with heavy or irregular bleeding is to identify and treat pathology which usually involves ultrasound and an endometrial biopsy either under direct vision at hysteroscopy or with a Pipelle. Women taking tamoxifen are at high risk of developing endometrial polyps, hyperplasia and cancer and hence the need to perform endometrial biopsy when these women present with irregular vaginal bleeding. Young women with PCOS are also at high risk of developing endometrial hyperplasia and cancer and hence biopsy is indicated in these women.\nMenstrual bleeding might be excessively heavy or irregular in women less than 40 years of age in whom pathology is very rarely found which is known as dysfunctional uterine bleeding. These women can be treated symptomatically and there is no need to perform endometrial biopsy initially in these women."
        },
        {
            "id": "3",
            "question_type": "msq",
            "question": "3. Regarding ectopic pregnancy, which of the following statements are false?",
            "options": [
                "A Ectopic pregnancy accounts for 1% of all maternal deaths in the United Kingdom.",
                "B Transvaginal ultrasound is the gold-standard diagnostic test.",
                "C In equivocal cases, measuring serum levels of ẞ-hCG can help to establish the diagnosis.",
                "D It can mimic acute urinary tract infection in early pregnancy.",
                "E Smoking increases the risk of ectopic pregnancy."
            ],
            "answer": [
                "A",
                "B"
            ],
            "explanation": "An ectopic pregnancy is one that grows outside the uterine cavity and is the most common cause of maternal death in the first trimester accounting for 9% of maternal deaths in the United Kingdom. The complete absence of an intrauterine gestational sac on transvaginal ultrasound with a positive pregnancy test increases the probability of an ectopic pregnancy but is not diagnostic since the pregnancy might not be advanced enough for the sac to be seen on ultrasound.\nIn equivocal cases where ultrasound is inconclusive, measuring serum levels of ẞ-hCG can help to establish the diagnosis. A single level above approximately 1500 IU/L in association with an empty uterus on ultrasound is highly suggestive of an ectopic pregnancy. The most common presentation of an ectopic pregnancy is with acute pain. It might be associated with urinary frequency and can be confused with urinary tract infection. Cigarette smoking increases the risk by affecting fallopian tube function."
        },
        {
            "id": "4",
            "question_type": "msq",
            "question": "4. Regarding management of ectopic pregnancy, which of the following statements are true?",
            "options": [
                "A Salpingostomy is preferred if a woman has had a previous ectopic pregnancy or tubal surgery in the same tube.",
                "B The principal disadvantage of salpingostomy is that some residual trophoblastic tissue can be left inside the tube.",
                "C An immediate laparotomy might be required if the woman has lost a great deal of blood.",
                "D Methotrexate, is toxic to trophoblastic tissue and hence does not carry any risks associated with residual trophoblastic tissue.",
                "E After treatment, the patient who still has one or both tubes should be warned that she is in increased risk of another ectopic pregnancy."
            ],
            "answer": [
                "B",
                "C",
                "E"
            ],
            "explanation": "Salpingostomy is a conservative surgery whereby only the ectopic pregnancy is removed by making an incision in the tube. The principal disadvantage is that some residual trophoblastic tissue can be left inside the tube. If the woman is haemodynamically unstable and has already lost a lot of blood an immediate laparotomy is needed because it is the quicker option. Since the primary cause of ectopic is tubal pathology, after treatment the patient who still has one or both tubes should be warned that she is at increased risk of another ectopic pregnancy.\nMultiple surgeries on the tube increase the risk of subsequent ectopic and hence a salpingectomy should be performed if a woman has already had surgery on the tube. Methotrexate has to be administered in well-chosen cases to avoid failure. Methotrexate treatment carries the risk associated with residual trophoblastic tissue namely internal bleeding and the eventual need for a laparoscopy."
        },
        {
            "id": "5",
            "question_type": "msq",
            "question": "5. Regarding management of acute pelvic inflammatory disease (PID), which of the following statements are true?",
            "options": [
                "A Single therapy with azithromycin is effective if given for 7 days.",
                "B In hospital, antibiotics should be given intravenously until 24 hours after clinical improvement.",
                "C Where the woman has an intrauterine contraceptive device in situ, removal is recommended along with administration of appropriate antibiotics.",
                "D It is recommended that tubo-ovarian abscesses be managed conservatively unless the patient fails to respond to intravenous antibiotics and systemic support.",
                "E Concomitant use of hormonal contraception reduces the efficacy of antibiotics."
            ],
            "answer": [
                "B",
                "C",
                "D"
            ],
            "explanation": "Inpatient antibiotic treatment should be based on intravenous therapy, which should be continued until 24 hours after clinical improvement followed by oral therapy. Consideration should be given to removing an intrauterine contraceptive device in women presenting with PID, especially if symptoms have not resolved within 72 hours. Women with tubo-ovarian abscess can be treated with intravenous antibiotic regimes in order to maximise antimicrobial dosing and surgical intervention be considered only in cases of leaking or rupture of the abscess or failure to respond to antibiotics.\nBroad-spectrum antibiotic therapy is generally required to cover N. gonorrhoeae, C. trachomatis and anaerobic infection. The recommended regime is oral ofloxacin 400 mg twice daily plus oral metronidazole 400 mg twice daily for 14 days. Data supporting azithromycin monotherapy for PID is limited at present. Use of combined oral contraceptive pill has usually been regarded as protective against symptomatic PID. Concomitant use does not reduce efficacy."
        },
        {
            "id": "6",
            "question_type": "msq",
            "question": "6. Which of the following statements are true regarding rectocele?",
            "options": [
                "A Urinary frequency.",
                "B Difficulties with defecation.",
                "C Sensation of incomplete defecation.",
                "D Recurrent urinary tract infections.",
                "E A sensation of a lump in the vagina."
            ],
            "answer": [
                "B",
                "C",
                "E"
            ],
            "explanation": "A rectocele (prolapse of the rectum into the vagina) might cause difficulties with defecation or a sensation of incomplete defecation, which is relieved by digital reduction of the prolapse. It is also associated with a feeling of lump in the vagina. It might cause sexual concerns, such as feeling embarrassed or sensing looseness in the tone of vaginal tissue.\nHowever, since the urinary bladder is not involved a rectocele by itself does not cause urinary symptoms in the form of urinary frequency or recurrent urinary tract infections."
        },
        {
            "id": "7",
            "question_type": "msq",
            "question": "7. Which of the following statements are true in the diagnosis of endometriosis?",
            "options": [
                "A The symptom complex of dysmenorrhea, deep dyspareunia and infertility is diagnostic of endometriosis.",
                "B Ultrasound scanning can reliably detect only severe forms of the disease, i.e., endometriomas.",
                "C CA-125 levels are typically >1000 u.",
                "D Visual inspection of the pelvis at laparoscopy is a reliable method of diagnosis.",
                "E Magnetic Resonance Imaging (MRI) is helpful in differentiating endometriomas from other ovarian cysts such as dermoid."
            ],
            "answer": [
                "B",
                "D",
                "E"
            ],
            "explanation": "The diagnosis of endometriosis is usually made on visual inspection of the pelvis at laparoscopy; non-invasive diagnostic tools, such as ultrasound scanning, can reliably detect only severe forms of the disease, i.e., endometriomas.\nThe symptoms associated with the disease include severe dysmenorrhoea, chronic pelvic pain, ovulation pain, deep dyspareunia, cyclical symptoms related to the involvement of other organs (e.g., bowel or bladder) with or without abnormal bleeding, infertility and chronic fatigue. However, the predictive value of any one symptom or set of symptoms remains uncertain as each can have other causes (e.g., irritable bowel syndrome or interstitial cystitis) and a significant proportion of affected women are asymptomatic. Serologic testing for CA-125 has been widely used for detection of endometriosis and monitoring of progressive disease. Typically in endometriosis the values are over 35. Very high values in the range of 1000 u are typically associated with epithelial ovarian cancers. Endometriomas have a classic appearance on MRI because of the signal characteristics of blood and hence serves as an additional diagnostic modality."
        },
        {
            "id": "8",
            "question_type": "msq",
            "question": "8. Which of the following statements regarding ovarian cancer are false?",
            "options": [
                "A It is the leading cause of malignancy in women.",
                "B Approximately two thirds of women present in an advanced stage.",
                "C Can present with persistent non-specific abdominal symptoms.",
                "D The peak age of incidence is 40 to 50 years.",
                "E Overall five-year survival rate is above 60%."
            ],
            "answer": [
                "A",
                "D",
                "E"
            ],
            "explanation": "Ovarian cancer is the sixth most common malignancy among women worldwide and the leading gynaecological cause of death in the developing world. The peak incidence is in the age range of 60-70 years. The overall 5-year survival rate is less than 50%.\nApproximately two-thirds of women present with advanced disease. The usual presenting symptoms are abdominal distension or pain. However, more than half of all women present initially with vague symptoms caused by metastatic disease such as shortness of breath or gastrointestinal disturbance. Consequently, it is important to include ovarian cancer in the differential diagnosis of any woman presenting with recent onset of persistent, nonspecific, abdominal symptoms including those whose abdomen and pelvis appears normal on clinical examination."
        },
        {
            "id": "9",
            "question_type": "msq",
            "question": "9. Which of the following statements are true in relation to ovarian cancer?",
            "options": [
                "A The use of combined oral contraceptive pill reduces the risk of developing ovarian cancer in later life.",
                "B About 50% of ovarian cancers are clearly associated with specific genetic factors.",
                "C In stage I of ovarian cancer, the tumour is confined to the ovary.",
                "D Stage 1 grade 1 epithelial adenocarcinoma requires no postoperative therapy.",
                "E Ovarian stimulation with embryo preservation is a fertility-preserving option in women with all grades of ovarian cancer."
            ],
            "answer": [
                "A",
                "C",
                "D"
            ],
            "explanation": "Women who use oral contraceptives have reduced risks of ovarian and endometrial cancer. This protective effect increases with the length of time oral contraceptives are used. In Stage 1, the cancer is confined to ovaries only. Surgery is the mainstay of treatment for ovarian cancer. Staging laparotomy and histological findings provide accurate information about prognosis and the need for additional postoperative therapy. The general principle is cytoreductive surgery followed by combination chemotherapy. However, Stage I/grade 1 epithelial adenocarcinoma requires no postoperative therapy.\nAbout 10% to 30% of ovarian cancers are associated with some genetic mutations. There are still no effective screening methods for ovarian cancer in the general population. Ovarian stimulation with oocyte or embryo freezing has been reported in patients with low-grade tumours (and not all grades of tumours) who wish to preserve fertility, but the effect of this on the underlying disease is as yet unknown and it must therefore be carried out with caution."
        },
        {
            "id": "10",
            "question_type": "matching",
            "question": "Match the diagnoses with the clinical scenarios that follow:",
            "options": {
                "items": [
                    "A A 34-year-old mother of 3 children with a 10-year history of menorrhagia underwent a total abdominal hysterectomy with conservation of the ovaries 2 years earlier. She now complains of persistent pelvic pain that is worse when her period would have been due and deep dyspareunia. Pelvic ultrasound scan shows small bilateral ovarian cysts 2–3cm in diameter but no other abnormalities.",
                    "B A 35-year-old woman complains of a 10-month history of pelvic pain, dysmenorrhoea and deep dyspareunia since discontinuing the combined oral contraceptive pill. She also complains of rectal bleeding during menstruation but has a regular bowel habit and there is no recent weight loss. Clinical examination showed a bulky tender uterus with decreased mobility and palpable nodules within the pouch of Douglas. Rectal examination was normal.",
                    "C A 35-year-old woman has been admitted with sudden onset of severe lower abdominal pain of few hours duration. She has a 3-year-old child. She had an intrauterine contraceptive device inserted 2 years ago. She gives history of irregular menstrual cycles and her last menstrual period was about 6 weeks ago. On examination she looks pale, her blood pressure is 80/50 mmHg and pulse is 120/minute; she is extremely tender over the entire lower abdomen. On vaginal examination there is cervical excitation and the os is closed.",
                    "D A 30-year-old woman has been admitted with severe right-sided lower abdominal pain and vomiting. The pain was colicky to start with but has now settled to a continuous agonising pain. Her last menstrual period was 10 days ago. She is apyrexial, sweaty, with a blood pressure of 110/60 mmHg and a pulse of 120/minute. Abdomen examination reveals tenderness, rigidity and rebound tenderness over the entire lower abdomen.",
                    "E A 28 year old woman has been trying for a pregnancy for 18 months and complains of severe dysmenorrhea and heavy periods with a constant feeling of pelvic pressure. Clinical examination reveals the presence of a 15 weeks size irregularly enlarged firm pelvic mass. The uterus could not be palpated separately from the mass.",
                    "F A 34-year-old woman with one previous ectopic pregnancy complains of a 3-year history of progressive pelvic and lower abdominal pain, dysmenorrhoea and deep dyspareunia. She has no bowel symptoms but has two previous laparoscopies for drainage of tubo-ovarian abscesses. Endocervical swabs for Chlamydia are negative and her white cell count and CRP are within normal limits. Pelvic ultrasound scan shows a normal size anteverted uterus with normal ovaries and a small amount of free fluid in the Pouch of Douglas.",
                    "G A 30-year-old mother of 2 children who has undergone tubectomy presents with a 2-year history of menorrhagia and severe dysmenorrhea with flooding. Pelvic examination reveals a uniformly enlarged uterus of 8 weeks size, which is mobile and non-tender. She did not show any response to a prescription of the combined oral contraceptive pill but responded well to a combination therapy of tranexamic acid and mefenamic acid.",
                    "H A 32-year-old mother of 2 children presented with a dull ache and dragging sensation in the lower abdomen of few months duration. Her cycles are regular and flow normal. On examination, she has a mass in the right iliac fossa and the lower edge of the mass is not felt per abdomen. Bimanual examination reveals a cystic swelling felt through the right and anterior fornices, and it is non-tender and mobile. The uterus is felt separately from the mass."
                ],
                "choices": [
                    "1 Adenomyosis",
                    "2 Benign ovarian cyst",
                    "3 Chronic PID",
                    "4 Endometriosis",
                    "5 Residual ovary syndrome",
                    "6 Ruptured ectopic pregnancy",
                    "7 Twisted ovarian cyst",
                    "8 Uterine fibroid"
                ]
            },
            "answer": {
                "A": "5",
                "B": "4",
                "C": "6",
                "D": "7",
                "E": "8",
                "F": "3",
                "G": "1",
                "H": "2"
            },
            "explanation": "1. G Adenomyosis\nAdenomyosis is defined as the ectopic location of endometrial glands within the uterine myometrium, usually the inner one-third, with surrounding smooth muscle hyperplasia. Most patients with adenomyosis typically present with menorrhagia and dysmenorrhea, which becomes severe as the disease progresses. It is more common in women who have had children. It is often called endometriosis externa, however, both endometriosis and adenomyosis are present simultaneously in fewer than one in four patients. Adenomyosis is a difficult diagnosis to make clinically because the signs and symptoms are nonspecific and often mimic endometriosis or leiomyomas. In adenomyosis, the uterus is enlarged asymmetrically up to a maximum of three times its normal size (less than 14 weeks gestation). The uterus is usually irregularly enlarged with leiomyomas and can attain bigger sizes.\nBoth transvaginal and transabdominal ultrasound have been used to diagnose adenomyosis. Magnetic Resonance Imaging (MRI) is more sensitive and can differentiate adenomyosis from the presence of fibroids.\nMedical management of adenomyosis includes prostaglandin synthetase inhibitors, Danazol and GnRH agonists. Diffuse adenomyosis shows good therapeutic response to a combination therapy of tranexamic acid and mefenamic acid to control pain and menorrhagia. Levonorgesttel-IUS is also another therapeutic option. Hysterectomy is the definitive treatment and is ideal for patients who have completed their family or if the conservative measures have failed in controlling the symptoms.\n\n2. H Benign ovarian cyst\nMost women with benign ovarian cysts are asymptomatic. Dull ache or feeling of heaviness and abdominal swelling are noticed with larger tumours. Conversely, they might also present with pain and pressure effects. The pain might be the result of complications such as torsion or bleeding inside the cysts. Benign ovarian cysts apart from the functional cysts do not affect the menstrual cycles. Pressure symptoms due to ovarian cysts such as urinary frequency or retention are seen if the tumour or cyst is impacted in the Pouch of Douglas or if they are present in the anterior uterovesical pouch.\nEvaluation of a woman who presents with an ovarian mass should be systematic and thorough in order to exclude ovarian malignancy. Transvaginal or trans-abdominal ultrasonography can usually confirm the diagnosis. If results are indeterminate, magnetic resonance imaging or computed tomography scanning might help. Tumour markers might help in the diagnosis of specific tumours.\nIn women of reproductive age, simple, thin-walled cystic adnexal masses of 5–8 cm without characteristics of cancer do not require further investigation unless they persist for more than three menstrual cycles. Many ovarian cysts resolve without treatment; serial ultrasonography is carried out to document resolution. Cyst removal (ovarian cystectomy) via laparoscopy or laparotomy might be necessary for cysts ≥8 cm, cysts that persist for more than three menstrual cycles and haemorrhagic corpus luteum cysts with signs of peritonitis. Cystic teratomas require removal via cystectomy if possible. Oophorectomy is carried out for fibromas, cystadenomas, cystic teratomas >10 cm and cysts that cannot be surgically removed from the ovary.\n\n3. F Chronic PID\nPID is an infection of the female pelvic organs, typically caused by ascending polymicrobial infection with an inciting sexually transmitted pathogen, such as gonorrhea or Chlamydia. Chronic PID is usually due to inadequate treatment of acute infection or due to reinfection. Symptoms often include chronic pelvic pain, dyspareunia, dysmenorrheal and menstrual abnormalities. Clinical examination might reveal fixed tender retroverted uterus, adnexal tenderness, or adnexal masses such as hydrosalpinges or tubo-ovarian masses.\nUltrasonography might reveal a hydrosalpinx or tubo-ovarian mass. Laparoscopy is often required when women present with dysmenorrhea or dyspareunia and chronic pelvic pain to confirm the diagnosis and rule out endometriosis.\nThe complications of chronic or recurrent pelvic infection are hydrosalpinx, pyosalpinx, tubo-ovarian abscess, or long-term consequences of untreated disease, including infertility, ectopic pregnancy and chronic pelvic pain. Prompt and adequate treatment of acute PID is the essential preventive measure. Health care professionals should have a high index of suspicion for diagnosing acute PID in young, sexually active women and a low threshold for treatment to prevent chronic PID. Total abdominal hysterectomy with bilateral salpingo-oophorectomy is indicated in chronic PID if the disease is very advanced and the patient is symptomatic. However in young patients with low parity, laparoscopy or laparotomy to remove adnexal masses could be performed as a conservative option. However, assisted reproductive techniques such as in vitro fertilisation (IVF) are needed if the patient wishes to conceive, as most patients have bilateral tubal damage.\n\n4. B Endometriosis\nEndometriosis – defined as the presence of endometrial-like tissue in extra uterine sites. The symptoms associated with the disease include severe dysmenorrhoea, chronic pelvic pain, ovulation pain, deep dyspareunia, cyclical symptoms related to the involvement of other organs (e.g., bowel or bladder) with or without abnormal bleeding, infertility and chronic fatigue.\nFinding pelvic tenderness, a fixed retroverted uterus, tender uterosacral ligaments, or enlarged ovaries on examination is suggestive of endometriosis. The diagnosis is more certain if deeply infiltrating nodules are found on the uterosacral ligaments or in the Pouch of Douglas or visible lesions are seen in the vagina or on the cervix. However, the definitive diagnosis of endometriosis is usually made on visual inspection of the pelvis at laparoscopy. Noninvasive diagnostic tools, such as ultrasound scanning, can reliably detect only severe forms of the disease, i.e., endometriomas.\nThe treatment options are limited and these include hormonal drugs to suppress ovarian function, the levonorgestrel-IUS and surgical ablation of endometriotic lesions. For a woman who has completed her family, hysterectomy plus bilateral salpingo-oophorectomy and removal of all the endometriosis present offers a good chance of cure. However, surgical treatment in a woman who wishes to conceive in the future aims to be as conservative as possible, ensuring in particular that ovarian function is preserved. The aim is to remove all of the endometriotic tissue and restore anatomy to normal by lysing adhesions. The standard (preferably laparoscopic) methods used are ovarian cystectomy and tissue excision or ablation with electrodiathermy.\n\n5. A Residual ovary syndrome\nOne or both ovaries if retained at the time of hysterectomy can be buried in adhesions and give rise to chronic pelvic pain and dyspareunia. This is called residual ovary syndrome. The residual ovary syndrome usually occurs within 5 years after hysterectomy. The probable incidence of the residual ovary syndrome is 2.3%.\nDiagnosis is most often made from the history and localisation of pelvic pain. The most common symptom of these patients is chronic pelvic pain. In addition, patients characterise the pain as dull and aching to sharp and stabbing. They might also experience low back pain, variable bowel symptoms and dyspareunia. In severe endometriosis or PID a small amount of ovarian tissue that might be left behind during oophorectomy might cause symptoms of chronic pelvic pain and this condition is called remnant ovary syndrome. Imaging studies, including vaginal ultrasound, CT and MRI, aid in the diagnosis.\nAs definitive treatment, surgical excision of the ovary is the best choice in the majority of cases. Extensive pelvic adhesions were the typical operative findings, while follicular cysts and corpus luteum hematoma were the common pathological findings of the residual ovaries. The incidence of malignant neoplastic change in these patients was 3.0%, related to whether hysterectomy was performed before or after the age of 40. In view of the incidence of the residual ovary syndrome and the risk of malignant neoplastic change when hysterectomy is performed after the age of 40, serious consideration of total ovarian ablation at the time of hysterectomy should be weighed against any temporary physiologic or psychologic benefits to be gained from conservation.\n\n6. C Ruptured ectopic pregnancy\nThe clinical features are suggestive of ruptured ectopic pregnancy – hypovolaemic shock, sudden onset of lower abdominal pain and signs of peritonism in the pelvis. Current or previous use of an intrauterine contraceptive device is a high risk factor for ectopic pregnancy. Clinicians should have a high index of suspicion of the diagnosis of ectopic pregnancy in any woman in the reproductive age group presenting with severe lower abdominal pain and hypotension or tachycardia irrespective of the last menstrual period. Urine pregnancy test should be carried out, and an ultrasound is required to confirm the presence of haemoperitoneum. Bleeding or rupture of haemorrhagic corpus luteum might also produce acute pelvic pain and on rare occasions shock, thus simulating ruptured ectopic pregnancy. However, pregnancy test helps in the differentiation of these two conditions.\nRuptured ectopic pregnancy is a surgical emergency that requires prompt resuscitation and immediate surgery by laparotomy. Laparotomy remains the mainstay of management of ruptured ectopic pregnancy nancy if the patient is hypotensive, tachycardic, or otherwise in a haemodynamically unstable condition. Laparoscopic approach of managing ectopic pregnancy has become the gold standard in hemodynamically stable patients. However, in an acute situation, laparoscopy might be performed prior to laparotomy, or the definitive procedure can be carried out by the laparoscopic route if expertise permits.\n\n7. D Twisted ovarian cyst\nTorsion of ovarian cyst is a common complication of an ovarian cyst and is a surgical emergency. The usual presenting symptoms are sudden onset of acute abdominal pain. The cyst, if palpable, is tender and signs of acute abdomen such as rigidity and rebound tenderness are usually present. Confirmation is by ultrasound and this should be followed by emergency laparoscopy or laparotomy. Ovarian cystectomy might be possible after untwisting the ovary or adnexa, however, if the twisted ovary is gangrenous oophorectomy is indicated.\nTorsion of an ovarian cyst is a very common complication and occurs in about 12%. In most cases, the cyst is about 10 cm or more when it undergoes torsion. The tumour rotates through several complete circles, causing the veins in the pedicle to be occluded and the tumour becomes congested. The increased tension inside the tumour causes severe abdominal pain and signs of peritoneal irritation. Torsion of ovarian cyst is seen more commonly with benign cysts, such as dermoid or mucinous cystadenomas, whereas malignant ovarian tumour or endometriotic cysts are unlikely to undergo torsion.\n\n8. E Uterine fibroid\nFibroids are benign, well-circumscribed, smooth muscle tumors of the uterus. Women with uterine fibroids will present with heavy or irregular menstrual bleeding, pressure symptoms, or problems conceiving, especially if there is a fibroid in the uterine cavity. The pressure symptoms include pelvic discomfort, urinary incontinence, frequency and retention, constipation and backache.\nThe diagnosis is usually apparent on bimanual or abdominal examination, on the basis of finding an enlarged uterus with attached swellings. The principal differential diagnosis is an ovarian tumour. As a general rule, the uterus is felt separately on vaginal examination if an ovarian tumour is present, although not if the structures are adherent to each other. Ultrasound can usually establish diagnosis and distinguish fibroids from ovarian tumors.\nTreatment options include shrinkage of the fibroids by inducing a hypo-oestrogenic state with a GnRH agonist, uterine artery embolisation (UAE), myomectomy (removal of the individual fibroids) and hysterectomy. The choice depends upon the woman's age and fertility intentions and size and number of fibroids and their location. It is also important to know whether there are fibroids in the uterine cavity, especially if the woman is trying to conceive."
        }
    ]
}