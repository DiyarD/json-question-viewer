{
  "chapter_name": "Pharmacology 34",
  "questions": [
    {
      "id": 1,
      "question_type": "mcq",
      "question": "A 56-year-old male with non-Hodgkin lymphoma presents to the emergency department (ED) with mental status changes, decreased urine output, and lethargy. He recently was started on chemotherapy. Physical exam is remarkable for a newly placed implantable venous access device below the right clavicle. The port site has no evidence of erythema. Gentle tapping anterior to his external auditory canal results in contraction of his facial muscles on that side. Which of the following is true in regards to this condition?",
      "options": [
        "A. Dialysis is unlikely to help.",
        "B. The risk of this complication has decreased in the past years with the advent of newer therapy agents.",
        "C. Alkalinization of the urine should be performed.",
        "D. The standard initial treatment is allopurinol.",
        "E. Laboratory exam will likely demonstrate a metabolic alkalosis."
      ],
      "answer": "B",
      "explanation": "- Tumor lysis syndrome (TLS) is not uncommonly seen in patients recently started on chemotherapy and primarily occurs in those with poorly differentiated lymphoproliferative disease such as lymphomas or leukemia, but may also occur with solid organ tumors.\n- It is commonly characterized by electrolyte abnormalities that lead to acute renal failure.\n- Although hyperphosphatemia and hyperuricemia occur most commonly, these are often accompanied by hyperkalemia, hypocalcemia, and a metabolic lactic acidosis.\n- The above patient has a physical exam sign consistent with hypocalcemia; Chvostek's sign is muscle spasm with gentle tapping over the facial nerve.\n- Newer monoclonal antibody therapies have demonstrated a decreased risk of causing TLS.\n- Treatment includes aggressive hydration in an attempt to normalize the electrolyte abnormalities and improve renal function.\n- Although alkalinization of urine was thought to be a useful adjunct in TLS, there are newer studies suggesting that it may contribute to renal dysfunction, and this is now considered a controversial adjunct and not widely used.\n- Allopurinol is used to treat the hyperuricemia of malignancy; however, this can lead to an increased risk of xanthine and calcium phosphate crystals.\n- Newer approaches include use of urate oxidase, which can provide effective treatment while having a safer profile.\n- Hydration remains the best treatment modality.\n- In refractory cases, dialysis can be used."
    },
    {
      "id": 2,
      "question_type": "mcq",
      "question": "A 78-year-old female is recovering in the intensive care unit (ICU) from a small bowel resection due to a strangulated femoral hernia. She is known to have long-standing hearing loss. On postoperative day 2 she becomes increasingly agitated and confused. Laboratory exam and infection workup are unrevealing. She is attempting to pull out her intravenous (IV) lines. Which of the following is true regarding her condition?",
      "options": [
        "A. Lorazepam may worsen her agitation.",
        "B. Low doses of diphenhydramine are often useful.",
        "C. She should be placed in physical restraints.",
        "D. It is unlikely that a hearing aid could have prevented this condition.",
        "E. Haloperidol is contraindicated."
      ],
      "answer": "A",
      "explanation": "- Patients in the ICU often experience ICU delirium, with 20% to 80% of elderly patients experiencing it.\n- The Hospital Elder Life Program (HELP) is an inpatient strategy to prevent ICU delirium, focusing on primary prevention with regular reorientation, proper sleep-wake cycles, nutrition, early mobilization, and visual and hearing adaptations for sensory impairments.\n- Physical restraints should be avoided as they lead to decreased mobility, increased agitation, greater risk of injury, and prolongation of delirium.\n- Certain patients will still require pharmacologic therapy.\n- Benzodiazepines are not uncommonly administered to elderly patients for agitation, insomnia, and anxiety; however, they are known to have adverse and paradoxical effects, so their use should be limited.\n- Patients may experience drowsiness, depression, confusion, vertigo, insomnia, or worsened agitation with benzodiazepine use.\n- Diphenhydramine may demonstrate a similar effect in the elderly population and should be used with caution.\n- Haloperidol is often the first-line treatment in the management of an aggressive and agitated patient in the context of delirium."
    },
    {
      "id": 3,
      "question_type": "mcq",
      "question": "Which of the following has the strongest causal link with retroperitoneal fibrosis?",
      "options": [
        "A. Entacapone",
        "B. Methysergide",
        "C. a-Methyldopa",
        "D. Beta-blockers",
        "E. Hydralazine"
      ],
      "answer": "B",
      "explanation": "- Although all the answer choices are associated with retroperitoneal fibrosis, the strongest association is with methysergide, a semisynthetic ergot alkaloid used to treat migraine headaches."
    },
    {
      "id": 4,
      "question_type": "mcq",
      "question": "Initial treatment of retroperitoneal fibrosis consists of:",
      "options": [
        "A. Cyclosporine",
        "B. Tamoxifen",
        "C. Ureterolysis",
        "D. Prednisone",
        "E. Azathioprine"
      ],
      "answer": "D",
      "explanation": "- Steroids are the mainstay of treatment for retroperitoneal fibrosis because this condition is thought to be related to an autoimmune process.\n- Circulating antibodies to ceroid are present in more than 90% of patients, supporting the autoimmune theory.\n- It is important to first obtain a tissue diagnosis.\n- Ureterolysis, ureteral stenting, or nephrostomy tubes are reserved for those who do not respond or those who have massive hydronephrosis with alteration of renal function.\n- Patients are also at risk for the development of thrombosis of the iliac veins or inferior vena cava, and as such, they may require oral anticoagulation.\n- For those who do not respond to oral steroids, cyclosporine, tamoxifen, and azathioprine have been successfully used.\n- Biologic therapies such as B-cell depletion with rituximab are starting to emerge as potential treatment options in difficult-to-treat patients.\n- The overall prognosis is excellent with 5-year survival rates reportedly in the 90% to 100% range."
    },
    {
      "id": 5,
      "question_type": "mcq",
      "question": "Intravenous administration of Haldol should be accompanied by:",
      "options": [
        "A. A review of admission electrocardiogram (ECG) for a prolonged QT interval",
        "B. A review of admission ECG for Q waves",
        "C. Continuous ECG monitoring for development of peaked t waves",
        "D. Continuous O2 saturation monitoring",
        "E. Serial serum creatine phosphokinase (CPK) measurements"
      ],
      "answer": "A",
      "explanation": "- Elderly patients in the hospital often experience agitation that can potentiate aggressive behavior, requiring sedation to prevent self-harm.\n- Haloperidol (Haldol) is often the first-line treatment in the management of an aggressive and agitated patient in the context of delirium.\n- Before the administration of haloperidol, an ECG should be performed to rule out a prolonged QT syndrome that the drug can potentiate and lead to life-threatening torsades de pointes and/or heart failure.\n- Peaked T waves can occur with hyperkalemia.\n- Q waves are usually present following myocardial infarction.\n- Continuous oxygen saturation monitoring is not required before Haldol administration.\n- Serial serum CPK measurements are recommended for patients receiving continuous infusions of propofol."
    },
    {
      "id": 6,
      "question_type": "mcq",
      "question": "Which of the following is true regarding the prophylactic role of histamine-2 (H2) blockers and/or proton pump inhibitors (PPIs) in hospitalized patients?",
      "options": [
        "A. Both agents will result in a similar rate of upper gastrointestinal bleeding.",
        "B. Effective stress ulcer prophylaxis with these agents involves achieving an intragastric pH greater than 5.",
        "C. Intravenous administration of PPI results in a higher intragastric pH compared with oral administration when given at the same dose and frequency.",
        "D. There is no difference in the rate of nosocomial pneumonia.",
        "E. Critically ill and/or ventilated patients that receive PPI have lower mortality rates."
      ],
      "answer": "D",
      "explanation": "- Gastrointestinal stress ulceration occurs in 1% to 4% of all critically ill patients with a 50% mortality rate.\n- The use of PPI versus H2-blockers has been widely studied.\n- A recent meta-analysis of eight randomized controlled trials looking at critically ill patients found no difference in the rate of nosocomial pneumonia or mortality in either group.\n- However, the use of PPI may lead to an increased risk of *Clostridium difficile* infection.\n- Additionally, the PPI group did have a *decreased* rate of clinically significant upper gastrointestinal bleeding.\n- It has been demonstrated that achieving an intragastric pH greater than 6 results in clot stabilization and increased platelet aggregation.\n- Intravenous or oral PPIs are equipotent in achieving a prophylactic intragastric pH to prevent ulcer formation when given at the same dose and frequency."
    },
    {
      "id": 7,
      "question_type": "mcq",
      "question": "A 57-year-old Child class A cirrhotic male presents to the ED with severe left lower quadrant pain. Physical exam is concerning for peritonitis, and free air under the diaphragm is seen on chest x-ray. In the operating room (OR) he is found to have feculent peritonitis secondary to a perforated sigmoid diverticulitis and undergoes a Hartmann procedure. The following day the respiratory therapist in the ICU has difficulty ventilating and oxygenating. The patient has complete white out of both lung fields on x-ray, and the Pao2/FiO2 ratio is 180. Low tidal volume ventilation is commenced and the decision to paralyze the patient is made. Which agent should be used?",
      "options": [
        "A. Rocuronium",
        "B. Vecuronium",
        "C. Atracurium besylate",
        "D. Suxamethonium chloride",
        "E. Pancuronium"
      ],
      "answer": "C",
      "explanation": "- In a patient with underlying liver disease, the paralytic of choice is atracurium besylate or cisatracurium.\n- These are nondepolarizing neuromuscular blocking agents metabolized by Hoffman degradation, thereby bypassing the liver.\n- Cisatracurium is approximately threefold stronger than atracurium besylate and more commonly used in this patient population.\n- Additionally, cisatracurium does not lead to histamine release resulting in flushing and hypotension when compared to atracurium besylate, making it a better alternative.\n- The remaining answer choices (Rocuronium, Vecuronium, Suxamethonium chloride, Pancuronium) are excreted either wholly or partly by the liver."
    },
    {
      "id": 8,
      "question_type": "mcq",
      "question": "Which of the following is true in regard to correcting metabolic acidosis?",
      "options": [
        "A. Giving bicarbonate alone will be efficient in correcting an acidosis.",
        "B. Correction will fix the pulmonary vasodilation seen in metabolic acidosis.",
        "C. Administration of sodium bicarbonate can lead to hyperkalemia.",
        "D. Sodium bicarbonate may interfere with oxygen delivery.",
        "E. Lactic acidosis will often improve after sodium bicarbonate administration."
      ],
      "answer": "D",
      "explanation": "- Persistent metabolic acidosis can lead to widespread dysfunction, most commonly affecting the cardiovascular and respiratory systems.\n- This will result in peripheral vasodilation and pulmonary vasoconstriction, in addition to enzymatic and hormone dysfunction.\n- Sympathetic stimulation functions poorly because catecholamines are unable to exert their effect on tissue damaged by a low pH.\n- Bicarbonate as an anion alone cannot be given to a patient; it is therefore paired with a hypertonic sodium solution.\n- The use of sodium bicarbonate does have some adverse effects, including hypernatremia, hypokalemia, and a left shift in the oxyhemoglobin dissociation curve.\n- The left shift is concerning because this can increase the affinity hemoglobin has for oxygen and leave tissue hypoxic, which in turn will lead to worsening acidosis.\n- The main goal of using sodium bicarbonate is in patients who are persistently severely acidotic and are starting to have negative cardiovascular symptoms."
    },
    {
      "id": 9,
      "question_type": "mcq",
      "question": "A 62-year-old female with a known history of chronic pancreatitis and subtotal gastrectomy presents to the ED with abdominal pain, altered mental status, unsteady gait, and aphasia. Physical exam is significant for ophthalmoplegia on the right. The patient is confused and unable to answer any questions, but her husband claims she was doing well several hours ago. He also states that this is the first time she has behaved this way. Which of the following is the best treatment?",
      "options": [
        "A. Intravenous glucose",
        "B. Oral vitamin B12",
        "C. Intramuscular vitamin B12",
        "D. Parenteral vitamin B1",
        "E. Intravenous magnesium"
      ],
      "answer": "D",
      "explanation": "- The patient is demonstrating Wernicke encephalopathy, which is caused by a deficiency in thiamine (vitamin B1).\n- Thiamine deficiency occurs most commonly in alcohol-dependent patients with a poor diet.\n- It may also be seen in post-gastrectomy patients who are predisposed to large gastrointestinal losses and can become deficient in this vitamin.\n- Administration of thiamine quickly reverses the symptoms, particularly in the setting of acute Wernicke encephalopathy.\n- Administering glucose before thiamine may be counterproductive because glucose oxidation is a thiamine-intensive process and may deplete any remaining thiamine that may be available.\n- Magnesium may be indicated particularly in alcoholic patients because thiamine administration may be refractory in the setting of hypomagnesemia; however, there is no information provided in the vignette to suggest this patient is an alcoholic.\n- Vitamin B12 deficiency will have a more insidious onset and present with macrocytic anemia, peripheral neuropathy, and ataxic gait; confusion, aphasia, and ophthalmoplegia are not characteristic of vitamin B12 deficiency."
    },
    {
      "id": 10,
      "question_type": "mcq",
      "question": "Which of the following medications would lead to a patient requiring a higher warfarin dose to remain therapeutic?",
      "options": [
        "A. Ketoconazole",
        "B. Cimetidine",
        "C. Amiodarone",
        "D. Rifampin",
        "E. Allopurinol"
      ],
      "answer": "D",
      "explanation": "- Cytochrome P450 is a part of the superfamily of proteins containing a heme factor and is involved in the metabolism of warfarin.\n- There are inhibitors and inducers of CYP450 that will enhance or dampen the effect of warfarin, respectively.\n- Clinically relevant inhibitors of CYP450 include amlodipine, cimetidine, ciprofloxacin, cyclosporine, diltiazem, ketoconazole, isoniazid, and propranolol; patients using these medications will need to decrease the dose of warfarin to maintain the same therapeutic international normalized ratio (INR).\n- Inducers of CYP450 include barbiturates, phenytoin, prednisone, rifampin, as well as omeprazole; patients on these medications will need to increase their warfarin dosage."
    },
    {
      "id": 11,
      "question_type": "mcq",
      "question": "Which of the following is true in regard to the bioavailability of medications?",
      "options": [
        "A. IV ciprofloxacin has a similar bioavailability to the oral form.",
        "B. Drugs that are absorbed in the stomach have better bioavailability than drugs absorbed in the small intestine.",
        "C. Hydrophobic drugs are better absorbed than hydrophilic drugs.",
        "D. Sublingual medications have lower bioavailability than medications absorbed through the gastrointestinal tract.",
        "E. The dose of chloramphenicol needs to be decreased in patients when given IV to decrease the chance of toxicity compared to the oral route."
      ],
      "answer": "A",
      "explanation": "- Bioavailability of a medication refers to the rate at which an administered drug is absorbed by the circulatory system.\n- The bioavailability of a medication that is given intravenously theoretically has 100% bioavailability, but this does not always prove to be the case.\n- Generally, the IV route provides a higher bioavailability when compared with the oral form.\n- One notable exception is ciprofloxacin, which has similar bioavailability with either IV or oral form.\n- Additionally, the location of absorption is important.\n- Most drugs absorbed in the small intestine have greater bioavailability than drugs absorbed in the stomach because the bowel has 1000-fold increased surface area for absorption compared with the stomach.\n- Medications absorbed by the intestines are routed to the portal circulation first and therefore are initially metabolized by the liver; this is known as \"first-pass metabolism.\"\n- Because of this, the medication has a lower initial bioavailability.\n- This does not hold true for sublingual, rectal, intramuscular, and subdermal medications because they do not pass through the liver before their systemic spread.\n- Another notable exception is chloramphenicol, an antibiotic used commonly in developing countries but less so domestically because it can cause life-threatening aplastic anemia.\n- This drug has better bioavailability when given orally than IV.\n- Serum concentrations of IV chloramphenicol are only 70% of those achieved when compared with the oral form."
    },
    {
      "id": 12,
      "question_type": "mcq",
      "question": "A79-year-old female develops atrial fibrillation on postoperative day 2 after repair of an incisional hernia. The patient is started on digoxin. Which of the following is true about digoxin?",
      "options": [
        "A. Digoxin slows down the release of electrical impulses from the SA node to decrease atrial contraction and slow down the heart rate.",
        "B. Adverse effects are more commonly seen when patients are hyperkalemic.",
        "C. When toxicity occurs, it should be immediately treated with dialysis.",
        "D. Increased intracellular concentration of calcium is what leads to a stronger cardiac contraction.",
        "E. Therapeutic digoxin will lead to a prolonged QT interval seen on ECG."
      ],
      "answer": "D",
      "explanation": "- Digoxin is a cardiac glycoside that has been used for cardiac arrhythmias as well as heart failure.\n- Digoxin inhibits the Na+/K+ ATPase in the myocardium.\n- By inhibiting this, it leads to an increase in intracellular sodium and a reversal in the sodium-calcium exchanger.\n- This in turn causes increased intracellular calcium, which leads to a stronger cardiac contraction and a lengthened phase 4 and 0 of the cardiac action potential.\n- Digoxin acts on the AV node and by slowing the electrical conduction through this location, it can be used in an attempt to cardiovert the heart back into a regular rhythm.\n- Because digoxin works on the Na+/K+ ATPase, a toxic level can be achieved much faster in a hypokalemic patient.\n- If a patient is experiencing digoxin toxicity, the treatment is anti-digoxin.\n- Dialysis is not efficient enough to reduce the level of digoxin quickly.\n- Therapeutic digoxin will lead to a shortened QT interval seen on ECG."
    },
    {
      "id": 13,
      "question_type": "mcq",
      "question": "A 67-year-old female is brought into the ED in septic shock of unknown origin. She is hypotensive, diaphoretic, febrile, and found to have a leukocytosis and altered mental status. A rapid sequence intubation (RSI) is performed. On hospital day 2, the patient continues to have hypotension despite fluid resuscitation and the use of vasopressors. She is given a dose of hydrocortisone and vastly improves. Which of the following explains the patient's symptoms?",
      "options": [
        "A. Poor perfusion of the adrenal gland in the setting of shock",
        "B. The use of etomidate during RSI",
        "C. She is on steroids at home.",
        "D. Overuse of vasopressors",
        "E. Pituitary dysfunction with insufficient release of adrenocorticotropic hormone (ACTH)"
      ],
      "answer": "B",
      "explanation": "- Etomidate is the preferred anesthetic agent for RSI because it has minimal cardiopulmonary affects.\n- It is also frequently used in the trauma population because it leads to a decreased cerebral metabolic rate and may assist in decreasing intracranial pressure.\n- One notable disadvantage is that it can result in adrenal dysfunction because it is a known inhibitor of cortisol synthesis (11β-hydroxylase).\n- A systematic review performed between 1983 and 2010 identified 21 studies that fit criteria evaluating the adverse effects of etomidate.\n- It demonstrated that patients that received etomidate had an increased relative risk of 1.64 for adrenal insufficiency and an increased relative risk for mortality of 1.19.\n- A single dose can suppress the adrenal gland for up to 72 hours.\n- There is no information given to suggest this patient is on chronic steroids.\n- Hypoperfusion of the adrenal glands in the setting of shock, overuse of vasopressors, and pituitary dysfunction are all possible, but etomidate is more likely given the use of RSI."
    },
    {
      "id": 14,
      "question_type": "mcq",
      "question": "Which of the following medications is safe to give a patient who is 10 weeks pregnant?",
      "options": [
        "A. Acetaminophen",
        "B. Aspirin",
        "C. Propylthiouracil (PTU)",
        "D. Coumadin",
        "E. Lisinopril"
      ],
      "answer": "C",
      "explanation": "- Propylthiouracil (PTU) has been proven to be safe during the first trimester of pregnancy to treat patients with hyperthyroidism.\n- Methimazole has fallen out of favor because of the increased risk of congenital hypothyroidism (cretinism).\n- ACE-inhibitors have been linked to congenital malformations and renal failure.\n- Coumadin crosses the blood/baby barrier and can lead to skeletal and CNS defects.\n- Aspirin and acetaminophen have both been linked to increased miscarriages and therefore should be avoided if at all possible.\n- Acetaminophen, which had previously been thought to be safe, has now been linked to hyperkinetic and behavioral disorders such as autism.\n- Acetaminophen is considered a category B drug."
    },
    {
      "id": 15,
      "question_type": "mcq",
      "question": "Choose the medication that is correctly paired with its mechanism of action.",
      "options": [
        "A. Cyclosporine—purine synthesis inhibitor",
        "B. Vincristine—microtubule formation and stabilization",
        "C. 5-Fluourouracil—thymidylate synthase inhibitor",
        "D. Taxol—microtubule inhibitor",
        "E. Infliximab—Vascular endothelial growth factor (VEGF) inhibitor"
      ],
      "answer": "C",
      "explanation": "- 5-Flourouracil (5FU) is a thymidylate synthase inhibitor that inhibits purine and DNA synthesis.\n- When used in combination with Leucovorin, it has increased activity and increased toxicity.\n- Cyclosporine is an immunosuppressant that binds to cyclophilin proteins and inhibits genes for cytokine synthesis, particularly IL-2.\n- Side effects of cyclosporine include nephrotoxicity, hepatotoxicity, tremors, seizures, and hemolytic uremic syndrome.\n- Vincristine is a chemotherapeutic agent that works by inhibiting microtubule formation.\n- Taxol is also a chemotherapeutic agent but works by microtubule formation and stabilization.\n- Infliximab is a monoclonal antibody against TNF-α.\n- By binding to TNF-α, it inhibits its ability to bind to receptors and reduces the autoimmune inflammatory response.\n- Bevacizumab is a VEGF inhibitor and has been demonstrated to improve survival in patients with metastatic colorectal cancer."
    },
    {
      "id": 16,
      "question_type": "mcq",
      "question": "A 52-year-old male with atrial fibrillation presents to the ED with a large biloma identified on ultrasonography 1 week after undergoing a laparoscopic cholecystectomy. He complains of abdominal pain but does not appear to be in significant discomfort. He was restarted on warfarin after the operation and his international normalized ratio (INR) is currently 2.7. The plan is to attempt CT-guided drainage the following day. How should his INR be corrected?",
      "options": [
        "A. Oral vitamin K",
        "B. Slow IV infusion (over 30 minutes) of vitamin K",
        "C. Fresh frozen plasma (FFP)",
        "D. Allow warfarin to autocorrect",
        "E. Prothrombin complex concentrate"
      ],
      "answer": "A",
      "explanation": "- Reversing warfarin depends on the clinical situation.\n- If the patient is actively bleeding, and therefore reversal is urgent, prothrombin factor concentrate is now preferred over FFP.\n- However, in a patient that is therapeutically anticoagulated and requires an invasive intervention electively, urgent reversal is not needed.\n- The metabolism of warfarin is regulated by diet and concomitant medications.\n- The half-life is 48 to 72 hours, which allows the drug to continue its effects for about 4 to 6 days after cessation.\n- As such, allowing warfarin to autocorrect can take up to 6 days.\n- This patient is in no distress and there are no hard signs to intervene urgently, and therefore the correction can be done slowly with administration of oral vitamin K.\n- This takes up to 24 hours to have an effect and is the ideal choice in a patient undergoing CT-guided drainage the following day.\n- IV push (over 3–5 minutes) administration of vitamin K is generally discouraged because there is a risk of thrombosis and anaphylaxis.\n- However, slow IV infusion over 30 minutes is acceptable, and it usually takes 8 to 12 hours for it to have an effect."
    },
    {
      "id": 17,
      "question_type": "mcq",
      "question": "A 58-year-old male postoperative patient develops a hypertensive crisis with a blood pressure of 220/100 mm Hg and heart rate of 60 beats per minute. He is started on a nitroprusside drip, and the blood pressure improves. The patient subsequently develops generalized weakness and becomes unresponsive. He is immediately intubated and an arterial blood gas demonstrates a high anion-gap acidosis with a high SVO2. His skin color appears pink, and he has the smell of bitter almonds on his breath. Which of the following should you administer next?",
      "options": [
        "A. Sodium nitrite",
        "B. Amyl nitrite",
        "C. Sodium thiosulfate",
        "D. Hydroxycobalamin",
        "E. Methylene blue"
      ],
      "answer": "C",
      "explanation": "- The patient is experiencing cyanide poisoning, which can occur following the administration of a nitroprusside drip.\n- Nitroprusside is metabolized into nitric oxide and cyanide.\n- The accumulation of cyanide leads to a left shift in the oxyhemoglobin dissociation curve resulting in decreased oxygen delivery.\n- This leads to a severe lactic acidosis, which is a hallmark of cyanide poisoning.\n- Additionally, the hemoglobin holding on to the oxygen content leads to an increase in the SVO2.\n- The initial treatment is inhaled amyl nitrite followed by intravenous sodium nitrite.\n- These agents are considered methemoglobin inducers, which allows for methemoglobin to reversibly bind with cyanide to make cyanomethemoglobin.\n- Sodium thiosulfate is then administered, which helps convert cyanomethemoglobin to thiocyanate, a harmless metabolite that is renally excreted.\n- Hydroxycobalamin, a form of vitamin B12, is a new medication used to reverse the effects of cyanide by binding to cyanide to form cyanocobalamin, which is then excreted through the urine.\n- Although this drug shows promise, it is not yet the standard of care.\n- Methylene blue is used in the treatment of methemoglobinemia."
    },
    {
      "id": 18,
      "question_type": "mcq",
      "question": "A 75-year-old male with stage 4 chronic kidney disease (CKD) and symptomatic peripheral arterial disease is scheduled for a catheter-based angiography. Which of the following should be administered before the study?",
      "options": [
        "A. Alkalinization of the urine with sodium bicarbonate intravenously",
        "B. N-acetylcysteine",
        "C. Aggressive fluid resuscitation with normal saline",
        "D. N-acetylcysteine and aggressive fluid resuscitation with normal saline",
        "E. Alkalinization of the urine with sodium bicarbonate intravenously, N-acetylcysteine, and aggressive fluid resuscitation with normal saline"
      ],
      "answer": "C",
      "explanation": "- N-acetylcysteine, alkalinization of the urine, and aggressive fluid resuscitation have all been shown to have a theoretic benefit.\n- However, only intravenous fluid hydration has consistently demonstrated a clinical benefit when used in patients with CKD undergoing a contrast study.\n- Additionally, the degree of nephrotoxicity is dose dependent and increases with ionized contrast versus nonionized contrast."
    },
    {
      "id": 19,
      "question_type": "mcq",
      "question": "Which of the following medications is paired with the correct side effect?",
      "options": [
        "A. Furosemide—nausea",
        "B. Metronidazole—tinnitus",
        "C. Spironolactone—fulminant hepatic necrosis",
        "D. Halothane—gynecomastia",
        "E. Vancomycin—cutaneous flushing"
      ],
      "answer": "E",
      "explanation": "- Furosemide is a loop diuretic and can result in hypocalcemia, hypokalemia, gout, ototoxicity, and tinnitus.\n- Metronidazole is an antibiotic used frequently in patients in need of anaerobic coverage and can lead to intractable nausea and emesis, particularly if taken with alcohol (disulfiram-like reaction).\n- Spironolactone is a potassium-sparing diuretic that can result in hyperkalemia and gynecomastia.\n- Halothane is an anesthetic agent that may rarely result in fulminant hepatic failure.\n- Vancomycin will induce peripheral vasodilation resulting in cutaneous flushing, and rarely, it can cause red man syndrome."
    }
  ]
}