{
  "chapter_name": "Nervous System",
  "questions": [
    {
      "id": 1,
      "question_type": "mcq",
      "question": "Which of the following is true regarding head trauma and/or intracranial hemorrhage?",
      "options": [
        "A. The most common cause of subarachnoid hemorrhage is rupture of a berry aneurysm.",
        "B. Epidural hematoma is typically associated with acceleration-deceleration injuries.",
        "C. A single episode of systolic blood pressure (BP) less than 90 mm Hg doubles mortality in patients with head trauma.",
        "D. Xanthochromia is virtually pathognomonic for acute subdural hemorrhage.",
        "E. In the absence of other findings, reimaging for cerebral contusion is generally unnecessary."
      ],
      "answer": "C",
      "explanation": "* Traumatic brain injuries (TBIs) are common presenting symptoms in emergency departments and a leading cause of trauma-related death.\n* Preventing secondary injury involves maintaining cerebral perfusion pressure greater than 60 mm Hg.\n* A single episode of hypotension (systolic BP less than 90 mm Hg) doubles mortality in patients with head trauma.\n* Trauma is the most common etiology of subarachnoid hemorrhage (SAH), followed by rupture of berry aneurysms (Option A is incorrect).\n* Xanthochromia of cerebrospinal fluid (CSF) is pathognomonic for subarachnoid hemorrhage, not acute subdural hemorrhage (Option D is incorrect).\n* Epidural hematoma is typically the result of direct skull trauma disrupting arterial vessels (e.g., middle meningeal artery), often presenting with a 'lucid' interval. CT shows a lentiform (biconvex) clot that does not cross suture lines.\n* Acute subdural hematoma is generally the result of acceleration-deceleration injuries that tear bridging veins (Option B is incorrect). Patients are often unconscious from impact. CT shows a hyperdense, lunar (crescent-shaped) lesion that does not cross the midline.\n* Cerebral contusion is due to the brain directly striking the skull. Lesions are typically scattered, hyperdense, and intraparenchymal on noncontrast CT.\n* There is a significant propensity for cerebral contusion lesions to worsen, and repeat imaging is typically recommended in the first 24 hours (Option E is incorrect)."
    },
    {
      "id": 2,
      "question_type": "mcq",
      "question": "A 25-year-old male is being evaluated in the emergency department (ED) after sustaining a blow to the head with an unknown object during an assault. He has a 6-cm, stellate laceration with an underlying hematoma. Computed tomography (CT) scan shows evidence of a skull fracture. In which of the following situations can this patient be managed nonoperatively?",
      "options": [
        "A. Dural but not brain penetration",
        "B. 1.5 cm of skull depression",
        "C. Involvement of the frontal sinus without other areas affected",
        "D. Pneumocephalus",
        "E. Linear basilar skull fracture with evidence of cerebrospinal fluid leak (CSF) leak"
      ],
      "answer": "E",
      "explanation": "* Any skull fracture with an overlying laceration is considered an open fracture, traditionally requiring surgical intervention to prevent infection.\n* However, a subset of patients can be managed expectantly without significant increases in morbidity.\n* Nonoperative management of open skull fracture can be considered in patients without evidence of dural penetration, significant intracranial hematoma, frontal sinus involvement, wound infection, pneumocephalus, or gross wound contamination (Options A, C, D are incorrect).\n* Patients with less than 1 cm of skull depression can be managed nonoperatively (Option B is incorrect).\n* Linear skull fractures are generally considered nonoperative, and most CSF leaks will resolve spontaneously. Persistent CSF drainage may require eventual surgical intervention."
    },
    {
      "id": 3,
      "question_type": "mcq",
      "question": "A 26-year-old male presents with a traumatic head injury. Glasgow Coma Scale (GCS) is 6 and an intraparenchymal pressure monitor is placed after he is intubated. He is admitted to the intensive care unit (ICU). Two days later his intracranial pressure has risen above 30 mm Hg. Which of the following is least indicated for this patient?",
      "options": [
        "A. Neuromuscular blockade",
        "B. Change intraparenchymal pressure monitor to external ventricular drain for intermittent CSF drainage",
        "C. Administer gamma-aminobutyric acid (GABA) agonist",
        "D. Hyperventilate with Paco2 goal of 30 to 35 mm Hg",
        "E. Continuous infusion of 3% hypertonic saline"
      ],
      "answer": "E",
      "explanation": "* The American College of Surgeons Trauma Quality Improvement Project (TQIP) recommends a three-tiered approach for managing intracranial pressures (ICP) above 20 to 25 mm Hg.\n* Tier 1 interventions include head of bed elevation to 30 degrees, sedation/analgesia, intermittent CSF drainage, and repeat CT.\n* Tier 2 interventions include changing to an external ventricular drain (B), hyperosmolar therapy with hypertonic saline or mannitol boluses, Paco2 goal of 30 to 35 mm Hg (D), and neuromuscular paralysis “test bolus.”\n* Tier 3 interventions include decompressive hemicraniectomy, continuous neuromuscular paralysis (A), and inducing a barbiturate (GABA agonist) coma (C).\n* Hypertonic saline is not currently recommended as a continuous infusion by TQIP or Brain Trauma Foundation guidelines due to unclear efficacy and ineffectiveness at creating acute osmotic disequilibrium when given as an infusion.\n* Mild hyperventilation is only indicated when there is adequate brain perfusion, as it can worsen hypoxic injury."
    },
    {
      "id": 4,
      "question_type": "mcq",
      "question": "A 45-year-old female arrives at the ED after diving head first into a half-empty swimming pool. She is combative and appears intoxicated. She does not respond to painful stimuli of the lower extremities or trunk. You observe her lifting her arms and bending at the elbows but are unable to assess any movement in her hands. It has been 30 minutes since she first sustained her injury. Which of the following is true regarding this patient?",
      "options": [
        "A. The likely site of her injury is C3-C4.",
        "B. In the absence of other injuries, methylpredni-solone should be administered immediately.",
        "C. This is a rare spinal cord injury after a diving accident.",
        "D. Anticoagulation should be started within 2 to 3 days and continued for 2 to 3 months.",
        "E. Mean arterial pressure should be maintained between 65 and 75 mm Hg for the first 7 days."
      ],
      "answer": "D",
      "explanation": "* Complete paralysis of the lower extremities and trunk with preservation of shoulders and elbows most likely indicates an injury at C5 or below (Option A is incorrect).\n* The most common spinal injury after a diving accident is C5, followed by C6 (Option C is incorrect).\n* The use of steroids in spinal cord injury is controversial; recent level 1 evidence recommends against their use (Option B is incorrect).\n* Trauma victims with spinal cord and head injury have the highest risk of venous thromboembolic events (VTEs).\n* Without prophylaxis, VTE risk is about 40% after complete spinal cord injury.\n* Mechanical prophylaxis (compression devices) should be started immediately.\n* Anticoagulation should be started within 72 hours and continued for 2 to 3 months, with low-molecular-weight heparin preferred.\n* Mean arterial pressure should be maintained between 85 and 90 mm Hg for the first 7 days (Option E is incorrect)."
    },
    {
      "id": 5,
      "question_type": "mcq",
      "question": "Neurogenic thoracic outlet syndrome most commonly affects which nerve?",
      "options": [
        "A. Radial",
        "B. Ulnar",
        "C. Median",
        "D. Musculocutaneous",
        "E. Axillary"
      ],
      "answer": "B",
      "explanation": "* Neurologic symptoms occur in 95% of cases of thoracic outlet syndrome.\n* The lower two nerve roots of the brachial plexus, C8 and T1, are most commonly (90%) involved, producing pain and paresthesias in the ulnar nerve distribution (Options A, C-E are incorrect).\n* The second most common anatomic pattern involves the upper three nerve roots of the brachial plexus, C5, C6, and C7, with symptoms referred to the neck, ear, upper chest, upper back, and outer arm in the radial nerve distribution."
    },
    {
      "id": 6,
      "question_type": "mcq",
      "question": "A 26-year-old intubated male is opening his eyes to voice and attempts to open his mouth. His only consistent motor movement is to occasionally withdraw from painful stimuli. What is his current GCS score?",
      "options": [
        "A. GCS 4T",
        "B. GCS 8T",
        "C. GCS 9T",
        "D. GCS 11T",
        "E. GCS 13T"
      ],
      "answer": "B",
      "explanation": "* The Glasgow Coma Scale (GCS) combines scores from motor, verbal, and eye-opening sections.\n* Eye opening scores:\n- 4: Spontaneously\n- 3: To verbal command (patient opens eyes to voice)\n- 2: To pain\n- 1: No response\n* Motor response scores:\n- 6: Obeys command\n- 5: Localizes pain\n- 4: Flexion withdrawal (patient withdraws from painful stimuli)\n- 3: Flexion abnormal (decorticate)\n- 2: Extension (decerebrate)\n- 1: No response\n* Verbal response scores:\n- 5: Oriented and converses\n- 4: Disoriented and converses\n- 3: Inappropriate words; cries\n- 2: Incomprehensible sounds\n- 1: No response\n* If the patient is intubated, the maximum verbal score is 1T (T indicating intubated), and the maximum overall GCS score is 11T.\n* For this patient:\n- Eye opening: To voice commands = 3\n- Motor movement: Withdraw from painful stimuli = 4\n- Verbal: Intubated = T (maximum 4 from other categories, so 1T)\n* Total GCS = 3 (eye) + 4 (motor) + 1T (verbal) = 8T."
    },
    {
      "id": 7,
      "question_type": "mcq",
      "question": "An 88-year-old female is brought by ambulance to the ED after being struck by a vehicle while crossing the street. She is only responsive to painful stimuli and is promptly intubated for airway protection. Her secondary exam reveals only a small abrasion to the left forehead. Her systolic blood pressure suddenly increases to the 200s, and her left pupil becomes dilated and unresponsive to light. What is the next best course of action?",
      "options": [
        "A. Hypertension control with nicardipine continuous infusion",
        "B. Placement of intraparenchymal intracranial pressure monitor",
        "C. Immediate mannitol bolus",
        "D. Rectal lorazepam and initiation of levetiracetam",
        "E. Raise head of bed"
      ],
      "answer": "C",
      "explanation": "* Based on the history and physical exam (blown pupil, elevated BP), this likely represents a closed head injury with elevated intracranial pressure (ICP) and uncal herniation.\n* Uncal herniation is often fatal and causes permanent neurologic deficits if not treated promptly.\n* Systolic blood pressure greater than 180 mm Hg can aggravate vasogenic brain edema and intracranial hypertension. However, systemic hypertension may be a physiologic response to reduced cerebral perfusion, so early and aggressive treatment of hypertension should be avoided until ICP monitoring is established (Option A is incorrect).\n* While an ICP monitor is likely needed, a diagnosis must be made before invasive monitoring (Option B is incorrect). An external ventricular drain is generally a better choice as it allows therapeutic CSF drainage.\n* Immediate mannitol bolus is a quick bailout maneuver for situations like this, used as a bridge to more definitive therapies. It improves cerebral perfusion by decreasing blood viscosity and increasing cerebral blood flow and oxygen delivery. Its osmotic properties take 15 to 30 minutes to work.\n* Lorazepam and levetiracetam are for seizures, which is not consistent with her exam (Option D is incorrect).\n* Raising the head of bed can lower ICP, but with a blown pupil, more aggressive treatment is needed (Option E is incorrect)."
    },
    {
      "id": 8,
      "question_type": "mcq",
      "question": "A 17-year-old boy presents to the ED via ambulance after new onset seizure activity that started 30 minutes ago. He is unable to provide a good history because of word finding issues but is able to convey that his head hurts. His parents state that he was completely normal until about 4 weeks ago when he began to complain of left ear pain. Vital signs reveal a mild tachycardia and high fever. Physical exam shows absent light reflex in the left eye and papilledema. Which of the following is contraindicated in the workup and subsequent treatment of his condition?",
      "options": [
        "A. Lumbar puncture",
        "B. Computed tomography with intravenous contrast",
        "C. Stereotactic needle aspiration",
        "D. Surgical debridement",
        "E. Corticosteroids"
      ],
      "answer": "A",
      "explanation": "* The triad of headache, focal neurologic deficits, and fever suggests brain abscess, though this classic presentation is present in less than half of patients.\n* The most common presenting symptom is headache (present in ~70% of patients).\n* Brain abscesses primarily spread hematogenously from distant sites or directly from contiguous sites of infection (e.g., otitis media).\n* Initial diagnosis should be obtained by CT scan with contrast, which shows a rim-enhancing collection (Option B is indicated).\n* Lumbar puncture is generally not diagnostic and is contraindicated in the setting of elevated ICP, as changes in CSF volume can precipitate herniation.\n* All patients should start on broad-spectrum antibiotics.\n* Traditional management included surgical drainage and excision (Option D). However, serial needle aspiration is now the treatment of choice unless the abscess is traumatic, fungal, multiloculated, or not improving with aspiration (Option C).\n* Corticosteroids are controversial but may be considered when there is substantial mass effect (Option E)."
    },
    {
      "id": 9,
      "question_type": "mcq",
      "question": "Which of the following is true with regard to Cushing's triad?",
      "options": [
        "A. The pulse pressure narrows.",
        "B. The heart rate increases.",
        "C. It does not lead to changes on electrocardiogram.",
        "D. It is associated with hypocarbia.",
        "E. It is a late manifestation of increased intracranial pressure."
      ],
      "answer": "E",
      "explanation": "* Cushing's triad is a vasomotor and respiratory response to elevated ICP.\n* It includes bradycardia, irregular breathing, and elevation in systolic blood pressure with a widened pulse pressure (Option A is incorrect, pulse pressure widens).\n* Increased ICP leads to impaired respiration, which worsens hypercarbia (Option D is incorrect, it's associated with hypercarbia).\n* Cushing's triad is typically a late sign of elevated ICP and suggests imminent herniation.\n* In addition to bradycardia, Mayer waves (cyclic changes in arterial blood pressure due to baroreceptor and chemoreceptor reflex oscillations) can be seen on ECG (Option C is incorrect, it does lead to changes).\n* The heart rate decreases (bradycardia), not increases (Option B is incorrect)."
    },
    {
      "id": 10,
      "question_type": "mcq",
      "question": "Which of the following statements is true regarding spinal or cranial nerves?",
      "options": [
        "A. Cervical spinal nerve 1 carries motor but not sensory fibers.",
        "B. Cranial nerve IV is primarily sensory.",
        "C. Cervical spinal nerve 8 arises from above its corresponding vertebrae.",
        "D. Spinal nerves do not carry autonomic fibers.",
        "E. Thoracic spinal nerves arise from above their corresponding vertebrae."
      ],
      "answer": "A",
      "explanation": "* All spinal nerves carry a combination of motor, autonomic, and sensory nerves to and from the spinal cord, with the exception of C1.\n* C1 (cervical spinal nerve 1) carries solely motor fibers to the flexor muscles of the neck.\n* The trochlear nerve (cranial nerve IV) is entirely motor and innervates the superior oblique muscle of the eye (Option B is incorrect).\n* All cervical spinal nerves, except C8, arise from above their corresponding vertebrae (Option C is incorrect).\n* All thoracic nerves arise below their corresponding vertebrae (Option E is incorrect).\n* Spinal nerves *do* carry autonomic fibers (Option D is incorrect)."
    },
    {
      "id": 11,
      "question_type": "mcq",
      "question": "An 85-year-old female presents to the ED after falling and striking her chin on the kitchen counter. She is unable to lift her arms or hands off the bed and does not respond to painful stimuli. However, she is able to wiggle her toes and seems to feel pain at her feet. She has a history of cervical radiculopathy. Digital rectal exam reveals good sphincter tone and squeeze pressure. What is the most likely incomplete spinal cord injury that she has sustained?",
      "options": [
        "A. Posterior cord syndrome",
        "B. Anterior cord syndrome",
        "C. Cauda equina syndrome",
        "D. Brown-Séquard syndrome",
        "E. Central cord syndrome"
      ],
      "answer": "E",
      "explanation": "* Central cord syndrome is the most common type of incomplete spinal cord injury, primarily found in patients with hyperextension injury in the setting of previous cervical spine abnormalities.\n* Symptoms include muscle weakness of the upper extremities with relative sparing of the lower extremities; sensory function is variable.\n* Posterior cord syndrome (A) is rare, typically caused by posterior spinal artery infarction, presenting with sparing of muscles but loss of proprioception and vibration sensation below the lesion.\n* Anterior cord syndrome (B) is caused by anterior spinal artery infarction or vertebral fracture/dislocation, characterized by loss of motor function, pain, and temperature sensation but preservation of touch and proprioception.\n* Cauda equina syndrome (C) results from trauma, mass lesions, or lumbar spinal stenosis, causing variable symptoms including perineum paresthesia ('saddle anesthesia'), bilateral/unilateral paralysis, and bowel/bladder incontinence.\n* Brown-Séquard syndrome (D) is hemisection of the spinal cord, causing ipsilateral loss of motor, proprioception, and vibration sensation, with contralateral loss of pain and temperature sensation."
    },
    {
      "id": 12,
      "question_type": "mcq",
      "question": "Which of the following is true regarding central nervous system (CNS) tumors?",
      "options": [
        "A. Astrocytoma is the most common tumor of the CNS in adults.",
        "B. Focal neurologic deficits are more common with infratentorial versus supratentorial tumors.",
        "C. Most brain tumors in children are infratentorial in origin.",
        "D. Craniopharyngioma is a common brain tumor in children.",
        "E. The majority of spine tumors are malignant."
      ],
      "answer": "C",
      "explanation": "* Metastatic lesions are approximately 10 times more common than primary CNS tumors.\n* Astrocytoma is the most common primary CNS tumor in adults, while medulloblastoma is the most common in children (Option A is incorrect).\n* Supratentorial lesions tend to present with focal neurologic deficits, while infratentorial lesions frequently present with signs of increased ICP from fourth ventricle compression (Option B is incorrect).\n* Adults are more likely to present with supratentorial lesions, and children are more likely to present with infratentorial lesions.\n* Craniopharyngioma accounts for less than 5% of all brain tumors in children (Option D is incorrect).\n* Brain tumors are more commonly malignant than spinal tumors, and spinal tumors are more commonly benign (Option E is incorrect)."
    },
    {
      "id": 13,
      "question_type": "mcq",
      "question": "A 4-day-old female infant weighing 1400 g born at 28 weeks' gestation is being monitored in the neonatal critical care unit because of multiple episodes of respiratory distress and difficulty with feeding. Supplemental oxygen has been sufficient to maintain saturations. Over the last several hours, she has had waxing and waning alertness and decreased spontaneous eye movements. Which of the following is the most appropriate next step?",
      "options": [
        "A. Immediate administration of furosemide and acetazolamide",
        "B. Serial ultrasound screening",
        "C. Serial lumbar punctures",
        "D. Placement of temporary ventricular drainage device",
        "E. Intraventricular administration of tissue plasminogen activator (tPA)"
      ],
      "answer": "B",
      "explanation": "* Intraventricular hemorrhage (IVH) occurs in approximately 15% to 20% of infants born with a birth weight of less than 1500 g.\n* Serial ultrasound screening is recommended in all premature infants and any infants showing signs of IVH.\n* Predisposing factors for IVH in premature infants include maternal chorioamnionitis or preeclampsia, and neonatal respiratory distress, hypotension, or academia.\n* While 25% to 50% of infants can have clinically silent IVH, symptoms range from nonspecific changes in alertness to stupor or coma.\n* Management is largely supportive to prevent long-term complications like posthemorrhagic hydrocephalus (PHH).\n* Furosemide and acetazolamide have been used in older children with PHH but do not seem to alter the course in premature infants and could be deleterious (Option A is incorrect).\n* Serial lumbar puncture and intraventricular tPA have been tried with no significant change in deterioration or progression to permanent ventricular drainage procedures (Options C and E are incorrect).\n* Temporary ventricular drainage with transition to permanent drainage procedures if necessary is currently the treatment of choice for PHH with elevated intracranial pressures (Option D is a treatment, not the next diagnostic step)."
    },
    {
      "id": 14,
      "question_type": "mcq",
      "question": "Which of the following is true regarding ruptured intracranial aneurysms?",
      "options": [
        "A. Following repair, fluid restriction is recommended.",
        "B. Most arise from the posterior circulation.",
        "C. The initial study of choice is a contrast-enhanced CT head.",
        "D. Following repair, the risk of cerebral vasospasm causing stroke persists for 3 weeks.",
        "E. Outcomes overall are quite favorable."
      ],
      "answer": "D",
      "explanation": "* Intracranial aneurysms affect 4% of the population, but most are asymptomatic.\n* Risk factors include female gender, polycystic kidney disease, and Marfan syndrome.\n* The majority of aneurysms occur in the circle of Willis, with the anterior communicating artery being the most frequent site (Option B is incorrect).\n* When an aneurysm ruptures, it can result in intraparenchymal and subarachnoid hemorrhage, which is a catastrophic event with a mortality rate up to 50% (Option E is incorrect).\n* Noncontrast CT head is the study of choice to confirm the diagnosis (Option C is incorrect, contrast-enhanced CT is not the initial study).\n* Bleeding on brain parenchyma elicits a vasospasm response, which can result in stroke and persists for 21 days; thus, neurosurgeons often start calcium channel blockers.\n* Because cerebral autoregulation is compromised, patients should be given volume to maintain adequate cerebral perfusion pressure (Option A is incorrect, fluid restriction is not recommended)."
    },
    {
      "id": 15,
      "question_type": "mcq",
      "question": "A 35-year-old male is in the ICU after sustaining a closed head injury 5 days ago. Initial CT scan showed a 5-mm subdural hematoma, which increased in size to 9 mm on repeat CT scan 24 hours later. His neurologic status has not improved, and a subsequent MRI 48 hours after the initial injury is suggestive of diffuse axonal injury with no progression of the hematoma. Physical exam reveals unilateral left leg swelling and an ultrasound study confirms a deep vein thrombosis (DVT). What would have been the best way to prevent this complication for this patient?",
      "options": [
        "A. Prophylactic anticoagulation should have been started at 24 hours.",
        "B. Prophylactic anticoagulation should have been started at 72 hours.",
        "C. Routine lower extremity DVT ultrasound screening should have occurred at 72 hours.",
        "D. An inferior vena cava filter should have been placed.",
        "E. This is an unpreventable complication."
      ],
      "answer": "B",
      "explanation": "* Current guidelines from the Trauma Quality Improvement Project (TQIP) show reduced rates of venous thromboembolism (VTE) when chemical prophylaxis is started within 72 hours of initial head injury.\n* Guidelines are based on a modified bleeding risk assessment for intracranial hemorrhages:\n- High risk: ICP monitor placement, craniotomy, evidence of bleed progression at 72 hours.\n- Medium risk: Subdural/epidural hematoma > 8 mm, contusion or intraventricular hematoma > 2 cm, multiple contusions per lobe, subarachnoid hemorrhage with abnormal CT angiogram, and progression at 24 hours.\n- Low risk: No characteristics of high or medium risk.\n* Anticoagulation is recommended for patients with stable CT scans at 24 hours in the low-risk group and 72 hours in the medium-risk group.\n* This patient represents a medium-risk patient with progression of the head bleed, so VTE prophylaxis should have been started at 72 hours (Option A is incorrect).\n* The high-risk group is complex; physician choice among IVC filter, DVT screening, and prophylactic anticoagulation is left to the physician (Option D is a treatment, not prevention, and not universally indicated).\n* The DEEP I study showed no evidence of significant progression of intracranial hemorrhage when enoxaparin was started at 24 hours in low-risk groups.\n* Another study showed decreased VTE rates and no increased bleeding when anticoagulation was started within 72 hours after injury.\n* There is currently not enough evidence to recommend routine DVT screening (Option C is incorrect).\n* This complication is largely preventable with appropriate prophylaxis (Option E is incorrect)."
    }
  ]
}