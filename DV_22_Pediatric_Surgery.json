{
  "chapter_name": "Pediatric Surgery",
  "questions": [
    {
      "id": 1,
      "question_type": "mcq",
      "question": "A 4-year-old boy presents with a midline anterior neck cystic mass that moves up and down when he sticks his tongue out. The most appropriate management is:",
      "options": [
        "A. Observation",
        "B. Incision and drainage",
        "C. Hemithyroidectomy",
        "D. Fine-needle aspiration",
        "E. Surgical resection with removal of part of the hyoid bone"
      ],
      "answer": "E",
      "explanation": "* The patient has a thyroglossal duct cyst, one of the most common midline neck lesions.\n* Elective surgical resection (Sistrunk procedure) is performed to avoid complications of infection and the small risk of cancer.\n* The Sistrunk procedure involves complete excision of the cyst in continuity with its tract, the central portion of the hyoid bone, and the tissue above the hyoid bone extending to the base of the tongue.\n* Observation (A) and fine-needle aspiration (D) are not helpful for diagnosis of this benign congenital process.\n* Incision and drainage (B) may be required if the cyst presents as an infection but is not the primary management.\n* A solid mass might suggest ectopic thyroid, which would require a thyroid scan (C), but this is a cystic mass."
    },
    {
      "id": 2,
      "question_type": "mcq",
      "question": "Which of the following is true regarding Bochdalek type of congenital diaphragmatic hernia (CDH)?",
      "options": [
        "A. Urgent surgical repair is indicated upon diagnosis.",
        "B. Associated pulmonary hypoplasia leads to hypocarbia.",
        "C. Most defects are on the right.",
        "D. Pulmonary hypertension is a prominent feature.",
        "E. The diaphragmatic defect is anteromedial."
      ],
      "answer": "D",
      "explanation": "* Approximately 90% of CDHs occur on the left side (C is false).\n* CDH results from failure of normal closure of the pleuroperitoneal canal, leading to abdominal contents herniating into the chest and compressing both lungs.\n* Pulmonary hypoplasia leads to hypercarbia, not hypocarbia (B is false).\n* Pulmonary hypertension is a prominent feature, which can lead to significant hypoxia.\n* Urgent surgical intervention is not indicated; the infant's condition should be medically optimized first, as surgical repair may temporarily worsen pulmonary compliance and hypertension (A is false).\n* Bochdalek hernias are in the posterolateral location (E is false), while Morgagni hernias are anteromedial."
    },
    {
      "id": 3,
      "question_type": "mcq",
      "question": "A female newborn is in respiratory distress. A chest radiograph demonstrates a hyperlucent left upper lobe with adjacent lobar compression and mediastinal shift to the right. The treatment of choice for this patient is:",
      "options": [
        "A. Left upper lobectomy",
        "B. Left tube thoracostomy",
        "C. Left pneumonectomy",
        "D. Positive pressure ventilation until condition resolves",
        "E. Bronchoscopy"
      ],
      "answer": "A",
      "explanation": "* The patient's presentation is consistent with congenital lobar emphysema (CLE).\n* CLE is due to excessive hyperexpansion of a lung lobe, most commonly in the upper lobes.\n* Diagnosis is made by chest radiograph showing a hyperlucent affected lobe, adjacent lobar compression, atelectasis, and mediastinal shift.\n* Bronchoscopy (E) is contraindicated as it will exacerbate the overinflation.\n* Chest radiograph can be confused with a pneumothorax; inadvertent placement of a chest tube (B) in the distended lung will worsen the situation.\n* Treatment involves urgent thoracotomy and resection of the affected lobe (lobectomy) in severe cases.\n* Pneumonectomy (C) is not necessary for involvement of a single lobe.\n* Nonsurgical therapy (D) is acceptable only in asymptomatic or mild symptomatic cases."
    },
    {
      "id": 4,
      "question_type": "mcq",
      "question": "A full-term baby is born with drooling, coughing, and cyanosis after the first feeding, but these resolve quickly and spontaneously. The next step in management should be:",
      "options": [
        "A. Immediate intubation",
        "B. Placement of orogastric tube",
        "C. Two-view abdominal x-ray",
        "D. Two-view chest x-ray",
        "E. Upper gastrointestinal (UGI) contrast series"
      ],
      "answer": "B",
      "explanation": "* The symptoms suggest esophageal atresia (EA) and tracheoesophageal fistula (TEF).\n* The most appropriate next step is to attempt to place an orogastric tube.\n* In patients with proximal EA and distal TEF, the tube will not pass into the stomach but will curl in the upper esophageal pouch.\n* A two-view chest x-ray (D) should follow to confirm the diagnosis.\n* An esophagram or UGI series (E) is not needed and increases the risk for aspiration.\n* An abdominal x-ray (C) is obtained after attempted placement of the orogastric tube to determine the presence of a TEF by showing gas in the intestines.\n* Intubation and positive pressure ventilation (A) should be avoided because this increases the risk of ventilating through the TEF, resulting in respiratory failure."
    },
    {
      "id": 5,
      "question_type": "mcq",
      "question": "A 4-week-old infant presents to the emergency department (ED) with increasingly projectile vomiting that is nonbilious and a palpable small right upper quadrant mass. The most appropriate resuscitation for this patient is",
      "options": [
        "A. 5% dextrose in water (D5W) 0.5 normal saline (NS) + 20 potassium chloride (KCL) at 2 times maintenance",
        "B. 20 mL/kg NS bolus",
        "C. 10 mL/kg lactated Ringer's (LR) bolus",
        "D. D5W 0.25 NS + 10 KCL at 1.5 times maintenance",
        "E. 10 mL/kg 5% albumin at maintenance"
      ],
      "answer": "B",
      "explanation": "* The patient has pyloric stenosis and is likely dehydrated due to persistent emesis.\n* The first step in management is fluid resuscitation.\n* The correct volume for any crystalloid fluid bolus in infants is 20 mL/kg.\n* Normal saline (NS) is the most appropriate fluid for resuscitation in almost all pediatric patients.\n* Maintenance IV fluids (A, D) are administered after a bolus.\n* Blood products or albumin (C, E) are administered at 10 mL/kg.\n* Pyloromyotomy is delayed until laboratory parameters have normalized."
    },
    {
      "id": 6,
      "question_type": "mcq",
      "question": "A patient is diagnosed with pyloric stenosis after 3 days of nonbilious emesis. This patient's electrolyte and acid/base balance will result in:",
      "options": [
        "A. Respiratory alkalosis",
        "B. Hyperkalemia",
        "C. Aciduria",
        "D. Hyperchloremia",
        "E. Hyponatremia"
      ],
      "answer": "C",
      "explanation": "* Protracted vomiting in pyloric stenosis leads to a hypochloremic hypokalemic metabolic alkalosis (A, B, D are false).\n* Initially, the urine pH level is high due to alkalosis.\n* As vomiting continues and serum potassium levels drop, the renal tubule switches to reabsorbing sodium in exchange for hydrogen ions in the urine.\n* This results in paradoxic aciduria (C is true), where the urine becomes acidic despite systemic alkalosis.\n* Hyponatremia (E) is not the classic electrolyte disturbance."
    },
    {
      "id": 7,
      "question_type": "mcq",
      "question": "A 900-g, premature infant develops formula intolerance with vomiting, abdominal distention, and bloody stools. Labs show an elevated white blood cell (WBC) count and platelets of 100,000. Abdominal x-rays show dilated loops of bowel with pneumatosis intestinalis. The most appropriate treatment should be:",
      "options": [
        "A. Blood and platelet transfusions",
        "B. Antibiotics and bowel rest/decompression",
        "C. Ultrasound and paracentesis",
        "D. Placement of a bedside peritoneal drain",
        "E. Exploratory laparotomy"
      ],
      "answer": "B",
      "explanation": "* The patient's presentation (premature infant, formula intolerance, vomiting, abdominal distention, bloody stools, elevated WBC, pneumatosis intestinalis) is consistent with definite necrotizing enterocolitis (NEC), Bell stage II.\n* Initial management for NEC involves discontinuing feedings (bowel rest), placing an orogastric tube for decompression, and administering broad-spectrum parenteral antibiotics.\n* Blood transfusions (A) are based on the patient's clinical status and hemoglobin/hematocrit, not solely platelet count.\n* Options C, D, and E (ultrasound, paracentesis, peritoneal drain, exploratory laparotomy) are reserved for Bell stage III (advanced NEC) where there is definite intestinal perforation or failure of nonoperative therapy."
    },
    {
      "id": 8,
      "question_type": "mcq",
      "question": "A healthy 2-week-old girl develops bilious emesis. On exam, her abdomen is nontender and nondistended. What is the most appropriate study to make the diagnosis?",
      "options": [
        "A. 2-view abdominal x-ray",
        "B. Ultrasound",
        "C. UGI series",
        "D. Contrast enema",
        "E. Computed tomography (CT) scan of abdomen/pelvis"
      ],
      "answer": "C",
      "explanation": "* Bilious vomiting in an infant suggests malrotation with midgut volvulus.\n* The gold standard for diagnosis is an upper gastrointestinal (UGI) series.\n* Plain radiographs (A) are likely to be normal or non-diagnostic.\n* Some authors recommend ultrasonography (B) to look for a sonographic clockwise whirlpool pattern, but UGI is the gold standard.\n* Contrast enemas (D) were historically used but are less accurate than UGI series.\n* CT scan of the abdomen/pelvis (E) may suggest malrotation in older children or adults with vague symptoms."
    },
    {
      "id": 9,
      "question_type": "mcq",
      "question": "Operative management for a patient with malrotation and midgut volvulus typically includes reduction of the volvulus, division of Ladd bands, and which of the following?",
      "options": [
        "A. Placement of the small intestine in the left lower quadrant",
        "B. Cecopexy and gastropexy",
        "C. Appendectomy",
        "D. Placement of the cecum in the right upper quadrant",
        "E. Reconstruction of the ligament of Treitz"
      ],
      "answer": "C",
      "explanation": "* The Ladd procedure for malrotation aims to broaden the narrow base of the mesentery to prevent recurrent volvulus.\n* It involves reducing the volvulus, sharply dividing Ladd bands (between cecum/abdominal wall and duodenum/terminal ileum).\n* This brings the duodenum into the right lower quadrant and the cecum into the left lower quadrant, creating a complete nonrotation (A is true, D is false).\n* The appendix is typically removed to avoid diagnostic errors later in life, though it is not absolutely required (C is true).\n* Fixing the bowel to the abdominal wall (B) is avoided as it increases the risk of a twist at these sites.\n* Reconstruction of the ligament of Treitz (E) is not part of the procedure."
    },
    {
      "id": 10,
      "question_type": "mcq",
      "question": "An 11-month-old boy presents to the ED with crampy abdominal pain and vomiting for 24 hours. His exam and abdominal x-rays are normal. His complete blood count (CBC) is normal, and the electrolyte panel reflects slight dehydration. The most appropriate step in his management is:",
      "options": [
        "A. Intravenous (IV) fluid bolus and discharge from the ED",
        "B. Abdominal ultrasound",
        "C. Contrast enema",
        "D. UGI contrast series",
        "E. IV antibiotics and admission"
      ],
      "answer": "B",
      "explanation": "* Crampy abdominal pain and vomiting in a young child are classic symptoms of intussusception.\n* In the absence of peritonitis, the child should first undergo ultrasound evaluation to make the diagnosis; the classic finding is a target sign.\n* Once diagnosed, radiographic reduction by contrast or air enema (C) should be performed.\n* An UGI contrast series (D) is the preferred diagnostic modality for midgut volvulus.\n* Patients should be given IV fluids but not discharged from the ED without a diagnostic workup (A).\n* IV antibiotics (E) should not be started without a diagnostic workup."
    },
    {
      "id": 11,
      "question_type": "mcq",
      "question": "A 2-week-old boy presents with constipation and abdominal bloating. He failed to pass meconium on the first 2 days of life. Contrast enema demonstrates a slightly dilated sigmoid colon with a constricted rectum. What is the next most appropriate step in management?",
      "options": [
        "A. Rectal irrigations and IV antibiotics",
        "B. Creation of a leveling ostomy",
        "C. Suction rectal biopsy",
        "D. Change to an elemental formula",
        "E. Obtain an UGI contrast series with small bowel follow-through"
      ],
      "answer": "C",
      "explanation": "* The patient's presentation (constipation, abdominal bloating, delayed meconium passage) and contrast enema findings (dilated sigmoid, constricted rectum) are highly suggestive of Hirschsprung disease (aganglionosis).\n* The definitive diagnosis of Hirschsprung disease is made by suction rectal biopsy, at least 2 cm above the dentate line.\n* Rectal irrigations and IV antibiotics (A) are for initial management of Hirschsprung-associated enterocolitis, not for diagnosis.\n* Creation of a leveling ostomy (B) may be performed as part of a staged surgical procedure, but only after diagnosis.\n* Changing to an elemental formula (D) is not a diagnostic step.\n* A small bowel follow-through (E) is not helpful because the obstruction is in the colon."
    },
    {
      "id": 12,
      "question_type": "mcq",
      "question": "A full-term, healthy newborn boy is noted to have imperforate anus. After 24 hours, no meconium is visualized in the perineal area. The most appropriate management should be:",
      "options": [
        "A. Observation for another 24 hours",
        "B. Diverting ileostomy",
        "C. Sigmoid colostomy",
        "D. Primary repair through the perineum",
        "E. Laparoscopic primary repair"
      ],
      "answer": "C",
      "explanation": "* Imperforate anus with no visible meconium after 24 hours suggests a high imperforate anus malformation.\n* Patients with a high lesion should undergo a primary sigmoid colostomy, followed by a definitive pull-through at 3 to 6 months of life.\n* Waiting an additional 24 hours (A) may lead to worsening abdominal distention and respiratory compromise.\n* A diverting ileostomy (B) is not the standard procedure for imperforate anus.\n* Low lesions can be repaired by a perineal procedure at birth (D).\n* Laparoscopic primary repair (E) is an approach for high lesions, but colostomy is typically the initial step."
    },
    {
      "id": 13,
      "question_type": "mcq",
      "question": "A 10-month-old boy is being worked up for an abdominal neuroblastoma. In counseling, the parents should be informed of which of the following statements?",
      "options": [
        "A. The mass most likely originates from the kidney.",
        "B. The prognosis is associated with size of the tumor.",
        "C. The prognosis is associated with patient age.",
        "D. No treatment is needed because of the excellent prognosis.",
        "E. The prognosis is associated with urinary vanillylmandelic acid levels."
      ],
      "answer": "C",
      "explanation": "* Neuroblastoma is an embryonal tumor of neural crest origin, most commonly found in the adrenal medulla (A is false).\n* Patient age and tumor biology are the key factors predicting prognosis. Children < 1 year of age have the best prognosis (C is true). Tumor size (B) does not specifically correlate with prognosis.\n* Measurement of vanillylmandelic acid and homovanillic acid levels assist in diagnosis but do not correlate with prognosis (E is false).\n* The majority of patients have advanced disease at presentation, and the overall survival rate is less than 30% (D is false)."
    },
    {
      "id": 14,
      "question_type": "mcq",
      "question": "A 36-week, 2.7-kg newborn is born with a 12-cm sacral mass. Workup demonstrates no internal involvement of the presacral area. The most appropriate management is:",
      "options": [
        "A. Observe because regression of the mass is likely",
        "B. Embolization of the mass and resection at 1 year of age",
        "C. Diverting ileostomy and resection of the mass at 1 year of age",
        "D. Chemo/radiation therapy, then resection",
        "E. Resection of the mass including the coccyx"
      ],
      "answer": "E",
      "explanation": "* The patient presents with a sacrococcygeal teratoma (SCT), the most common teratoma in neonates.\n* Most SCTs are benign at birth, but they can undergo malignant degeneration, so observation (A) is not appropriate.\n* Complete resection of the tumor as early as possible is essential, and the coccyx is also removed to minimize the chance of recurrence (E is true).\n* Chemo/radiation therapy (D) has no role for benign SCTs.\n* Embolization (B) and diverting ileostomy (C) are not standard management for SCT without internal involvement or complications."
    },
    {
      "id": 15,
      "question_type": "mcq",
      "question": "A newborn is in severe respiratory distress and has a markedly scaphoid abdomen. Which of the following is true regarding this condition?",
      "options": [
        "A. A chest tube should be promptly placed.",
        "B. The patient should be ventilated with bag-mask ventilation.",
        "C. Overall survival is about 50%.",
        "D. Ventilation with high-frequency oscillation is contraindicated.",
        "E. Urgent thoracotomy is required."
      ],
      "answer": "C",
      "explanation": "* Severe respiratory distress and a markedly scaphoid abdomen in a newborn are classic signs of congenital diaphragmatic hernia (CDH).\n* Overall survival for CDH is about 50% (C is true).\n* Chest tubes (A) are not indicated as they may injure the underlying lung and worsen the prognosis.\n* Bag-mask ventilation (B) will distend the stomach and GI tract, leading to further lung compression and worsening the patient's condition.\n* Ventilation with high-frequency oscillation (D) is effective for CDH, as is the use of inhaled nitric oxide.\n* Urgent thoracotomy (E) is not immediately required; the patient needs stabilization first, and surgical repair is typically delayed until the infant's pulmonary vascular resistance drops."
    },
    {
      "id": 16,
      "question_type": "mcq",
      "question": "An 8-year-old boy is involved in a bike crash. He is hemodynamically stable. On examination, he has ecchymosis on the left upper quadrant. A focused assessment with sonography for trauma (FAST) scan demonstrates free fluid in the pelvis. The next most appropriate step in management is:",
      "options": [
        "A. CT scan of abdomen and pelvis",
        "B. Admission to the intensive care unit (ICU) with serial CBC and exams",
        "C. Two-view abdominal x-rays",
        "D. Diagnostic laparoscopy",
        "E. Transfusion of 10 mL/kg of packed RBCs"
      ],
      "answer": "A",
      "explanation": "* A hemodynamically stable patient with signs of solid organ injury (ecchymosis, free fluid on FAST) requires a CT scan of the abdomen and pelvis with IV contrast to evaluate for the extent of the injury.\n* If a splenic injury is detected, nonoperative management should be instituted.\n* Admission to the ICU (B) and transfusion (E) may be required depending on the grade of the injury and the patient's clinical status, but CT is the diagnostic step.\n* Abdominal x-rays (C) are not of much utility for detecting blood or solid organ injury.\n* Diagnostic laparoscopy (D) may be indicated if the patient fails nonoperative management."
    },
    {
      "id": 17,
      "question_type": "mcq",
      "question": "A 1-day-old, full-term infant presents with bilious emesis. Abdominal x-rays show multiple loops of dilated bowel. A contrast enema shows a microcolon. What is the pathophysiology behind this obstruction?",
      "options": [
        "A. It is due to a fetal mesenteric vascular accident",
        "B. Failure of recanalization of the bowel",
        "C. Lack of proper rotation of the bowel",
        "D. Lack of ganglion cells in the bowel",
        "E. A duplication of a segment of bowel"
      ],
      "answer": "A",
      "explanation": "* Bilious emesis, dilated bowel loops, and a microcolon in a newborn indicate intestinal atresia (jejunal or ileal).\n* Intestinal atresias are caused by in utero mesenteric vascular accidents leading to segmental loss of the intestinal lumen.\n* Failure of recanalization of the bowel (B) is associated with esophageal and duodenal atresias.\n* Lack of proper rotation of the bowel (C) causes malrotation.\n* Lack of ganglion cells in the bowel (D) is seen with Hirschsprung disease.\n* A duplication of a segment of bowel (E) would lead to duplication cysts."
    },
    {
      "id": 18,
      "question_type": "mcq",
      "question": "A newborn baby is born with an abdominal wall defect. The defect involves the umbilicus and has a membrane associated with it. Which of the following is true regarding this type of defect?",
      "options": [
        "A. This patient requires immediate surgical closure.",
        "B. Mortality is most often the result of persistent sepsis.",
        "C. It is thought to occur due to an umbilical vein vascular accident.",
        "D. The defect is usually associated with intestinal atresia.",
        "E. These patients commonly have associated cardiac and genetic abnormalities."
      ],
      "answer": "E",
      "explanation": "* The description (defect involving the umbilicus, membrane-covered) is consistent with omphalocele.\n* Omphalocele is less of a surgical emergency than gastroschisis because the bowel is protected by the covering (A is false).\n* Omphalocele is associated with many other congenital abnormalities, most commonly cardiac and musculoskeletal (E is true).\n* Mortality for omphalocele is largely based on the underlying comorbidities, not typically sepsis (B is false).\n* Omphalocele is caused by lack of complete development of the abdominal wall muscles, not an umbilical vein vascular accident (C is false, this is associated with gastroschisis).\n* Intestinal atresia (D) is more commonly associated with gastroschisis (10-15%)."
    },
    {
      "id": 19,
      "question_type": "mcq",
      "question": "A 2-month-old infant has persistent jaundice. Ultrasonography fails to demonstrate a gallbladder. Technetium-99m iminodiacetic acid scanning with phenobarbital pretreatment reveals uptake in the liver but not in the intestine. a₁-Antitrypsin and cystic fibrosis determination is normal. The most appropriate surgical management would be:",
      "options": [
        "A. Kasai operation (hepatoportoenterostomy)",
        "B. Liver transplantation",
        "C. Percutaneous transhepatic liver drainage",
        "D. Endoscopic biliary stent placement",
        "E. Choledochojejunostomy"
      ],
      "answer": "A",
      "explanation": "* Persistent jaundice, absent gallbladder on ultrasound, and no radionuclide excretion into the intestine despite liver uptake (after phenobarbital pretreatment) strongly suggest biliary atresia. Normal metabolic screen rules out other causes.\n* The most effective initial surgical treatment for biliary atresia is the Kasai operation (hepatoportoenterostomy).\n* Liver transplantation (B) is for patients who fail the Kasai operation.\n* Percutaneous transhepatic liver drainage (C), endoscopic biliary stent placement (D), and choledochojejunostomy (E) are not possible due to the absence of an extrahepatic biliary tree in this disease."
    },
    {
      "id": 20,
      "question_type": "mcq",
      "question": "The most common indication for extracorporeal membranous oxygenation (ECMO) in neonates is:",
      "options": [
        "A. Congenital diaphragmatic hernia",
        "B. Respiratory distress syndrome",
        "C. Meconium aspiration",
        "D. Persistent pulmonary hypertension",
        "E. Congenital cardiac abnormalities"
      ],
      "answer": "C",
      "explanation": "* The major indications for ECMO in neonates include meconium aspiration, respiratory distress syndrome, persistent pulmonary hypertension, and congenital diaphragmatic hernia.\n* Meconium aspiration is the most common indication for neonatal ECMO.\n* ECMO has also been used to temporize infants with decompensation due to a congenital cardiac abnormality."
    },
    {
      "id": 21,
      "question_type": "mcq",
      "question": "A full-term, boy is noted to have facial features of trisomy 21 and bilious emesis. The rest of his exam is normal. Abdominal x-rays show a double-bubble sign with no distal gas. Which of the following is the best next step in management?",
      "options": [
        "A. Serial abdominal x-rays",
        "B. UGI contrast study",
        "C. Contrast enema",
        "D. Operative exploration",
        "E. Echocardiogram"
      ],
      "answer": "E",
      "explanation": "* Trisomy 21, bilious emesis, and a 'double-bubble sign' with no distal gas indicate duodenal atresia.\n* Duodenal atresia is associated with cardiac malformations.\n* An echocardiogram is needed before surgical intervention to assess for associated cardiac anomalies.\n* No further studies like serial x-rays (A), UGI (B), or contrast enema (C) are necessary if complete atresia is confirmed by the double-bubble sign and absence of distal gas.\n* Operative exploration (D) is the definitive treatment but is performed after cardiac evaluation."
    },
    {
      "id": 22,
      "question_type": "mcq",
      "question": "A 2-year-old child presents with an abdominal mass, “raccoon eyes,” and “blueberry muffin\" skin lesions. This most likely represents:",
      "options": [
        "A. Rhabdomyosarcoma",
        "B. Neuroblastoma",
        "C. Wilms tumor",
        "D. Hepatoblastoma",
        "E. Teratoma"
      ],
      "answer": "B",
      "explanation": "* “Raccoon eyes” (periorbital metastases) and “blueberry muffin” skin lesions (liver metastases) are classic signs of neuroblastoma.\n* Neuroblastoma is the most common solid abdominal malignancy in children < 2 years of age, often presenting as an abdominal mass.\n* Wilms tumor (C) is the most common renal tumor after 2 years of age.\n* Rhabdomyosarcoma (A) is a soft-tissue tumor.\n* Hepatoblastoma (D) is the most common liver malignancy in children.\n* Sacrococcygeal teratoma (E) presents as a large sacral mass in newborns."
    },
    {
      "id": 23,
      "question_type": "mcq",
      "question": "The most common anomaly associated with gastroschisis is:",
      "options": [
        "A. Cardiac",
        "B. Renal",
        "C. Limb",
        "D. Malrotation",
        "E. Down's syndrome"
      ],
      "answer": "D",
      "explanation": "* Gastroschisis is an abdominal wall defect to the right of the umbilicus, with bowel herniating through without a peritoneal covering.\n* Unlike omphalocele, gastroschisis is not typically associated with systemic or chromosomal abnormalities (A, B, C, E are false).\n* All patients with gastroschisis will have intestinal malrotation (D is true).\n* Intestinal atresia is also seen in 10-15% of patients with gastroschisis."
    },
    {
      "id": 24,
      "question_type": "mcq",
      "question": "A 3-year-old girl presents to the ED with crampy abdominal pain for 24 hours. The pain is increasing in frequency and duration. Ultrasound demonstrates a target sign. The most common pathologic lead point is:",
      "options": [
        "A. Appendix",
        "B. Small bowel polyp",
        "C. Ectopic pancreatic tissue",
        "D. Meckel diverticulum",
        "E. Intraluminal hematoma"
      ],
      "answer": "D",
      "explanation": "* Crampy abdominal pain, increasing frequency and duration, and a target sign on ultrasound indicate intussusception.\n* In older children (beyond infancy), intussusception is more likely due to an underlying pathologic lead point.\n* The most common pathologic lead point for intussusception in children is a Meckel diverticulum.\n* Other causes include polyps (B), appendicitis (A), intestinal lymphoma, submucosal hemorrhage (E), foreign body, ectopic pancreatic (C) or gastric tissue, and intestinal duplication."
    },
    {
      "id": 25,
      "question_type": "mcq",
      "question": "A newborn baby is born with a distended abdomen and bilious emesis. Both parents are carriers for cystic fibrosis. On examination, the patient has a distended but soft abdomen. Abdominal x-rays show dilated loops of bowel with a ground glass appearance. The most appropriate initial management is:",
      "options": [
        "A. Water-soluble contrast enemas",
        "B. Resection of terminal ileum with stoma",
        "C. Resection of terminal ileum with primary anastomosis",
        "D. UGI with small bowel follow-through",
        "E. Small bowel enterotomy with evacuation of meconium"
      ],
      "answer": "A",
      "explanation": "* The patient's presentation (newborn, distended abdomen, bilious emesis, cystic fibrosis carrier parents, 'ground-glass' appearance on x-ray) strongly suggests meconium ileus.\n* Initial management for uncomplicated meconium ileus is nonoperative: administering water-soluble contrast enemas (e.g., dilute gastrograffin) per rectum to soften the meconium.\n* Surgery (B, C, E) is required if nonoperative management fails or if the patient has evidence of perforation.\n* UGI with small bowel follow-through (D) is not indicated or used in the initial management of meconium ileus."
    },
    {
      "id": 26,
      "question_type": "mcq",
      "question": "A 6-month-old boy presents to the ED crying in pain and has bilious emesis. On exam, he has a distended abdomen, and there is a tender mass in the right groin. Appropriate management should be:",
      "options": [
        "A. Ultrasound of right groin",
        "B. Bedside incision and drainage (I&D) of right groin",
        "C. IV antibiotics",
        "D. Attempt reduction",
        "E. Operative exploration"
      ],
      "answer": "D",
      "explanation": "* The patient presents with an incarcerated right inguinal hernia (RIH) with signs of small bowel obstruction (bilious emesis, distended abdomen, tender groin mass).\n* The most appropriate initial management is to attempt reduction of the incarcerated RIH.\n* If reduction is successful, the patient should be admitted for observation and repair in 24 to 48 hours to allow edema to resolve.\n* Ultrasound (A) may be useful if testicular torsion is suspected, but the diagnosis is clinical.\n* Incision and drainage (B) and IV antibiotics (C) are treatments for abscesses, not incarcerated hernias.\n* Operative exploration (E) is performed if the incarcerated hernia cannot be reduced or if there is heightened suspicion for ischemic bowel."
    },
    {
      "id": 27,
      "question_type": "mcq",
      "question": "A 4-year-old girl presents with recurrent jaundice. Ultrasound shows a 5-cm fusiform dilation of the common bile duct. During surgery, this posterior aspect of the cystic mass is firmly adherent to the portal vein. The most appropriate management is:",
      "options": [
        "A. Abort surgery, IV antibiotics, and reoperate in 3 months",
        "B. Place a drain into the cyst, IV antibiotics, and reoperate in 3 months",
        "C. Resect the anterior cyst, mucosectomy of the posterior cyst with reconstruction",
        "D. Internal drainage of the cyst with a Roux-en-Y cystojejunostomy",
        "E. Resect the cyst and portal vein with reconstruction of the portal vein and common bile duct (CBD)"
      ],
      "answer": "C",
      "explanation": "* The patient has recurrent jaundice and a 5-cm fusiform dilation of the common bile duct, consistent with a Type I choledochal cyst.\n* The treatment is resection of the cyst and reconstruction with a Roux-en-Y choledochojejunostomy or a simple choledochoduodenostomy.\n* If the cyst is firmly adherent to the portal vein, the anterior portion of the cyst should be excised along with mucosectomy of the posterior cyst to prevent future malignant degeneration.\n* Aborting surgery (A) or placing a drain (B) are not definitive treatments.\n* Internal drainage (D) alone will still predispose the patient to the risk of malignant degeneration.\n* Resecting the portal vein (E) is not indicated during this operation."
    },
    {
      "id": 28,
      "question_type": "mcq",
      "question": "A 3-week-old, ex-25 week premature boy is diagnosed with a left inguinal hernia while in the neonatal ICU (NICU). His current weight is 1 kg, and he requires supplemental oxygen. The hernia is easily reducible. The next appropriate step in management is:",
      "options": [
        "A. Ultrasound evaluation",
        "B. Immediate open operative repair",
        "C. Immediate laparoscopic repair",
        "D. Observation and consider repair at the time of discharge",
        "E. Delay repair until 1 year of age"
      ],
      "answer": "D",
      "explanation": "* The patient has an easily reducible inguinal hernia.\n* The timing of herniorrhaphy in premature infants is debatable and based on the clinical scenario.\n* If the hernia is easily reducible, many surgeons will repair the hernia at the time of discharge to eliminate the risk of re-presenting to the ED with an incarcerated inguinal hernia.\n* Waiting until the postconceptional age is around 55 weeks (or 1 year of age (E)) lowers anesthetic risk and makes the operation less challenging, but increases the risk of incarceration.\n* Immediate repair (B, C) is not required for an easily reducible hernia.\n* Ultrasound evaluation (A) is not needed for the diagnosis of an inguinal hernia."
    },
    {
      "id": 29,
      "question_type": "mcq",
      "question": "A 30-kg child has an estimated hourly fluid requirement of:",
      "options": [
        "A. 40 mL/hr",
        "B. 50 mL/hr",
        "C. 60 mL/hr",
        "D. 70 mL/hr",
        "E. 80 mL/hr"
      ],
      "answer": "D",
      "explanation": "* Daily maintenance fluids for children can be estimated using the 4-2-1 rule:\n- First 10 kg: 4 mL/kg/hr = 10 kg * 4 mL/kg/hr = 40 mL/hr\n- Second 10 kg: 2 mL/kg/hr = 10 kg * 2 mL/kg/hr = 20 mL/hr\n- Any additional kilograms: 1 mL/kg/hr = (30 - 20) kg * 1 mL/kg/hr = 10 mL/hr\n* Total hourly requirement = 40 mL/hr + 20 mL/hr + 10 mL/hr = 70 mL/hr."
    },
    {
      "id": 30,
      "question_type": "mcq",
      "question": "The pathogenesis of necrotizing enterocolitis (NEC) is thought to be related to:",
      "options": [
        "A. A genetic predisposition",
        "B. An enzyme deficiency",
        "C. A period of intestinal hypoperfusion",
        "D. Preexisting intestinal atresia",
        "E. An antibiotic reaction"
      ],
      "answer": "C",
      "explanation": "* The pathogenesis of necrotizing enterocolitis (NEC) is thought to be related to intestinal hypoperfusion, which occurs most frequently in the setting of perinatal stress.\n* This period of hypoperfusion is followed by reperfusion, and the combination of ischemia and reperfusion leads to mucosal injury.\n* The damaged intestinal mucosa barrier becomes susceptible to bacterial translocation, initiating an inflammatory cascade.\n* Genetic predisposition (A), an enzyme deficiency (B), preexisting intestinal atresia (D), and an antibiotic reaction (E) are not the primary thought mechanisms for NEC pathogenesis."
    },
    {
      "id": 31,
      "question_type": "mcq",
      "question": "The intestines appear viable after operative reduction of a midgut volvulus. The key to prevent a recurrent volvulus is to:",
      "options": [
        "A. Place the intestines back in the normally rotated position",
        "B. Fix the bowel to the abdominal wall/retroperitoneum",
        "C. Divide the bands over the duodenum",
        "D. Broaden the base of the mesentery to the intestine",
        "E. Perform ileostomy and mucus fistula"
      ],
      "answer": "D",
      "explanation": "* The key to preventing a recurrent midgut volvulus in a patient with malrotation is to broaden the base of the mesentery.\n* To achieve a broad base, the duodenum needs to be mobilized and directed to the right lower quadrant, and the right colon mobilized and placed on the left, creating an anatomically nonrotated position (A is incorrect as it's a non-rotated position, not normally rotated).\n* Dividing the Ladd bands (C) will relieve any constriction of the duodenum, but by itself, this maneuver will not decrease the risk of a recurrent volvulus.\n* Fixation of the bowel to the abdominal wall or retroperitoneum (B) will increase the risk of a segmental volvulus around the fixation points and should be avoided.\n* An ileostomy and mucus fistula (E) are not indicated when the bowel is viable."
    },
    {
      "id": 32,
      "question_type": "mcq",
      "question": "A 3-year-old girl presents with recurrent maroon-colored stools. Her physical exam is normal. Technetium-99m scintigraphy shows enhancement and a blush above and separate from the bladder. The most appropriate management is:",
      "options": [
        "A. Start the patient on proton-pump inhibitors",
        "B. Embolization with interventional radiology",
        "C. Endoscopic embolization of the bleeding site",
        "D. Laparoscopic diverticulectomy",
        "E. Segmental ileal resection"
      ],
      "answer": "E",
      "explanation": "* Recurrent painless rectal bleeding with maroon-colored stools and Technetium-99m scintigraphy showing enhancement and a blush above and separate from the bladder are classic for a bleeding Meckel diverticulum (due to ectopic gastric mucosa).\n* To ensure excision of all ectopic tissue and the ulcer, a segmental ileal resection is preferred over simple diverticulectomy (D).\n* Proton-pump inhibitors (A) might reduce acid production but do not remove the source of bleeding.\n* Embolization (B, C) is not the primary treatment for Meckel diverticulum."
    },
    {
      "id": 33,
      "question_type": "mcq",
      "question": "A newborn baby with a prenatal diagnosis of gastroschisis is born with the entire small intestine outside of the abdomen. The bowel appears ischemic and the abdominal wall defect is small and tight. The most appropriate next step in management is:",
      "options": [
        "A. Place a bedside silo",
        "B. Primary reduction and closure",
        "C. Open the abdominal wall defect",
        "D. Resect the ischemic bowel",
        "E. Create a diverting ileostomy"
      ],
      "answer": "C",
      "explanation": "* The patient has gastroschisis with ischemic bowel and a small, tight abdominal wall defect.\n* The immediate concern is the tight defect causing ischemia; therefore, the defect must be opened immediately to relieve compression and prevent further ischemia.\n* After the defect is opened, if the bowel is still viable but cannot be primarily reduced, a silo (A) is typically indicated.\n* Primary reduction and closure (B) should only be attempted when there is no risk to the bowel.\n* Resection of ischemic bowel (D) should be reserved for grossly necrotic bowel, as patients with gastroschisis are at risk of developing short gut syndrome.\n* A diverting ileostomy (E) is not indicated in this scenario."
    },
    {
      "id": 34,
      "question_type": "mcq",
      "question": "A 1-week-old, full-term baby with abdominal distention, fever, tachycardia, and low urine output is transferred to the NICU. The patient has not passed meconium. He had a suction rectal biopsy showing aganglionosis. Digital rectal examination shows explosive, foul smelling liquid stools. Despite broad-spectrum IV antibiotics and rectal irrigation, he is clinically deteriorating. The next step in management is:",
      "options": [
        "A. Perform contrast enema",
        "B. Perform loop colostomy",
        "C. Perform subtotal colectomy and ileostomy",
        "D. Perform abdominal decompression for abdominal compartment syndrome",
        "E. Add additional antifungal coverage"
      ],
      "answer": "B",
      "explanation": "* The patient has Hirschsprung disease (aganglionosis confirmed by biopsy) and is clinically deteriorating with signs of Hirschsprung-associated enterocolitis (HAEC) despite initial medical management (IV antibiotics and rectal irrigation).\n* In this situation, urgent colostomy is needed to decompress the colon and can be life-saving.\n* A contrast enema (A) is contraindicated in patients with active HAEC.\n* Subtotal colectomy and ileostomy (C) should not be performed as the level of aganglionosis is not yet known, and the patient is too sick for a prolonged operation.\n* Abdominal decompression for abdominal compartment syndrome (D) is not the primary intervention for HAEC.\n* Adding additional antifungal coverage (E) is not indicated based on the information provided."
    },
    {
      "id": 35,
      "question_type": "mcq",
      "question": "A 4-week-old infant presents with bilious vomiting, irritability, abdominal wall edema, and erythema. Plain films reveal proximal dilated bowel, with a paucity of distal bowel gas. Which is true regarding this patient?",
      "options": [
        "A. An urgent UGI series is indicated.",
        "B. A trial of nasogastric tube decompression is often helpful.",
        "C. Endoscopic decompression is often beneficial.",
        "D. A CT scan of the abdomen and pelvis should be obtained.",
        "E. Delay in management may lead to a need for intestinal transplantation."
      ],
      "answer": "E",
      "explanation": "* The patient's signs (bilious vomiting, irritability, abdominal wall edema, erythema, proximal dilated bowel, paucity of distal gas) are consistent with malrotation with midgut volvulus and advanced ischemia (intestinal gangrene).\n* When abdominal wall edema is evident, there is a high likelihood of intestinal gangrene.\n* Early surgical intervention is mandatory to avoid or reverse the ischemic process; delay in management may lead to extensive dead bowel, short-gut syndrome, and potentially a need for intestinal transplantation (E is true).\n* No further studies (UGI series (A), CT scan (D)) are indicated as the diagnosis is clear and urgent laparotomy is needed.\n* Nasogastric tube decompression (B) is helpful for initial stabilization but not definitive management.\n* Endoscopic decompression (C) has no role in this condition."
    },
    {
      "id": 36,
      "question_type": "mcq",
      "question": "A neonate is found to have bilateral undescended testes that are not palpable in the inguinal canal. Which of the following is true regarding this condition?",
      "options": [
        "A. A bilateral orchiopexy should be performed by 1 year of age.",
        "B. Orchiopexy does not improve fertility potential.",
        "C. Orchiopexy reduces the risk of malignancy in the testicles.",
        "D. Chorionic gonadotropin does not aid in testicular descent.",
        "E. The testicular arteries must be preserved during operation."
      ],
      "answer": "A",
      "explanation": "* Children born with bilateral undescended testes have a much higher rate of subsequent infertility.\n* Orchiopexy is recommended by 1 year of age to maximize chances of improving fertility (A is true).\n* Orchiopexy does improve fertility potential, although it may not normalize it (B is false).\n* Orchiopexy does not reduce the risk of malignancy, but it facilitates earlier detection of malignancy (C is false).\n* Chorionic gonadotropin can be effective in achieving descent in some patients with bilateral undescended testes, suggesting a hormonal deficiency (D is false).\n* In a two-stage Fowler-Stephens procedure for high intra-abdominal testes, the testicular arteries are clipped laparoscopically in the first stage, relying on collateral blood supply, meaning they are not always preserved (E is false)."
    }
  ]
}