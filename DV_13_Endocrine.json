{
  "chapter_name": "Endocrine",
  "questions": [
    {
      "id": 1,
      "question_type": "mcq",
      "question": "Which of the following features of Graves disease does not improve with antithyroid therapy?",
      "options": [
        "A. Tremor",
        "B. Anxiety",
        "C. Graves dermopathy",
        "D. Gastrointestinal disturbance",
        "E. Exophthalmos"
      ],
      "answer": "E",
      "explanation": "- Graves disease is the most common cause of hyperthyroidism in the United States and is due to antibodies targeting thyrotropin receptors, which increase production of thyroid hormone.\n- Patients present with anxiety, rapid or irregular heart rate, heat intolerance, weight loss, thinning hair, decreased libido, diarrhea, thick and shiny skin (Graves dermopathy), and exophthalmos.\n- The preferred therapy is radioactive iodine ablation, but medical therapy with propylthiouracil (PTU) or methimazole is also available.\n- Exophthalmos develops in about 10% of patients and is the only symptom that is resistant to antithyroid therapy and even worsens after radioactive iodine ablation (A-D).\n- Some studies suggest that the use of prednisone before antithyroid therapy can help improve exophthalmos."
    },
    {
      "id": 2,
      "question_type": "mcq",
      "question": "A 56-year-old male presents with refractory hypertension despite being started on hydrochlorothiazide and lisinopril by his primary care physician. His blood pressure is 182/92 mm Hg. Laboratory studies are remarkable for an aldosterone-renin ratio of 25 and hypokalemia. Which of the following is most likely to be the recommended treatment?",
      "options": [
        "A. Unilateral adrenalectomy",
        "B. Bilateral adrenalectomy with fludrocortisone postoperatively",
        "C. Spironolactone",
        "D. Phenoxybenzamine",
        "E. Eplerenone"
      ],
      "answer": "C",
      "explanation": "- Primary hyperaldosteronism should be suspected in patients with hypertension and hypokalemia.\n- It results from autonomous aldosterone secretion, which leads to suppression of renin secretion.\n- Diagnosis is made by demonstrating a combination of inappropriate potassium excretion in the urine (kaliuresis), low plasma renin, and a high aldosterone-to-renin ratio (>20).\n- While adrenal adenoma (Conn syndrome) was previously believed to be the most common cause, nearly 60% of cases are now known to be due to idiopathic bilateral adrenal hyperplasia (IBAH).\n- Etiology must be clearly established due to different management approaches.\n- Adrenal adenoma should be removed with a unilateral adrenalectomy.\n- IBAH is managed with medical therapy alone, using a mineralocorticoid replacement such as spironolactone or eplerenone (A).\n- A double-blind randomized controlled study demonstrated the superiority of spironolactone in controlling hypertension compared with eplerenone (E).\n- Bilateral adrenalectomy is considered in cases of severe refractory hypertension but carries a high risk of complications and subjects the patient to lifelong dependence of mineralocorticoids (fludrocortisone) and steroids (B).\n- Phenoxybenzamine is an alpha-1 receptor antagonist used in the preoperative management of pheochromocytoma (D)."
    },
    {
      "id": 3,
      "question_type": "mcq",
      "question": "A 40-year-old female presents with a large thyroid nodule. Workup and subsequent resection demonstrates a 4-cm papillary thyroid carcinoma with positive lymph nodes and local extension but no evidence of distant disease. What stage is her cancer?",
      "options": [
        "A. Stage 1",
        "B. Stage 2",
        "C. Stage 3a",
        "D. Stage 3b",
        "E. Stage 4"
      ],
      "answer": "A",
      "explanation": "- Age is the most important factor in thyroid cancer staging.\n- Patients younger than 45 years of age can only be classified as stage I (no distant metastasis) or II (distant metastasis).\n- For patients younger than 45, lymph node status and tumor size are not taken into consideration.\n- For patients older than 45, the tumor, nodes, and metastases (TNM) system for well-differentiated thyroid cancer also accounts for tumor size, positive lymph nodes, local extension, and distant metastasis."
    },
    {
      "id": 4,
      "question_type": "mcq",
      "question": "A 46-year-old female with a 3-cm palpable right-sided thyroid nodule has a fine-needle aspirate (FNA) performed, which is reported as nondiagnostic. What is the best next step?",
      "options": [
        "A. Repeat FNA",
        "B. Core needle biopsy",
        "C. Right thyroid lobectomy",
        "D. Total thyroidectomy",
        "E. Ultrasound in 6 months"
      ],
      "answer": "A",
      "explanation": "- The most important test in the evaluation of a solitary thyroid nodule is FNA, which can be performed with ultrasound guidance if the lesion is difficult to palpate.\n- Before the routine use of FNA, there was a high rate of benign thyroid surgical resections; with current practice, the percentage of thyroid nodules resected that are found to be malignant is over 50%.\n- The Bethesda system for reporting thyroid cytopathology classifies nodules into six groups: (1) nondiagnostic or unsatisfactory, (2) benign, (3) atypia of undetermined significance or follicular lesion of undetermined significance, (4) follicular neoplasm or suspicious for a follicular neoplasm, (5) suspicious for malignancy, and (6) malignant.\n- Patients with a nondiagnostic or unsatisfactory FNA should have a repeat FNA performed (B-E)."
    },
    {
      "id": 5,
      "question_type": "mcq",
      "question": "A 51-year-old male with a 2-cm palpable right-sided thyroid nodule has a FNA performed, which is reported as follicular lesion of undetermined significance (FLUS). Which of the following is true about this condition?",
      "options": [
        "A. Repeat FNA is not recommended.",
        "B. Molecular testing does not influence management.",
        "C. Right thyroid lobectomy is an acceptable option.",
        "D. Total thyroidectomy is the next best step.",
        "E. Ultrasound follow-up in 6 months is the best option."
      ],
      "answer": "C",
      "explanation": "- FNA results are classified into six different groups.\n- The management of FNA reported as FLUS is somewhat controversial.\n- The current recommendation is to perform a repeat FNA (A).\n- The risk of malignancy of FLUS has historically been 5% to 15%, but more recent series have found a malignancy rate closer to 30%.\n- Authors recommend proceeding to thyroid lobectomy.\n- The decision to repeat FNA or proceed to thyroid lobectomy depends on patient risk factors for malignancy, the institutional rate of malignancy with FLUS, ultrasound features of the lesion, and more recently, molecular testing (not always available and expensive) (B, E).\n- Follicular neoplasms require a surgical lobectomy, and FNA demonstrating malignancy or suspicious for a malignant process requires a total thyroidectomy (D).\n- Core needle biopsy has been proposed as an additional adjunctive tool, particularly in cases of nondiagnostic FNA, but there are no conclusive studies to demonstrate its usefulness, nor is it considered the current standard of care.\n- It may be considered for patients hesitant to proceed with surgical resection."
    },
    {
      "id": 6,
      "question_type": "mcq",
      "question": "The thyroid gland is derived from which embryologic structure?",
      "options": [
        "A. First pharyngeal arch",
        "B. Third pharyngeal pouch",
        "C. Third pharyngeal arch",
        "D. Fourth pharyngeal pouch",
        "E. Fourth pharyngeal arch"
      ],
      "answer": "A",
      "explanation": "- The thyroid gland is one of the earliest endocrine glands to develop, arising from the first and second pharyngeal arches.\n- The superior parathyroid gland develops from the fourth pharyngeal pouch, while the inferior parathyroid gland develops from the third pharyngeal pouch (B, D).\n- The third pharyngeal arch aids in the development of the stylopharyngeus muscle.\n- The fourth pharyngeal arch allows for the development of the cricothyroid muscle (C, E)."
    },
    {
      "id": 7,
      "question_type": "mcq",
      "question": "Which of the following cancers most commonly metastasizes to the thyroid?",
      "options": [
        "A. Parathyroid gland",
        "B. Kidney",
        "C. Lung",
        "D. Breast",
        "E. Esophagus cancer"
      ],
      "answer": "B",
      "explanation": "- The most common primary tumor to metastasize to the thyroid is renal cell carcinoma.\n- Other primary cancers that metastasize to the thyroid gland, in descending order, include lung, breast, and esophageal cancer (C-E).\n- Parathyroid gland carcinoma does not metastasize to the thyroid gland (A)."
    },
    {
      "id": 8,
      "question_type": "mcq",
      "question": "Which of the following enzymes is responsible for converting L-dopa into dopamine?",
      "options": [
        "A. Tyrosine hydroxylase",
        "B. Dopamine-beta-hydroxylase",
        "C. Phenylethanolamine N-methyltransferase (PNMT)",
        "D. Dihydroxyphenylalanine (DOPA)-decarboxylase",
        "E. Cathechol-O-methyl transferase (COMT)"
      ],
      "answer": "D",
      "explanation": "- Catecholamine synthesis is a complex process governed by various enzymes.\n- Tyrosine hydroxylase is the rate-limiting step, converting L-tyrosine to L-dopa.\n- L-dopa is then converted to dopamine by dopa-decarboxylase (A).\n- Dopamine is converted to norepinephrine by dopamine-beta-hydroxylase.\n- Norepinephrine is converted to epinephrine by PNMT (B, C).\n- COMT metabolizes both norepinephrine and epinephrine (E).\n- Most enzymes are named after their precursor, aiding in remembering the steps.\n- PNMT is rarely present outside the adrenal medulla, explaining why extra-adrenal pheochromocytomas do not synthesize high levels of norepinephrine.\n- Brain stem, retina, and cardiac tissue may also contain PNMT."
    },
    {
      "id": 9,
      "question_type": "mcq",
      "question": "A 45-year-old woman with rheumatoid arthritis on chronic steroids loses her insurance and has not been able to get a refill on her medications including atenolol, methotrexate, and prednisone. She arrives to the emergency department with a fever, hypotension, nausea, and dizziness. The next best step is:",
      "options": [
        "A. Intravenous (IV) antibiotics",
        "B. IV hydrocortisone",
        "C. IV fluids",
        "D. Administer oral methotrexate",
        "E. Complete blood count, basic metabolic panel, and cortisol level"
      ],
      "answer": "C",
      "explanation": "- Fever, hypotension, nausea, and dizziness in a patient on chronic steroids who suddenly stopped medications raise concern for acute adrenal insufficiency.\n- If acute adrenal insufficiency is suspected, treatment should begin immediately before confirmatory tests are available (E).\n- Initial treatment consists of IV normal saline volume resuscitation.\n- This is followed by administration of either 4 mg of dexamethasone or 100 mg of hydrocortisone (B).\n- Dexamethasone is preferred as it does not interfere with cosyntropin stimulation testing, which should be done the next morning to confirm the diagnosis.\n- IV antibiotics are not used in acute adrenal insufficiency (A).\n- Cessation of methotrexate does not present with the aforementioned symptoms (D)."
    },
    {
      "id": 10,
      "question_type": "mcq",
      "question": "A 45-year-old male presents with a 2-day history of nausea, vomiting, and marked abdominal distention. He has no prior surgical history. Before this, he's had watery diarrhea for about a month. On exam, he has diffuse tenderness without rebound or guarding. Computed tomography (CT) scan demonstrates markedly dilated loops of small bowel with an abrupt transition in the mid jejunum with distal collapse. In addition there are two, 2-cm solid masses in the right lobe of the liver. At surgery, at the point of obstruction, there is a small mass in the mid ileum with surrounding fibrosis, causing tethering and kinking of the small bowel mesentery. The two lesions in the right lobe of the liver are not palpable. A segmental small bowel resection is performed. Additionally, which of the following is recommended?",
      "options": [
        "A. Cholecystectomy",
        "B. Ultrasound-guided liver biopsy",
        "C. Liver resection",
        "D. Appendectomy",
        "E. No additional procedure"
      ],
      "answer": "A",
      "explanation": "- This patient has metastatic midgut neuroendocrine tumor (NET).\n- The finding of fibrosis and tethering of the mesentery is highly suggestive of a carcinoid tumor.\n- The accompanying diarrhea, combined with likely liver metastasis, is highly suggestive of carcinoid syndrome.\n- Compared to foregut, midgut, and hindgut NETs, midgut NETs have a greater 5-year survival rate.\n- Chemotherapy has not been shown to significantly increase disease-free survival.\n- Symptom control is achieved with somatostatin analogues such as octreotide.\n- Accepted lifelong indications for octreotide use include patients with peptide/amine induced syndromes with clinical symptoms and for patients with progression of metastatic disease even without a syndrome.\n- This patient will require postoperative octreotide given his history of watery diarrhea.\n- Octreotide promotes biliary sludging and leads to a high rate of symptomatic cholelithiasis, necessitating a cholecystectomy at the time of surgery (E).\n- This indication becomes stronger if the patient is planned to undergo hepatic artery embolization secondary to liver metastasis.\n- Liver biopsy or resection is not appropriate during emergency surgery, especially when the lesion is not readily palpable.\n- His disease is likely amenable to less morbid procedures such as radiofrequency ablation and/or hepatic artery embolization (B, C).\n- There is no indication for appendectomy (D)."
    },
    {
      "id": 11,
      "question_type": "mcq",
      "question": "Which of the following is true regarding Hürthle cell carcinoma?",
      "options": [
        "A. It contains an abundance of oncocytic or oxyphilic cells.",
        "B. Lymph node metastasis is exceedingly rare.",
        "C. Diagnosis of malignancy is usually made by FNA.",
        "D. Residual disease is effectively treated with iodine 131 (131I).",
        "E. Histologically they demonstrate Orphan Annie cells."
      ],
      "answer": "A",
      "explanation": "- Hürthle cell carcinoma accounts for less than 10% of thyroid malignancies and is considered a subtype of follicular cancer.\n- Like follicular cancer, malignancy is established by demonstrating vascular or capsular invasion.\n- FNA and frozen section do not reliably establish malignancy (C).\n- The tumors contain sheets of eosinophilic cells packed with mitochondria, derived from oncocytic or oxyphilic cells of the thyroid gland.\n- Hürthle cell carcinomas differ from follicular cell carcinomas in that they are often multifocal and bilateral, more likely to metastasize to local nodes and distant sites, and are associated with a higher mortality rate (B).\n- Residual disease is not effectively treated with radioactive iodine because Hürthle cell carcinomas do not take up radioactive iodine (D).\n- Orphan Annie cells are a hallmark of papillary carcinoma (E).\n- Unlike differentiated thyroid cancer, nodal metastases predict a worse outcome in widely invasive Hürthle cell carcinoma, as does extrathyroidal extension."
    },
    {
      "id": 12,
      "question_type": "mcq",
      "question": "A patient presents with fatigue and bone pain. Serum calcium level is 11.1 mg/dL and parathyroid hormone (PTH) is elevated. The next step for localizing the disease is:",
      "options": [
        "A. Operative exploration",
        "B. CT scan",
        "C. Technetium-99m sestamibi imaging",
        "D. Magnetic resonance imaging (MRI)",
        "E. Ultrasound scan"
      ],
      "answer": "C",
      "explanation": "- Technetium-99m sestamibi imaging is the most widely used and accurate modality, with sensitivity greater than 80% for detecting parathyroid adenomas.\n- High-resolution ultrasonography is complementary.\n- Other imaging techniques are thought to be more useful when sestamibi scanning fails to identify parathyroid pathology, for workup of recurrent hyperparathyroidism, or when surgical exploration fails to identify the parathyroid lesion.\n- Ultrasonography has an overall lower sensitivity but is most useful in identifying intrathyroidal parathyroids (E).\n- CT and MRI are less sensitive than sestamibi scans but are helpful in localizing mediastinal glands (B, D).\n- Sestamibi combined with single positron-emission computed tomography is particularly useful for localizing ectopic adenomas.\n- False-positive findings are most likely to occur in the presence of thyroid nodules or lymphadenopathy.\n- False-negative findings are more likely in patients with hyperplasia or multiple adenomas.\n- Recently, the combination of preoperative technetium-99m sestamibi imaging and rapid PTH assay has permitted successful directed parathyroidectomy using minimally invasive techniques.\n- Intraoperative gamma probe detection is an additional modality, though it lengthens the operation and is not routinely used.\n- Operative exploration would be the next step after technetium-99m sestamibi imaging if it fails to identify the hyperfunctioning parathyroid gland.\n- In 85% of cases, only one of the four glands is hyperfunctioning and not responsive to calcium level (A)."
    },
    {
      "id": 13,
      "question_type": "mcq",
      "question": "Which of the following is true regarding follicular thyroid cancer?",
      "options": [
        "A. It is the most common thyroid malignancy.",
        "B. It most commonly spreads via a hematogenous route.",
        "C. Prophylactic nodal dissection is recommended.",
        "D. It is best managed by hemithyroidectomy.",
        "E. Multicentricity is common."
      ],
      "answer": "B",
      "explanation": "- Follicular cancer is the second most common thyroid cancer.\n- It spreads primarily via a hematogenous route (A).\n- Multicentricity is uncommon (E).\n- Accurate diagnosis using FNA is not possible because cytologic features cannot distinguish a benign follicular lesion from a follicular carcinoma.\n- Malignancy is established by demonstrating capsular or vascular invasion on histology.\n- If FNA demonstrates a follicular neoplasm, the patient should undergo a thyroid lobectomy to determine malignancy.\n- Once malignancy is histologically confirmed, total thyroidectomy is recommended with or without postoperative 131I.\n- Total thyroidectomy also permits the detection of subsequent metastasis using nuclear scanning (D).\n- Postoperative radioactive iodine following total thyroidectomy is indicated for all tumors larger than 4 cm, gross extrathyroidal extension, lymph node metastases, and high-risk features like tall-cell or columnar-cell variant (D).\n- An added advantage of postoperative radiation is that it allows for continued monitoring for recurrence with thyroglobulin.\n- Prophylactic nodal dissection is not required (C)."
    },
    {
      "id": 14,
      "question_type": "mcq",
      "question": "A 45-year-old woman presents with symptomatic primary hyperparathyroidism. During surgery it is noted that all four glands are markedly enlarged. Which of the following is the best recommendation?",
      "options": [
        "A. Removal of three and a half glands for parathyroid hyperplasia, leaving half of a gland in place",
        "B. Removal of all four glands",
        "C. Removal of all four glands with autotransplan-tation of half of a gland in the forearm",
        "D. Biopsy all four glands",
        "E. Remove one gland, and biopsy the other three"
      ],
      "answer": "C",
      "explanation": "- Surgical management of a solitary parathyroid adenoma involves resection of the single enlarged gland.\n- Double adenomas are present on rare occasions.\n- For four-gland hyperplasia, resection of all four glands with reimplantation of half of one gland into the brachioradialis muscle in the forearm is recommended.\n- Another option for four-gland hyperplasia is to leave half of a gland in the neck, though this might require reoperation if recurrent hyperparathyroidism develops (A).\n- Removing all four glands without reimplantation increases the risk for hypoparathyroidism (B).\n- Medical management is not appropriate for primary hyperparathyroidism.\n- Distinguishing between adenoma and hyperplasia can be difficult if two glands are enlarged and the other two appear normal or slightly enlarged.\n- In such a circumstance, removal of the two enlarged glands and biopsy of an additional gland may be performed to rule out four-gland hyperplasia.\n- In the presence of one enlarged gland, there is no role for biopsy of the other three glands as it may result in ischemia of the remaining parathyroid glands (D, E).\n- A frequent dilemma occurs when only three glands are found and appear normal.\n- If an inferior gland is missing, it may be found in the thymus, angle of the mandible, at the skull base, superior to the superior parathyroid glands, or rarely, within the thyroid gland.\n- If the ectopic gland is not found, transcervical thymectomy is recommended.\n- If the superior gland is missing, it may be found within the thyroid gland, in the paraesophageal or retroesophageal grooves, or caudal to the inferior glands.\n- Although ectopic glands are found in the mediastinum on rare occasions, median sternotomy is not recommended at initial exploration."
    },
    {
      "id": 15,
      "question_type": "mcq",
      "question": "Which of the following is true regarding laparoscopic adrenalectomy?",
      "options": [
        "A. It is the procedure of choice for small functional adenomas.",
        "B. It is contraindicated for pheochromocytoma.",
        "C. It is contraindicated for bilateral pheochromocytoma.",
        "D. It is contraindicated for tumors larger than 5 cm.",
        "E. It is the procedure of choice for malignant tumors."
      ],
      "answer": "A",
      "explanation": "- Laparoscopic adrenalectomy is the procedure of choice for small- and medium-sized functional and benign adrenal tumors.\n- Pheochromocytoma is not a contraindication to the laparoscopic approach and may be used successfully for unilateral or bilateral tumors (B, C).\n- Tumor size alone is not a contraindication to the laparoscopic approach.\n- For a large tumor that is clearly malignant based on CT scan evidence of local invasion or lymph node metastasis, the laparoscopic approach is contraindicated (E).\n- Open adrenalectomy is preferred for tumors larger than 6 cm (D)."
    },
    {
      "id": 16,
      "question_type": "mcq",
      "question": "A 50-year-old woman presents to the emergency department with nausea, anorexia, irritability, and a serum calcium level of 14.5 mg/dL. Initial management is:",
      "options": [
        "A. IV normal saline",
        "B. Furosemide",
        "C. IV 5% dextrose and half normal saline",
        "D. Mithramycin",
        "E. Calcitonin"
      ],
      "answer": "A",
      "explanation": "- Severely elevated calcium levels indicate a hypercalcemic crisis, which is a life-threatening emergency.\n- Patients with calcium levels greater than 14 mg/dL or symptomatic patients with calcium levels greater than 12 mg/dL should be immediately and aggressively treated.\n- Severe hypercalcemia poses a risk of renal failure, severe central nervous system manifestations (including coma), QT interval shortening, tachycardia, and increased sensitivity to digitalis.\n- Treatment is divided into fast- and slow-acting modalities.\n- Fast-acting modalities include those that induce calciuresis (IV fluids), prevent bone resorption (bisphosphonates, calcitonin, mithramycin), and extract calcium (hemodialysis) (D, E).\n- Slow-acting measures prevent gastrointestinal absorption of calcium (prednisone, reduced vitamin D and calcium intake).\n- First-line therapy for hypercalcemic crisis involves initiating standard resuscitative hydration with normal saline.\n- A combination of 5% dextrose and half normal saline is most commonly used as a maintenance IV fluid (C).\n- Urine output should be kept at more than 100 mL/hour.\n- Once urine output is established, diuresis with furosemide is instituted (B), as furosemide increases renal calcium clearance.\n- If these methods are not successful, additional fast-acting modalities should be used.\n- Calcitonin is produced by thyroid C or parafollicular cells and is useful in treating hypercalcemic crisis by inhibiting osteoclast-mediated bone resorption.\n- A calcium level of this magnitude in a nonhospitalized patient most likely suggests underlying malignancy."
    },
    {
      "id": 17,
      "question_type": "mcq",
      "question": "A 65-year-old woman with a history of Hashimoto thyroiditis presents with fever, dysphagia, and a painless thyroid mass that has enlarged over a short period of time. This most likely represents:",
      "options": [
        "A. Lymphoma",
        "B. Follicular cancer",
        "C. Anaplastic thyroid cancer",
        "D. Acute suppurative thyroiditis",
        "E. Medullary thyroid cancer (MTC)"
      ],
      "answer": "A",
      "explanation": "- Hashimoto thyroiditis is an autoimmune disorder leading to destruction of thyroid follicles by cell- and antibody-mediated immune processes.\n- It is the leading cause of hypothyroidism and most commonly affects young females, resulting in lymphocytic infiltration.\n- Treatment involves thyroid hormone replacement.\n- Hashimoto thyroiditis is associated with primary thyroid lymphoma, as chronic antigenic stimulation coupled with chronic proliferation of lymphoid tissue in the thyroid is thought to lead to lymphocytic transformation.\n- In a patient with Hashimoto thyroiditis, lymphoma should be suspected if there is a rapidly enlarging thyroid mass (B-E).\n- Patients may also report fever, cervical lymphadenopathy, dysphagia, and hoarseness.\n- FNA may suggest the diagnosis, but flow cytometry (with core needle biopsy) is required to confirm it.\n- Treatment recommendation is chemotherapy (CHOP) and radiation therapy in most cases of thyroid lymphoma.\n- Hashimoto thyroiditis also increases the risk of thyroid cancer."
    },
    {
      "id": 18,
      "question_type": "mcq",
      "question": "Which of the following is true regarding the parathyroid glands?",
      "options": [
        "A. The inferior glands arise from the fourth branchial pouch and the superior ones from the third pouch.",
        "B. The superior glands are more likely to be found in an ectopic position.",
        "C. The superior glands are more likely to be found in the thymus.",
        "D. Three glands are more common than five glands.",
        "E. Ectopic superior glands are more likely to be found in the retro- or paraesophageal space."
      ],
      "answer": "E",
      "explanation": "- In a large autopsy study, 84% of patients had 4 parathyroid glands, 13% had more than 4, and only 3% had 3 glands (D).\n- The superior parathyroid glands are derived from the fourth branchial pouch, which also gives rise to the thyroid gland.\n- The third branchial pouch gives rise to the inferior parathyroid glands and the thymus (A).\n- Ectopic inferior glands are more likely to be found within the thymus than the superior glands.\n- The superior glands are more likely to be found in the retro- or paraesophageal position (B, C).\n- Given the longer descent of the inferior glands, they are overall much more likely to be in an ectopic position."
    },
    {
      "id": 19,
      "question_type": "mcq",
      "question": "In an asymptomatic patient, surgery for primary hyperparathyroidism would be least indicated for which of the following?",
      "options": [
        "A. Serum calcium of 11.6 mg/dL",
        "B. A 40% reduction in creatinine clearance",
        "C. Age older than 50 years",
        "D. Bone density at the hip more than 2.5 standard deviations below matched controls",
        "E. A 24-hour urine calcium excretion greater than 400 mg"
      ],
      "answer": "C",
      "explanation": "- Patients with symptomatic hyperparathyroidism should undergo surgery.\n- Symptoms are defined as having evidence of kidney stones; neuromuscular, neuropsychological, or bone symptoms; hypercalcemic crisis; or a history of pancreatitis or peptic ulcer.\n- Controversy exists regarding whether every asymptomatic patient should undergo parathyroidectomy.\n- Natural history studies indicate that one-fourth to one-third of asymptomatic patients will progress to symptoms over 15 years.\n- Current National Institutes of Health conference guidelines for surgery in asymptomatic patients at initial evaluation include:\n    - A serum calcium level more than 1 mg/dL above the upper limit of reference value.\n    - Reduced creatinine clearance of more than 30% compared with matched controls.\n    - An increased urinary calcium excretion of more than 400 mg/day.\n    - Evidence of bone mass reduction more than 2.5 standard deviations below matched controls.\n    - Unwillingness or inability to undergo continued follow-up."
    },
    {
      "id": 20,
      "question_type": "mcq",
      "question": "A 45-year-old-woman presents with truncal obesity and hypertension. A 24-hour urine free cortisol level is markedly elevated and a low-dose dexamethasone suppression test fails to suppress the elevated plasma cortisol levels. Plasma adrenocorticotropic hormone (ACTH) levels are also markedly elevated. A high-dose dexamethasone suppression test also fails to suppress the urinary free cortisol level. Which of the following would most likely demonstrate the cause of her symptoms?",
      "options": [
        "A. CT scan of the sella turcica",
        "B. Petrosal sinus sampling for ACTH",
        "C. Chest CT",
        "D. MRI of the sella turcica",
        "E. CT scan of the abdomen"
      ],
      "answer": "C",
      "explanation": "- Measurement of elevated 24-hour urinary cortisol levels is a very sensitive (95–100%) and specific (98%) modality for diagnosing Cushing syndrome, and should be the first test used.\n- If the level is elevated, a low-dose dexamethasone suppression test should be performed.\n- Suppression rules out Cushing syndrome; failure to suppress cortisol levels establishes the diagnosis.\n- ACTH levels should then be measured.\n- Low ACTH levels indicate a primary adrenal source of cortisol, thus the next step would be an abdominal CT scan (E).\n- High ACTH levels suggest either a pituitary or ectopic source of ACTH production.\n- A high-dose dexamethasone suppression test should then be performed; a pituitary source of ACTH will result in some ACTH and cortisol suppression.\n- If cortisol production is suppressed, pituitary MRI should be performed (D); CT scan is less sensitive in demonstrating a pituitary mass (A).\n- Failure to suppress cortisol production with high-dose dexamethasone suggests an ectopic ACTH tumor.\n- The most common causes of ectopic ACTH production are bronchial tumors and small cell lung cancer.\n- Thus, the study of choice would be a chest CT scan.\n- Petrosal sinus sampling of ACTH is an invasive procedure to determine which side of the pituitary gland an ACTH-producing tumor is located (B)."
    },
    {
      "id": 21,
      "question_type": "mcq",
      "question": "Calcified clumps of cells on histology are consistent with:",
      "options": [
        "A. Papillary cancer",
        "B. Hürthle cell cancer",
        "C. Follicular cancer",
        "D. Medullary thyroid cancer",
        "E. Anaplastic cancer"
      ],
      "answer": "A",
      "explanation": "- Psammoma bodies are calcified deposits representing clumps of sloughed cells.\n- They are considered diagnostic of papillary carcinoma (B-E).\n- Another histologic characteristic of papillary carcinoma is Orphan Annie nuclei."
    },
    {
      "id": 22,
      "question_type": "mcq",
      "question": "Which of the following is true regarding pheochromocytoma?",
      "options": [
        "A. Risk of malignancy is higher in patients with familial tumors.",
        "B. Malignancy is determined histologically by the number of mitoses.",
        "C. Familial tumors are more likely to be unilateral.",
        "D. Metaiodobenzylguanidine scanning is useful for localizing extra-adrenal pheochromocytomas.",
        "E. Urine metanephrine has the highest sensitivity."
      ],
      "answer": "D",
      "explanation": "- Pheochromocytomas occur sporadically, as part of multiple endocrine neoplasia (MEN) type 2A and MEN type 2B, in association with von Hippel-Lindau disease, and with von Recklinghausen disease.\n- Diagnosis of benign or malignant pheochromocytoma cannot be accurately determined by histologic appearance but rather by evidence of local invasion or the presence/absence of metastasis (B).\n- Risk of malignancy is lower in patients with familial tumors than in sporadic tumors, although familial tumors are more likely to be bilateral (A, C).\n- Diagnosis is established by demonstrating increased levels of catecholamines and their metabolites in plasma and urine.\n- Plasma metanephrine levels have the highest sensitivity (99%) for pheochromocytoma and are used as the initial screening test (E)."
    },
    {
      "id": 23,
      "question_type": "mcq",
      "question": "The most common type of thyroid cancer in children is:",
      "options": [
        "A. Papillary",
        "B. Follicular",
        "C. Medullary",
        "D. Hürthle cell",
        "E. Anaplastic"
      ],
      "answer": "A",
      "explanation": "- Papillary cancer is the most common thyroid malignancy in adults and children (B-E).\n- The rate of malignancy in thyroid nodules is higher in children (approximately 25% versus 5% in adults).\n- Prognosis in children overall is excellent."
    },
    {
      "id": 24,
      "question_type": "mcq",
      "question": "Which of the following is true regarding secondary hyperparathyroidism?",
      "options": [
        "A. Serum calcium levels are markedly increased.",
        "B. It is usually associated with a parathyroid adenoma.",
        "C. PTH levels are typically normal or high normal.",
        "D. Cinacalcet is the initial treatment of choice.",
        "E. Most patients will eventually require parathyroidectomy."
      ],
      "answer": "D",
      "explanation": "- Secondary hyperparathyroidism is seen in the majority of cases associated with chronic renal failure (B).\n- Rarely, it occurs secondary to intestinal malabsorption of calcium and vitamin D.\n- The underlying etiology is chronic overstimulation of the parathyroid glands.\n- Renal failure leads to decreased calcitriol (vitamin D3), elevated phosphate, and a drop in serum calcium levels (A), resulting in increased PTH secretion.\n- PTH levels are typically very high, ranging from 500 to 1500 pg/mL (normal is ≤65 pg/mL) (C).\n- As renal failure progresses, there is a decrease in vitamin D and calcium receptors, leading to parathyroid gland resistance to calcitriol and calcium.\n- Patients with secondary hyperparathyroidism are generally hypocalcemic or normocalcemic.\n- The typical parathyroid gland pathology is four-gland hyperplasia.\n- Medical management historically consisted of a low-phosphate diet, phosphate binders, and oral supplementation with calcium and vitamin D.\n- More recently, cinacalcet has been approved by the U.S. Food and Drug Administration for secondary hyperparathyroidism due to chronic renal failure.\n- Cinacalcet is a calcimimetic agent that increases the sensitivity of the calcium-sensing receptor to activation by extracellular calcium, directly lowering PTH levels.\n- The majority of patients with secondary hyperparathyroidism can be managed medically.\n- The recent introduction of cinacalcet will likely lead to a further reduction in the need for surgical management.\n- Surgery is indicated for failed medical management (E).\n- Indications include intractable bone pain, severe pruritus, calciphylaxis, and progressive renal osteodystrophy.\n- Surgical treatment consists of removal of all four glands with autoimplantation of parathyroid tissue in the forearm muscle or removal of three and a half glands."
    },
    {
      "id": 25,
      "question_type": "mcq",
      "question": "Which of the following is true regarding tertiary hyperparathyroidism?",
      "options": [
        "A. It is usually due to an underlying parathyroid carcinoma.",
        "B. It is most commonly seen after successful kidney transplantation.",
        "C. The serum calcium level is usually normal or low.",
        "D. Distinguishing between secondary and tertiary hyperparathyroidism is essential because the management differs.",
        "E. It only occurs in patients with chronic renal insufficiency."
      ],
      "answer": "B",
      "explanation": "- Tertiary hyperparathyroidism most commonly occurs in patients with long-standing secondary hyperparathyroidism who subsequently develop autonomously functioning parathyroid glands that continue secreting PTH despite high serum calcium levels (C).\n- The most common clinical scenario is in patients who have undergone renal transplantation (A, E).\n- Distinguishing between secondary and tertiary hyperparathyroidism is not critical because the initial management is medical, and surgery is indicated for failure of medical management (D).\n- Surgical treatment consists of removal of 3½ glands rather than all 4 glands with autoimplantation of parathyroid tissue in the forearm muscle in cases where all four glands are enlarged."
    },
    {
      "id": 26,
      "question_type": "mcq",
      "question": "Which of the following is true regarding pseudohypoparathyroidism?",
      "options": [
        "A. Treatment involves surgery.",
        "B. The serum calcium level is high.",
        "C. The serum phosphate level is low.",
        "D. Patients have short stubby fingers.",
        "E. It responds well to exogenously administered PTH extract."
      ],
      "answer": "D",
      "explanation": "- Pseudohypoparathyroidism is a genetic disorder characterized by insensitivity to PTH.\n- It is characterized by hypocalcemia, hyperphosphatemia, and elevated PTH (B, C).\n- Patients typically have short stature, are obese, and have a round face and short, stubby fingers with dimpling of the knuckles when the fist is clenched.\n- Due to insensitivity to PTH, there is no role for exogenous PTH administration (E).\n- Treatment involves oral calcium and vitamin D supplementation (A)."
    },
    {
      "id": 27,
      "question_type": "mcq",
      "question": "A 45-year-old man with episodic severe hypertension is found to have an elevated plasma metanephrine level and a serum calcium level of 11.5 mg/dL. Which of the following would be indicated in the workup?",
      "options": [
        "A. CT scan of the sella turcica",
        "B. Calcitonin level",
        "C. Serum gastrin level",
        "D. Serum prolactin level",
        "E. A 24-hour urine cortisol"
      ],
      "answer": "B",
      "explanation": "- Elevated plasma metanephrine indicates a high suspicion for pheochromocytoma.\n- Further workup for pheochromocytoma should include a CT or MRI scan of the abdomen to detect an adrenal mass.\n- Elevated calcium suggests hyperparathyroidism.\n- The patient should have a PTH level measured, and if elevated, should undergo a sestamibi scan.\n- Given these findings, the patient most likely has MEN type 2, characterized by pheochromocytoma, hyperparathyroidism, and MTC.\n- Screening for MTC involves measuring the serum calcitonin level.\n- MEN type 1 is characterized by hyperparathyroidism, pituitary tumor, and pancreatic tumors.\n- CT of the sella turcica may be used to look for a pituitary tumor such as prolactinoma (A).\n- An elevated prolactin level will also support a diagnosis of prolactinoma (D).\n- Elevated gastrin level is associated with gastrinoma (C).\n- A 24-hour urine cortisol level can be used in the workup for Cushing syndrome (E)."
    },
    {
      "id": 28,
      "question_type": "mcq",
      "question": "Which of the following laboratory findings is characteristically associated with primary hyperparathyroidism?",
      "options": [
        "A. Elevated serum phosphate",
        "B. Increased serum chloride",
        "C. Decreased urinary calcium",
        "D. Metabolic alkalosis",
        "E. Elevated calcium with a decreased PTH"
      ],
      "answer": "B",
      "explanation": "- PTH inhibits phosphate reabsorption at the proximal convoluted tubule, thereby lowering phosphate levels (A).\n- It also inhibits the Na+/H+ antiporter, leading to inhibition of bicarbonate excretion in the urine.\n- This results in a mild metabolic acidosis and corresponding hyperchloremia (D).\n- This subsequently results in an elevated chloride-to-phosphate ratio (>33).\n- PTH levels are increased (E).\n- Hypercalcemia typically results in hypercalciuria, with the exception of patients with familial hypocalciuric hypercalcemia (C)."
    },
    {
      "id": 29,
      "question_type": "mcq",
      "question": "A 60-year-old woman presents with a history of kidney stones and a palpable neck mass. Her serum calcium level is 14.1 mg/dL. The most likely diagnosis is:",
      "options": [
        "A. Parathyroid adenoma",
        "B. Parathyroid hyperplasia",
        "C. Parathyroid cancer",
        "D. Breast cancer with bone metastasis",
        "E. Secondary hyperparathyroidism"
      ],
      "answer": "C",
      "explanation": "- Parathyroid carcinoma is extremely rare, accounting for less than 1% of primary hyperparathyroidism cases.\n- It should be suspected in the setting of severe hypercalcemia symptoms, very high serum calcium and PTH levels, and a palpable neck mass (A, B).\n- Benign causes of hyperparathyroidism rarely result in a palpable neck mass.\n- Malignancy determination is difficult as there are no classic histologic features to reliably distinguish parathyroid malignancy from benign disease.\n- One must look for evidence of local invasion at the time of surgery, as well as enlarged lymph nodes.\n- Treatment is surgical and involves en bloc resection of the parathyroid tumor with the ipsilateral thyroid gland, and a modified radical lymph node dissection if nodal metastasis is present.\n- Recently, cinacalcet was approved by the U.S. Food and Drug Administration and is effective in controlling hypercalcemia associated with parathyroid carcinoma.\n- Breast cancer with bone metastasis may be associated with a paraneoplastic syndrome where a high level of PTH-related protein is found; this is unlikely to present with a palpable neck mass (D).\n- Secondary hyperparathyroidism is associated with a low level of serum calcium (E)."
    },
    {
      "id": 30,
      "question_type": "mcq",
      "question": "During neck exploration for primary hyperparathyroidism, only three parathyroid glands are identified, all of which appear normal in size. Which of the following would be appropriate?",
      "options": [
        "A. Perform a transcervical thymectomy.",
        "B. Remove all three glands and reimplant one in the forearm.",
        "C. Remove two and a half glands and then close.",
        "D. Perform median sternotomy to look for ectopic parathyroid.",
        "E. Obtain biopsy samples of all three parathyroid glands and then close."
      ],
      "answer": "A",
      "explanation": "- On occasion, despite careful neck exploration, only three parathyroid glands are encountered.\n- A careful search for the ectopic gland should be conducted (B, C).\n- Inferior glands are more likely to be ectopic than superior ones, most often found within 2 cm of the inferior thyroid pole.\n- If not found, the next step is to perform a cervical thymectomy and send the tissue for frozen section.\n- If glands are still not found, the carotid sheath should be opened.\n- Intraoperative ultrasonography should then be used to determine if there is an intrathyroidal parathyroid gland.\n- If ultrasonography is not available, ipsilateral thyroid lobectomy should be considered.\n- Intraoperative gamma probe detection and intraoperative PTH assays can assist in determining whether the pathologic gland has been removed.\n- Ectopic parathyroid glands are only rarely found in the mediastinum, so a median sternotomy is not recommended unless all other options are explored (D).\n- Biopsy may result in ischemia of the parathyroid glands (E)."
    },
    {
      "id": 31,
      "question_type": "mcq",
      "question": "After total thyroidectomy and postoperative iodine ablation for a 5-cm follicular thyroid cancer, the best test to monitor for recurrent disease is:",
      "options": [
        "A. Serum thyroid-stimulating hormone (TSH)",
        "B. Serum calcitonin",
        "C. Serum thyroglobulin",
        "D. 131I scan",
        "E. Ultrasound scan of the neck"
      ],
      "answer": "C",
      "explanation": "- Serum thyroglobulin levels are the most useful modality to monitor patients for recurrence of differentiated thyroid cancer (papillary and follicular) after total thyroidectomy and radioactive iodine ablation.\n- Thyroglobulin is a glycoprotein that is the primary component of colloid matrix within the thyroid follicle.\n- Thyroglobulin levels in patients who have undergone total thyroidectomy should be ≤3 ng/mL when receiving thyroid hormone replacement therapy and ≤5 ng/mL when thyroid hormone supplementation is withheld.\n- Serum thyroglobulin levels are most predictive of recurrence when patients are hypothyroid, as documented by a high TSH level (A).\n- An increase above these levels is highly suggestive of metastatic disease.\n- The recommendation after thyroidectomy is to check thyroglobulin levels initially at 6-month intervals after surgery.\n- If thyroglobulin levels are elevated, an 131I scan is recommended (D).\n- Recurrence of MTC is determined by calcitonin levels (B).\n- Ultrasound of the neck is not used to monitor for recurrent disease (E)."
    },
    {
      "id": 32,
      "question_type": "mcq",
      "question": "Which of the following is true regarding adrenal cortical carcinoma?",
      "options": [
        "A. Associated evidence of hormonal excess is common.",
        "B. The diagnosis is generally made by CT-guided needle biopsy.",
        "C. Staging is based on tumor histology.",
        "D. Because of malignant potential, adrenal masses larger than 3 cm should be excised.",
        "E. Mitotane is highly effective in patients with positive lymph nodes."
      ],
      "answer": "A",
      "explanation": "- Adrenocortical carcinomas are rare.\n- They should be suspected in the presence of large tumors (>5–6 cm) or if the CT scan shows evidence of necrosis, hemorrhage, or local invasion.\n- Approximately 60% of patients with adrenocortical carcinoma present with hormonal excess, including Cushing syndrome and virilization.\n- There are no distinctive histologic or cytologic features that distinguish adrenocortical carcinoma from an adenoma (C).\n- Diagnosis relies on evidence of local invasion, lymph node metastasis, or distant metastasis.\n- CT-guided needle biopsy is not recommended (B).\n- The best chance for cure is surgical resection.\n- Mitotane is an adrenal cytotoxic agent but has poor response rates (E).\n- Adrenal masses that are hormonally active should be excised.\n- In the absence of hormonal activity and CT scan features suggestive of malignancy, resection is recommended for asymptomatic masses larger than 5 to 6 cm (D)."
    },
    {
      "id": 33,
      "question_type": "mcq",
      "question": "Malignancy within a thyroglossal duct cyst is typically:",
      "options": [
        "A. Follicular thyroid",
        "B. Papillary thyroid",
        "C. Squamous cell",
        "D. Anaplastic thyroid",
        "E. Hürthle cells"
      ],
      "answer": "B",
      "explanation": "- The frequency of thyroid carcinoma among patients with a surgically removed thyroglossal duct cyst in one large series was 0.7%.\n- The majority is papillary cancer, often found incidentally after a Sistrunk procedure (performed for the cyst) (A, C-E).\n- If discovered incidentally, the patient should subsequently undergo a total thyroidectomy because additional cancer is usually found within the thyroid gland."
    },
    {
      "id": 34,
      "question_type": "mcq",
      "question": "After a total thyroidectomy, the right vocal cord is noted to be fixed in a paramedian position. This most likely represents:",
      "options": [
        "A. Injury to the recurrent laryngeal nerve (RLN)",
        "B. Injury to the external branch of the superior laryngeal nerve",
        "C. Injury to the internal branch of the superior laryngeal nerve",
        "D. Trauma from endotracheal intubation",
        "E. Compression from hematoma"
      ],
      "answer": "A",
      "explanation": "- The RLN innervates the intrinsic muscles of the larynx, except the cricothyroid muscles.\n- The cricothyroid muscles are innervated by the external branch of the superior laryngeal nerve (B).\n- The internal branch of the superior laryngeal nerve provides sensory input for the pharynx (C).\n- Injury to one RLN leads to paralysis of the ipsilateral vocal cord, which becomes fixed in either the paramedian or abducted position.\n- If the cord is fixed in the paramedian position, the patient will have a weak voice.\n- If the cord is fixed in the abducted position, the patient will have a hoarse voice and an ineffective cough.\n- If both RLNs are injured, an acute airway obstruction may develop.\n- Trauma from endotracheal intubation or compression from hematoma does not typically cause vocal cord paralysis (D, E)."
    },
    {
      "id": 35,
      "question_type": "mcq",
      "question": "The most common pituitary neoplasm associated with MEN 1 secretes:",
      "options": [
        "A. ACTH",
        "B. Prolactin",
        "C. Growth hormone",
        "D. Thyroid-stimulating hormone",
        "E. Follicle-stimulating hormone"
      ],
      "answer": "B",
      "explanation": "- Pituitary tumors are the third most common tumors in MEN 1.\n- The majority are prolactinomas (A, C-E).\n- They may cause visual field defects due to local compression.\n- They may lead to amenorrhea and galactorrhea in women or hypogonadism in men.\n- Women are more likely to present early due to hormonal symptoms.\n- Men typically present later with mass-effect of the tumor (visual changes, headaches, etc.)."
    },
    {
      "id": 36,
      "question_type": "mcq",
      "question": "The most common extra-adrenal site of pheochromocytoma is the:",
      "options": [
        "A. Rectum",
        "B. Bladder",
        "C. Neck",
        "D. Organ of Zuckerkandl",
        "E. Sacrum"
      ],
      "answer": "D",
      "explanation": "- The \"rule of tens\" for pheochromocytoma (10% bilateral, 10% extra-adrenal, 10% familial, 10% multifocal, 10% malignant) was disproved after 2000 due to novel germline mutations.\n- Currently, 20% to 40% of pheochromocytomas arise from an underlying familial syndrome with genotype-phenotype correlations.\n- The organ of Zuckerkandl is a para-aortic structure located at the take-off of the inferior mesenteric artery or at the aortic bifurcation.\n- It consists of a small mass of chromaffin cells derived from the neural crest.\n- In fetal circulation, it regulates blood pressure via catecholamine secretion but then regresses.\n- Pheochromocytoma may rarely be found in the bladder and can present with symptoms during voiding (B).\n- The remaining choices are very rare locations for pheochromocytoma (A, C, E)."
    },
    {
      "id": 37,
      "question_type": "mcq",
      "question": "A 40-year-old female presents with incidentally discovered elevation in serum calcium. She is otherwise healthy. A PTH level is elevated as well. Both ultrasound and sestamibi scan of the neck are negative. Which of the following is true about this condition?",
      "options": [
        "A. It may represent tertiary hyperparathyroidism.",
        "B. A 24-hour urine calcium is indicated.",
        "C. She should proceed to neck exploration.",
        "D. It should be treated with cinacalcet.",
        "E. Selective venous sampling is indicated."
      ],
      "answer": "B",
      "explanation": "- Surgery is indicated in asymptomatic patients under 50 suspected of primary hyperparathyroidism.\n- Familial hypocalciuric hypercalcemia (FHH) causes mild increase in serum calcium and can be misdiagnosed as primary hyperparathyroidism.\n- FHH is a benign condition due to mutations in CASR, which encodes a calcium receptor.\n- Lack of calcium signal increases PTH level, which increases renal calcium reabsorption.\n- Part of the workup for primary hyperparathyroidism is to obtain a 24-hour urine calcium.\n- Hypercalciuria with high PTH and serum calcium levels confirms primary hyperparathyroidism.\n- Low urine calcium level suggests FHH.\n- Once FHH is ruled out, four-gland neck exploration can be performed without further imaging (C).\n- Tertiary hyperparathyroidism typically occurs in patients with renal failure, most of whom have undergone kidney transplantation (A).\n- Cinacalcet is indicated for patients with secondary hyperparathyroidism (D).\n- Selective venous sampling is an invasive procedure indicated in patients with recurrent hyperparathyroidism when other imaging forms fail to identify the abnormal gland (E)."
    },
    {
      "id": 38,
      "question_type": "mcq",
      "question": "Which of the following is true regarding neuroblastoma?",
      "options": [
        "A. It is the third most common abdominal malignancy in children.",
        "B. Prognosis is better for older children than those diagnosed before 1 year of age.",
        "C. It is associated with aniridia and hemihypertrophy.",
        "D. In the mediastinum, they are most often located anteriorly.",
        "E. Amplification of the N-myc oncogene has an unfavorable prognosis."
      ],
      "answer": "E",
      "explanation": "- Neuroblastoma is the most common abdominal malignancy in children and the third most common overall, originating from neural crest (A).\n- It most often presents as an abdominal mass, with most patients having advanced disease at presentation.\n- For stage I disease, surgical resection is the best treatment.\n- The overall survival rate is less than 30% (C).\n- The tumor may cross the midline, and most patients show signs of metastatic disease at presentation.\n- Derived from the sympathetic nervous system, catecholamines and their metabolites are produced at increased levels.\n- Prognosis is based on age at presentation (older or younger than 1 year of age), tumor biology, and tumor histology.\n- Children less than 1 year of age have more advanced disease (B).\n- Amplification of the N-myc oncogene has an unfavorable prognosis.\n- High-risk groups have only a 20% long-term survival rate.\n- In infants, spontaneous regression has been well described.\n- In the mediastinum, they most often present in the posterior mediastinum (the most common location for neurogenic mediastinal tumors) (D).\n- Neuroblastoma is associated with various syndromes, including dancing eyes-dancing feet syndrome (cerebellar ataxia, nystagmus, involuntary movements), catecholamine release, periorbital metastasis (proptosis, periorbital ecchymosis), and skin metastasis (blueberry muffin appearance), and severe diarrhea (due to vasoactive intestinal polypeptide release).\n- Aniridia and hemihypertrophy are associated with Wilms tumor."
    },
    {
      "id": 39,
      "question_type": "mcq",
      "question": "During thyroidectomy the superior thyroid arteries were ligated a centimeter away from the thyroid capsule as opposed to immediately adjacent to it. This technical error would most likely result in which of the following complications?",
      "options": [
        "A. Voice fatigue",
        "B. Hoarseness",
        "C. Loss of airway",
        "D. Aspiration",
        "E. Ineffective cough"
      ],
      "answer": "A",
      "explanation": "- The external branch of the superior laryngeal nerve lies on the inferior pharyngeal constrictor muscle and descends alongside the superior thyroid artery before innervating the cricothyroid muscle.\n- Injury to the external superior laryngeal nerve results in inability to tense the ipsilateral vocal cord, difficulty hitting high notes, projecting the voice, and voice fatigue during prolonged speech.\n- Injury to the internal branch of the superior laryngeal nerve results in loss of sensory input from the pharynx and subsequent ineffective cough and/or aspiration (D, E).\n- Injury to the recurrent laryngeal nerve can cause vocal cord collapse and hoarseness (B).\n- Bilateral recurrent laryngeal nerve injury can result in loss of airway (C)."
    },
    {
      "id": 40,
      "question_type": "mcq",
      "question": "A 45-year-old woman with a history of a goiter presents to the emergency department with a high fever, heart rate of 130 beats per minute, tremors, sweating, and exophthalmos. Which of the following can exacerbate symptoms?",
      "options": [
        "A. Aspirin",
        "B. Propylthiouracil",
        "C. Beta-blocker",
        "D. Methimazole",
        "E. Steroids"
      ],
      "answer": "A",
      "explanation": "- In the follicular cell, inorganic iodide is trapped and transported across the basement membrane, then oxidized to iodine.\n- Iodine is coupled with tyrosine moieties, forming monoiodotyrosine or diiodotyrosine, catalyzed by thyroid peroxidase.\n- Two diiodotyrosine molecules couple to form T4, and one monoiodotyrosine and one diiodotyrosine combine to form T3, both bound to thyroglobulin.\n- In the periphery, approximately 70% to 75% of T3 and T4 are bound to thyroid-binding globulins, and most of the remainder to thyroid-binding prealbumin and albumin, leaving a small amount unbound or active.\n- T4 is relatively inactive but is present in larger amounts and is converted to the more active T3 in the liver, kidneys, pituitary, and other tissues.\n- Treatment of thyroid storm involves:\n    - Addressing ABCs, determining airway need, administering 100% oxygen, and starting aggressive fluid hydration.\n    - Decreasing new hormone synthesis.\n    - Inhibiting thyroid hormone release.\n    - Blocking peripheral effects of thyroid hormone.\n- Propylthiouracil and methimazole both inhibit oxidation of iodide to iodine and thyroid peroxidase-mediated coupling of iodotyrosines (D).\n- Propylthiouracil also inhibits T4 to T3 conversion (B).\n- Beta-blockers (e.g., propranolol) are useful in controlling adrenergic response to thyroid storm (C).\n- Propranolol also inhibits peripheral T4 to T3 conversion.\n- Steroids also inhibit peripheral T4 to T3 conversion (E).\n- Aspirin is contraindicated in thyroid storm as it is thought to decrease protein binding of thyroid hormones, potentially increasing unbound T3 and T4 levels."
    },
    {
      "id": 41,
      "question_type": "mcq",
      "question": "Which of the following is true regarding substernal goiter?",
      "options": [
        "A. Surgical resection should be reserved for patients with tracheal deviation.",
        "B. Most are primary mediastinal goiters with a blood supply arising from intrathoracic vessels.",
        "C. Most can be resected by a cervical incision.",
        "D. Most are highly responsive to prolonged thyroid suppression.",
        "E. Because of the risk of tracheomalacia, most patients should have a prophylactic tracheostomy at the time of resection."
      ],
      "answer": "C",
      "explanation": "- Substernal goiter is divided into primary and secondary forms.\n- Primary forms, originating in the mediastinum with intrathoracic blood supply, are very rare (B).\n- Most substernal goiters are extensions from cervical goiters.\n- Most surgeons recommend resection for the mere presence of a substernal goiter because most are symptomatic, and asymptomatic ones can cause progressive tracheal compression (A).\n- Additionally, they may harbor an unsuspected malignancy.\n- The majority can be successfully removed with a cervical collar incision.\n- Sternotomy is very rarely needed, and tracheostomy is also rare, as most can be intubated even with tracheal compression, often with a pediatric endotracheal tube (E).\n- They are not typically responsive to prolonged thyroid suppression (D)."
    },
    {
      "id": 42,
      "question_type": "mcq",
      "question": "The most common cause of primary adrenal insufficiency in the United States is:",
      "options": [
        "A. Autoimmune",
        "B. Tuberculosis",
        "C. Metastatic disease",
        "D. Adrenal hemorrhage",
        "E. Exogenous steroid use"
      ],
      "answer": "A",
      "explanation": "- Adrenal insufficiency has primary and secondary causes.\n- The most common cause of primary adrenal insufficiency in the United States is autoimmune adrenal atrophy.\n- The most common cause worldwide is tuberculosis (B).\n- Other less common causes include infections (fungal cytomegalovirus, human immunodeficiency virus), adrenal hemorrhage, metastases, and infiltrative disorders (amyloidosis) (C, D).\n- The most common cause of secondary adrenal insufficiency is exogenous glucocorticoid therapy, followed by bilateral adrenal resection and pituitary tumors (E).\n- Symptoms and signs of acute adrenal insufficiency include fever, nausea and vomiting, abdominal pain, hypotension, hyponatremia, and hyperkalemia.\n- It can readily be confused with septic shock.\n- The most specific test for adrenal insufficiency is the ACTH stimulation test.\n- Cortisol levels are measured at 1, 30, and 60 minutes.\n- Blood and urine cortisol levels normally rise with ACTH; failure to rise indicates adrenal insufficiency."
    },
    {
      "id": 43,
      "question_type": "mcq",
      "question": "The most common cause of Cushing syndrome aside from exogenous corticosteroid administration is:",
      "options": [
        "A. Adrenal cortical carcinoma",
        "B. Adrenal adenoma",
        "C. Corticotropin (ACTH)-producing pituitary adenoma",
        "D. Ectopic ACTH syndrome",
        "E. Ectopic corticotropin-releasing hormone syndrome"
      ],
      "answer": "C",
      "explanation": "- Progressive truncal obesity is the most common symptom of Cushing syndrome, but it is not specific.\n- Relatively specific findings include proximal muscle weakness, wide purple striae, spontaneous ecchymoses, and hypokalemic metabolic alkalosis.\n- Hirsutism and acne are also associated with Cushing syndrome but are not specific.\n- Cushing syndrome is most often due to exogenous corticosteroid administration.\n- The most common pathology associated with Cushing syndrome is an ACTH-producing pituitary adenoma, referred to as Cushing disease.\n- Causes of Cushing syndrome are divided into ACTH dependent (ACTH-producing pituitary adenoma, ectopic ACTH syndrome, and ectopic corticotropin-releasing hormone syndrome) and ACTH independent (adrenal carcinoma, adrenal adenoma, and adrenal hyperplasia) (A, B, D, E)."
    },
    {
      "id": 44,
      "question_type": "mcq",
      "question": "Which of the following is true regarding the renin-angiotensin system?",
      "options": [
        "A. The juxtaglomerular cells are located within the renal efferent arteriole.",
        "B. The juxtaglomerular cells secrete aldosterone in response to decreased blood pressure.",
        "C. The juxtaglomerular cells detect changes in chloride concentration in the renal tubule.",
        "D. Renin catalyzes the conversion of angiotensinogen to angiotensin I.",
        "E. Angiotensin I directly stimulates the production of aldosterone."
      ],
      "answer": "D",
      "explanation": "- The juxtaglomerular cells are modified smooth muscle cells located in the afferent arteriole of each glomerulus (A).\n- They synthesize the precursor prorenin, which is cleaved into the active proteolytic enzyme renin.\n- Renal hypoperfusion, decreased plasma sodium, and increased sympathetic activity are the major stimuli for renin secretion (B, C).\n- Renin initiates a sequence of steps beginning with cleavage of angiotensinogen (a protein produced in the liver) to form angiotensin I.\n- Angiotensin I is then converted to angiotensin II by angiotensin-converting enzyme, found primarily in the lung.\n- Angiotensin II causes systemic vasoconstriction and stimulates aldosterone synthesis and release by the adrenal gland, leading to sodium and water retention and expansion of the plasma volume (E).\n- In the glomerulus, it leads to vasoconstriction of the efferent arteriole, increasing glomerular pressure to maintain glomerular filtration rate despite systemic hypoperfusion."
    },
    {
      "id": 45,
      "question_type": "mcq",
      "question": "Which of the following is true regarding the anatomy/blood supply to the adrenal glands?",
      "options": [
        "A. The arterial blood supply is more constant than the venous drainage.",
        "B. Catheter-based venous hormonal sampling is easier to perform on the right adrenal vein.",
        "C. On the right, the adrenal vein drains into the right renal vein.",
        "D. Right adrenalectomy is more likely to lead to life-threatening hemorrhage than left adrenalectomy.",
        "E. The majority of the arterial blood supply arises from the celiac trunk."
      ],
      "answer": "D",
      "explanation": "- The arterial blood supply to the adrenal glands is highly variable, whereas the venous drainage is more constant (A).\n- The adrenal glands are supplied by three primary sources: the inferior phrenic artery, adrenal branches directly off the aorta, and branches from the renal artery (E).\n- Additional branches may arise from the intercostal and gonadal arteries.\n- A single left adrenal vein empties into the left renal vein and is relatively longer than the single right adrenal vein.\n- The single right adrenal vein is very short and enters the posterior aspect of the inferior vena cava (C).\n- Adrenalectomy (open and laparoscopic) is more challenging on the right side due to:\n    - The need to retract the liver (for a laparoscopic approach).\n    - The need to mobilize the duodenum.\n    - The short, posteriorly located adrenal vein that drains into the inferior vena cava, posing a risk of inferior vena cava hemorrhage.\n- Venous sampling of the right adrenal vein is also more challenging (B)."
    },
    {
      "id": 46,
      "question_type": "mcq",
      "question": "A 70-year-old man is found to have an incidental mass in his right adrenal gland on CT scan. He has no history of malignancy and has a normal blood pressure. The findings of the remainder of the history and physical examination are negative. Plasma free metanephrines are negative. The serum potassium level is normal. Urinary free cortisol is normal, and a 1-mg overnight dexamethasone suppression test shows a low cortisol level (1.5 µg/dL) the following morning. The mass is 4.5 cm on CT scan, has smooth borders, and has a low attenuation value. Which of the following is true regarding this condition?",
      "options": [
        "A. The patient should undergo a CT-guided needle biopsy.",
        "B. The patient should undergo a laparoscopic adrenalectomy.",
        "C. The patient should undergo an open adrenalectomy.",
        "D. A repeat CT scan should be performed in 6 months.",
        "E. The mass is most likely malignant."
      ],
      "answer": "D",
      "explanation": "- Incidentally discovered adrenal masses are common and termed adrenal incidentalomas.\n- Most are nonfunctioning cortical adenomas.\n- Differential diagnosis includes functional tumors (pheochromocytoma, aldosteronoma, cortisol producing), metastatic cancer (from lung, breast, melanoma), and adrenocortical carcinoma.\n- A careful history and physical examination should be performed to detect evidence of hormonal excess (hypertension, virilization, Cushing disease).\n- If the patient has hypertension and a low potassium level, plasma aldosterone and renin levels should be obtained.\n- If there is no evidence of hormonal excess, the following studies should still be obtained to rule out a functional tumor: plasma free metanephrines (for pheochromocytoma) and a 1-mg overnight dexamethasone suppression test (for cortisol-producing tumor).\n- In normal patients, a 1-mg overnight dexamethasone suppression test will markedly suppress endogenous cortisol production to <1.8 µg/dL.\n- Characteristics on the CT scan should be determined.\n- A mass with smooth borders, homogeneity, and low attenuation (using Hounsfield units) is very likely benign.\n- An irregular mass with evidence of local invasion, inhomogeneity, and a high attenuation score is of much more concern for malignancy (E).\n- Fine-needle aspiration biopsy is not helpful in distinguishing a benign adrenal adenoma from a malignant adrenocortical carcinoma (A).\n- Fine-needle aspiration biopsy would only be useful in patients with a history of malignancy to rule out an adrenal metastasis.\n- Surgery is generally recommended for functional adrenal adenomas, pheochromocytomas, masses with CT scan features suggestive of malignancy, and masses larger than 5 cm.\n- Once surgery is indicated, laparoscopic adrenalectomy has replaced open adrenalectomy for most indications.\n- Open adrenalectomy is still preferred for very large tumors (>6 cm) and particularly when malignancy is suspected (B, C).\n- For nonfunctional adrenal adenomas that do not fit the above criteria, a repeat CT scan in 6 months may be performed."
    },
    {
      "id": 47,
      "question_type": "mcq",
      "question": "Which of the following is true regarding the histology of the adrenal gland?",
      "options": [
        "A. The zona glomerulosa is the inner layer of the adrenal cortex.",
        "B. Cells in the zona fasciculata produce cortisol.",
        "C. Cells in the zona reticularis produce aldosterone.",
        "D. Medullary cells are chromaffin negative.",
        "E. The zona reticularis is the middle layer of the adrenal cortex."
      ],
      "answer": "B",
      "explanation": "- The adrenal gland is divided into the outer cortex and the inner medulla.\n- The cortex is further subdivided into three layers (\"GFR\": glomerulosa, fasciculata, reticularis).\n- The zona glomerulosa is the outermost layer and is responsible for aldosterone production (A).\n- The middle layer, the zona fasciculata, produces glucocorticoids.\n- The zona reticularis is the inner layer of the adrenal cortex (E).\n- Adrenal androgens are produced by the deepest cortical layer, the zona reticularis (C).\n- Cells of the adrenal medulla produce epinephrine (80%) and norepinephrine (20%).\n- Medullary cells are chromaffin positive (D)."
    },
    {
      "id": 48,
      "question_type": "mcq",
      "question": "A 38-year-old female with stage 2 chronic kidney disease is diagnosed with primary hyperparathyroidism. Preoperative localization studies indicate a single enlarged left inferior parathyroid gland. She undergoes minimally invasive single gland parathyroidectomy under local anesthesia. An enlarged gland is identified and removed. Intraoperative PTH levels are sent 10 minutes later, and a 40% drop in PTH from baseline is noted. Which of the following is true?",
      "options": [
        "A. One should proceed to four-gland exploration.",
        "B. Repeat PTH level should be obtained at 20 minutes.",
        "C. It is acceptable to close the wound.",
        "D. The vein from where the PTH was sampled does not affect PTH decline.",
        "E. The PTH decline is affected by the patient's kidney disease."
      ],
      "answer": "B",
      "explanation": "- In patients with primary hyperparathyroidism secondary to a single adenoma, removal of the enlarged gland is the preferred treatment, and biochemical cure is typically confirmed intraoperatively.\n- The Miami criteria outlines targeted PTH values after gland resection, with the criterion to conclude surgery being a greater than 50% drop in PTH level after gland removal.\n- Serum PTH has an estimated half-life of 3 minutes.\n- PTH sampling should first be performed at 10 minutes after gland removal and can be repeated after 20 minutes if the PTH level does not decrease by more than 50%.\n- Previously, older age, high body mass index, and poor renal function were thought to lead to insufficient PTH decline during surgical resection, but a recent JAMA Surgery study demonstrated these factors did not significantly impact PTH half-life.\n- The Miami Criteria can be used in these patients as well (E).\n- It would be inappropriate to proceed to a four-gland exploration or to close the wound without confirming biochemical cure (A, C).\n- If the baseline PTH level is sampled from the internal jugular vein ipsilateral to a single adenoma, the PTH level can take longer to drop, so longer wait times may be appropriate in this setting (D)."
    },
    {
      "id": 49,
      "question_type": "mcq",
      "question": "The hallmark of multiple endocrine neoplasia type 2 (MEN 2) is:",
      "options": [
        "A. Unilateral pheochromocytoma",
        "B. Bilateral pheochromocytoma",
        "C. Multifocal and bilateral medullary carcinoma of the thyroid",
        "D. Unifocal medullary carcinoma of the thyroid",
        "E. Four-gland parathyroid hyperplasia"
      ],
      "answer": "C",
      "explanation": "- The hallmark of MEN 2 is Medullary Thyroid Carcinoma (MTC).\n- Nearly 100% of MEN 2 patients eventually develop MTC.\n- Approximately 40% develop pheochromocytoma, and one-third have parathyroid hyperplasia (A, B, E).\n- MTC is characteristically multifocal and bilateral, presenting at a young age.\n- MTC is associated with C-cell hyperplasia.\n- It is caused by mutations in the RET proto-oncogene, which are present in all thyroid C cells, leading to multifocal MTC (D)."
    },
    {
      "id": 50,
      "question_type": "mcq",
      "question": "The most common cause of congenital adrenal hyperplasia is:",
      "options": [
        "A. 11β-Hydroxylase deficiency",
        "B. 3-Hydroxydehydrogenase deficiency",
        "C. 21-Hydroxylase deficiency",
        "D. 17-Hydroxylase deficiency",
        "E. Congenital adrenal lipoid hyperplasia"
      ],
      "answer": "C",
      "explanation": "- Congenital adrenal hyperplasia results from inherited enzyme deficiencies.\n- These deficiencies can lead to ambiguous genitalia, postnatal virilization, and problems with salt metabolism.\n- The most common enzyme defect is 21-hydroxylase deficiency (>90% of cases).\n- In its complete form, this deficiency leads to a decrease in both cortisol and aldosterone.\n- This results in ambiguous genitalia in females (due to androgen excess), salt wasting with hypernatremia, and hypokalemia.\n- The remaining answer choices can also cause congenital adrenal hyperplasia but are less commonly found (A, B, D, E)."
    },
    {
      "id": 51,
      "question_type": "mcq",
      "question": "A 45-year-old man with a history of primary hyperparathyroidism presents for an enlarged thyroid nodule. Further workup reveals an elevated calcitonin level. Which of the following is true regarding the most likely condition?",
      "options": [
        "A. Total thyroidectomy without central node dissection is indicated.",
        "B. Radiotherapy is an effective treatment modality.",
        "C. The majority are multicentric.",
        "D. The likelihood of nodal metastases is low.",
        "E. Chemotherapy is effective for residual disease."
      ],
      "answer": "C",
      "explanation": "- A patient with primary hyperparathyroidism, a newly enlarging thyroid nodule, and elevated calcitonin level likely has multiple endocrine neoplasm-2A (MEN-2A).\n- These patients are at risk for developing Medullary Thyroid Carcinoma (MTC).\n- Characteristics of MTC affecting surgical approach:\n    - MTC is more aggressive than other thyroid cancers, with higher recurrence and mortality rates.\n    - MTC does not take up radioactive iodine, and radiation therapy and chemotherapy are ineffective (B, E).\n    - MTC is multicentric in 90% of MEN-2 patients.\n    - In patients with palpable disease, more than 70% have nodal metastases (D).\n    - The ability to measure postoperative stimulated calcitonin levels allows assessment of surgical extraction adequacy.\n    - The two main factors affecting survival are stage and age at diagnosis (D).\n- Early detection via calcitonin screening in at-risk patients is a key factor in survival.\n- In one large study, biochemical cure predicted a 97.7% survival rate at 10 years.\n- Management of MTC includes total thyroidectomy with routine central node dissection (A).\n- MEN-2A is rare, and most MTCs are sporadic.\n- Sporadic cases are less likely to be multicentric than those associated with MEN-2.\n- Microscopically, a characteristic feature of MTC is the finding of abundant collagen and amyloid."
    },
    {
      "id": 52,
      "question_type": "mcq",
      "question": "The most accurate test for hyperthyroidism is:",
      "options": [
        "A. Free thyroxine (T4)",
        "B. Total T4",
        "C. Total triiodothyronine (T3)",
        "D. Thyroid-stimulating hormone (TSH)",
        "E. Thyroid scan"
      ],
      "answer": "D",
      "explanation": "- TSH is the most accurate test in hyperthyroidism, showing significant suppression in hyperthyroid states.\n- In most hyperthyroid states, free T4, total T4, and total T3 are elevated (A-C).\n- Thyroid scan is not used in the initial workup for hyperthyroidism (E)."
    },
    {
      "id": 53,
      "question_type": "mcq",
      "question": "Which of the following is true regarding the blood supply to the thyroid/parathyroid glands?",
      "options": [
        "A. The parathyroid glands are usually supplied by the superior thyroid arteries.",
        "B. The inferior thyroid artery is the first branch of the external carotid artery.",
        "C. The RLNs are at risk of injury during ligation of the superior thyroid arteries.",
        "D. The external branch of the superior laryngeal nerve is at risk of injury when the inferior laryngeal arteries are ligated.",
        "E. The thyroidea ima artery usually arises from the aorta."
      ],
      "answer": "E",
      "explanation": "- The thyroid gland is supplied by paired superior thyroid arteries (from external carotid arteries) and inferior thyroid arteries (from thyrocervical trunk).\n- The superior thyroid artery is the first branch of the external carotid artery (B).\n- During thyroidectomy, care must be taken when ligating the superior thyroid arteries to avoid injury to the external branch of the superior laryngeal nerve (D).\n- To avoid injury, ligating the artery and vein separately and close to the thyroid gland is recommended.\n- In approximately 3% of individuals, a thyroidea ima artery also provides blood to the thyroid gland and arises either from the aorta or the innominate artery.\n- When ligating the inferior thyroid arteries, care must be taken to avoid injury to the RLNs (C).\n- The inferior thyroid arteries usually supply the parathyroid glands (A).\n- Ligation of the main trunk of the inferior thyroid arteries during total thyroidectomy can lead to parathyroid gland ischemia.\n- There are three main pairs of veins draining the thyroid gland: the superior, middle, and inferior thyroid veins.\n- The middle veins are the least constant.\n- The superior and middle veins drain into the internal jugular veins, whereas the inferior veins drain into the brachiocephalic veins."
    },
    {
      "id": 54,
      "question_type": "mcq",
      "question": "Which of the following is true regarding the laryngeal nerves?",
      "options": [
        "A. The external branch of the superior laryngeal nerve provides sensation to the larynx.",
        "B. Bilateral injury to the superior laryngeal nerves often results in acute airway obstruction.",
        "C. The right RLN separates from the vagus after crossing the subclavian artery.",
        "D. The recurrent laryngeal nerve is both motor and sensory to the larynx.",
        "E. The RLNs provide motor function to the cricothyroid."
      ],
      "answer": "C",
      "explanation": "- The superior laryngeal nerve and RLN arise from the vagus nerve.\n- The superior laryngeal nerve divides into two branches: internal and external.\n- The internal branch is sensory to the supraglottic larynx, and injury during thyroid surgery, though rare, can lead to aspiration (A).\n- The external branch innervates the cricothyroid muscle.\n- Injury to the external superior laryngeal nerve causes inability to tense the ipsilateral vocal cord, resulting in voice fatigue and difficulty hitting high notes, but not hoarseness.\n- It is referred to as the \"high note\" nerve.\n- The left RLN loops around the aorta at the ligamentum arteriosum.\n- The right RLN loops around the right subclavian artery.\n- The RLN innervates the intrinsic muscles of the larynx, except the cricothyroid muscle (E).\n- Injury to one RLN leads to paralysis of the ipsilateral vocal cord, fixed in paramedian or abducted position.\n- Bilateral RLN injury may lead to airway obstruction and complete loss of voice (B).\n- The recurrent laryngeal nerve is both motor and sensory to the larynx (D)."
    },
    {
      "id": 55,
      "question_type": "mcq",
      "question": "A non-RLN:",
      "options": [
        "A. Does not exist",
        "B. Is more common on the left",
        "C. Can occur in conjunction with a recurrent nerve on the right",
        "D. Loops around the aorta on the right side",
        "E. Is less prone to injury during surgery than a recurrent nerve"
      ],
      "answer": "C",
      "explanation": "- A non-RLN is rare and occurs much more commonly on the right (A, B).\n- It branches off the vagus nerve in the neck and heads directly to the larynx, unlike the recurrent laryngeal nerve which arises from the vagus after passing the subclavian artery (D).\n- Its anomalous location makes it more prone to injury during surgery (E).\n- On the right, a patient can have both a nonrecurrent nerve and a recurrent nerve.\n- Nonrecurrent left laryngeal nerves have been reported but are extremely rare.\n- The RLN is most vulnerable to injury during the last 2 to 3 cm of its course, but can also be damaged if the surgeon is not alert to the possibility of nerve branches and nonrecurrent nerves, particularly on the right side."
    },
    {
      "id": 56,
      "question_type": "mcq",
      "question": "Which of the following is a direct effect of PTH?",
      "options": [
        "A. Stimulates hydroxylation of cholecalciferol in the kidney",
        "B. Stimulates reabsorption of phosphate by the kidney",
        "C. Stimulates reabsorption of bicarbonate by the kidney",
        "D. Stimulates absorption of calcium by the small intestine",
        "E. Stimulates hydroxylation of 25-hydroxyvitamin D in the kidney"
      ],
      "answer": "E",
      "explanation": "- PTH increases bone resorption by stimulating osteoclasts and inhibiting osteoblasts, leading to release of calcium and phosphate into circulation.\n- At the kidney, PTH limits calcium excretion at the distal convoluted tubule via an active transport mechanism.\n- PTH inhibits phosphate and bicarbonate reabsorption, leading to a mild metabolic acidosis (B, C).\n- PTH also enhances hydroxylation of 25-hydroxyvitamin D to 1,25-hydroxyvitamin D in the kidney.\n- 1,25-hydroxyvitamin D in turn directly increases intestinal calcium absorption (not a direct effect of PTH) (D).\n- Cholecalciferol is hydroxylated to 25-hydroxyvitamin D in the liver; this process is not regulated by PTH (A)."
    },
    {
      "id": 57,
      "question_type": "mcq",
      "question": "Lateral aberrant thyroid in most instances represents:",
      "options": [
        "A. Metastatic papillary carcinoma",
        "B. Metastatic follicular carcinoma",
        "C. Metastatic Hürthle cell carcinoma",
        "D. A congenital lesion related to thyroid descent",
        "E. An extension of a thyroglossal duct cyst"
      ],
      "answer": "A",
      "explanation": "- Lateral aberrant thyroid is a term used to denote what appears to be ectopic thyroid tissue found within the neck.\n- In most instances, it actually represents metastatic thyroid cancer within a lymph node, most often of the papillary type.\n- It is not typically associated with the remaining answer choices (B-E)."
    },
    {
      "id": 58,
      "question_type": "mcq",
      "question": "A 45-year-old woman presents with a 1.5-cm right thyroid nodule. FNA findings are consistent with papillary carcinoma. Her history is significant for radiation therapy for lymphoma as a child. Optimal management of this patient would consist of:",
      "options": [
        "A. Right hemithyroidectomy",
        "B. Right hemithyroidectomy plus central lymph node dissection",
        "C. Total thyroidectomy",
        "D. Total thyroidectomy with postoperative 131I",
        "E. Total thyroidectomy plus right modified radical neck dissection"
      ],
      "answer": "C",
      "explanation": "- The accepted management of low-risk papillary thyroid cancer is either right hemithyroidectomy or total thyroidectomy with or without postoperative 131I.\n- There is an increasing trend toward performing a total thyroidectomy.\n- In patients with papillary carcinoma with a history of radiation exposure, there is a higher rate of multicentricity.\n- As such, total thyroidectomy is the recommended procedure (A, B).\n- Postoperative radioactive iodine following total thyroidectomy is indicated for tumors larger than 4 cm, gross extrathyroidal extension, lymph node metastases, and high-risk features including tall-cell or columnar-cell variant (D).\n- An added advantage of postoperative radiation is that it allows for continued monitoring for recurrence with thyroglobulin.\n- Prophylactic central neck node dissection is gaining popularity.\n- Modified radical neck dissection would not be indicated unless there were obvious lateral neck nodes (E)."
    },
    {
      "id": 59,
      "question_type": "mcq",
      "question": "Which of the following is LEAST likely associated with hyperparathyroidism?",
      "options": [
        "A. Cholelithiasis",
        "B. Pancreatitis",
        "C. Osteoclastomas",
        "D. Diarrhea",
        "E. Peptic ulcer disease"
      ],
      "answer": "D",
      "explanation": "- Hyperparathyroidism is classically associated with \"stones\" (calcium phosphate or oxalate kidney stones), \"moans\" (vague abdominal pain, peptic ulcer disease, pancreatitis, gallstones, constipation), \"bones\" (bone pain, osteoporosis, osteitis fibrosa cystica, brown [osteoclastic] tumors), and \"psychiatric overtones\" (depression, fatigue).\n- Pancreatitis tends to occur in patients with very high serum calcium levels (>12.5 mg/dL).\n- Increased incidence of cholelithiasis is due to increased biliary calcium, leading to formation of calcium bilirubinate stones.\n- Diarrhea is not typically associated with hyperparathyroidism (A-C, E)."
    },
    {
      "id": 60,
      "question_type": "mcq",
      "question": "Following total thyroidectomy for follicular cancer, a 65-year-old female presents to the emergency department 4 days later complaining of circumoral numbness and tingling of her fingers. Phosphate level is normal. Which of the following is true about this condition?",
      "options": [
        "A. It likely represents hungry bone syndrome (HBS).",
        "B. It may lead to a shortened QT on ECG.",
        "C. The risk can be reduced by routine postoperative calcium and vitamin D supplementation.",
        "D. Most patients are symptomatic.",
        "E. It is more common with thyroidectomy for benign lesions."
      ],
      "answer": "C",
      "explanation": "- Transient hypocalcemia following total thyroidectomy is a known complication, occurring in 2% to 53% of patients.\n- The etiology is likely multifactorial, including reversible ischemia to the parathyroid glands, hypothermia to the glands, and endothelin-1 release (which suppresses PTH production).\n- Iatrogenic removal of one or several parathyroid glands is also possible during thyroidectomy and can contribute to postoperative hypocalcemia.\n- Patients with hypocalcemia can present with neuromuscular excitability, tetany (Chvostek sign), circumoral paresthesia, seizures, QT prolongation on ECG, and cardiac arrest (B).\n- However, most patients with transient hypocalcemia following thyroid surgery are asymptomatic (D).\n- Independent predictors of hypocalcemia following thyroidectomy include low postoperative PTH level, female gender, and patients with a malignant neoplasm (E).\n- Several studies show that routine postoperative administration of calcium and vitamin D can reduce the incidence and/or severity of hypocalcemia.\n- Hungry bone syndrome (HBS) is extremely rare.\n- HBS has been proposed as a possible contributing factor but occurs more frequently after parathyroid surgery.\n- Similar to PTH, thyroid hormone can also provide a stimulus to break down bone; once this stimulus is removed, bones attempt to replete calcium from serum, leading to HBS.\n- HBS typically presents with hypophosphatemia and hypomagnesemia and is usually seen in patients with severe preoperative bone disease (A)."
    }
  ]
}